{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nexport class LoginComponent {\n  constructor(auth) {\n    this.auth = auth;\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [Validators.required, Validators.pattern(/[a-zA-Z0-9_\\!\\?\\.]{3,}/)]),\n      password: new FormControl('', [Validators.required, Validators.pattern(/[a-zA-Z0-9_#%^\\!\\?\\.]{8,}/)])\n    });\n  }\n  onLogin() {\n    this.auth.login(this.loginForm.value).subscribe(msg => console.log(msg));\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 10,\n  vars: 1,\n  consts: [[\"ngsubmit\", \"onLogin()\", 3, \"formGroup\"], [\"matInput\", \"\", \"name\", \"username\", \"placeholder\", \"Username\", \"formControlName\", \"username\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\"], [\"mat-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [\"mat-button\", \"\", \"href\", \"/register\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-card\")(2, \"mat-form-field\");\n      i0.ɵɵelement(3, \"input\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"mat-form-field\");\n      i0.ɵɵelement(5, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 3);\n      i0.ɵɵtext(7, \"Log In\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"a\", 4);\n      i0.ɵɵtext(9, \"No account? Register here.\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;AAUnE,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;IACxB,cAAS,GAAG,IAAIJ,SAAS,CAAC;MACxBK,QAAQ,EAAE,IAAIN,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACK,QAAQ,EAAEL,UAAU,CAACM,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC;MAClGC,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACK,QAAQ,EAAEL,UAAU,CAACM,OAAO,CAAC,2BAA2B,CAAC,CAAC;KACrG,CAAC;EAJqC;EAMvCE,OAAO;IACL,IAAI,CAACL,IAAI,CAACM,KAAK,CAAC,IAAI,CAACC,SAAS,CAACC,KAAa,CAAC,CAACC,SAAS,CAAEC,GAAQ,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACzF;;AAVWZ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX3BC,+BAAmD;MAG3CA,2BAAmF;MACvFA,iBAAiB;MACjBA,sCAAgB;MACZA,2BAAmG;MACvGA,iBAAiB;MACjBA,iCAAiD;MAAAA,sBAAM;MAAAA,iBAAS;MAChEA,4BAA+B;MAAAA,0CAA0B;MAAAA,iBAAI;;;MAT3DA,yCAAuB","names":["FormControl","FormGroup","Validators","LoginComponent","constructor","auth","username","required","pattern","password","onLogin","login","loginForm","value","subscribe","msg","console","log","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/ludmilamalomuz/Desktop/Frontend projects/coffeeapp-pwa/coffeeapp2/src/app/login/login.component.ts","/Users/ludmilamalomuz/Desktop/Frontend projects/coffeeapp-pwa/coffeeapp2/src/app/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { User } from '../logic/User';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  constructor(private auth: AuthService){}\n  loginForm = new FormGroup({\n    username: new FormControl('', [Validators.required, Validators.pattern(/[a-zA-Z0-9_\\!\\?\\.]{3,}/)]),\n    password: new FormControl('', [Validators.required, Validators.pattern(/[a-zA-Z0-9_#%^\\!\\?\\.]{8,}/)]),\n  });\n  \n  onLogin(){\n    this.auth.login(this.loginForm.value as User).subscribe((msg: any) => console.log(msg));\n  }\n}\n","<form [formGroup]=\"loginForm\" ngsubmit=\"onLogin()\">\n<mat-card >\n    <mat-form-field>\n        <input matInput name=\"username\" placeholder=\"Username\" formControlName=\"username\"/>\n    </mat-form-field>\n    <mat-form-field>\n        <input matInput type=\"password\" name=\"password\" placeholder=\"Password\" formControlName=\"password\"/>\n    </mat-form-field>\n    <button mat-button color=\"primary\" type=\"submit\">Log In</button>\n    <a mat-button href=\"/register\">No account? Register here.</a>\n</mat-card>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}