{"ast":null,"code":"import * as i2$1 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, ViewChild, Optional, ViewChildren, ContentChild, ContentChildren, forwardRef, EventEmitter, Directive, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { MatRipple, mixinColor, mixinDisableRipple, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { take } from 'rxjs/operators';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used for a `MatSlider` to provide itself as a\n * parent to the `MatSliderThumb` and `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst _c0 = [\"knob\"];\nconst _c1 = [\"valueIndicatorContainer\"];\nfunction MatSliderVisualThumb_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4, 5)(2, \"div\", 6)(3, \"span\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.valueIndicatorText);\n  }\n}\nconst _c2 = [\"trackActive\"];\nfunction MatSlider_div_6_ng_container_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n  if (rf & 2) {\n    const tickMark_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(tickMark_r6 === 0 ? \"mdc-slider__tick-mark--active\" : \"mdc-slider__tick-mark--inactive\");\n    i0.ɵɵstyleProp(\"transform\", ctx_r5._calcTickMarkTransform(i_r7));\n  }\n}\nfunction MatSlider_div_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MatSlider_div_6_ng_container_2_div_1_Template, 1, 4, \"div\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4._tickMarks);\n  }\n}\nfunction MatSlider_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8, 9);\n    i0.ɵɵtemplate(2, MatSlider_div_6_ng_container_2_Template, 2, 1, \"ng-container\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1._cachedWidth);\n  }\n}\nfunction MatSlider_mat_slider_visual_thumb_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-slider-visual-thumb\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"discrete\", ctx_r2.discrete)(\"thumbPosition\", 1)(\"valueIndicatorText\", ctx_r2.startValueIndicatorText);\n  }\n}\nconst _c3 = [\"*\"];\nconst MAT_SLIDER = new InjectionToken('_MatSlider');\n/**\n * Injection token that can be used to query for a `MatSliderThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB = new InjectionToken('_MatSliderThumb');\n/**\n * Injection token that can be used to query for a `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB = new InjectionToken('_MatSliderRangeThumb');\n/**\n * Injection token that can be used to query for a `MatSliderVisualThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_VISUAL_THUMB = new InjectionToken('_MatSliderVisualThumb');\n/**\n * A simple change event emitted by the MatSlider component.\n * @deprecated Use event bindings directly on the MatSliderThumbs for `change` and `input` events. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatSliderChange {}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The visual slider thumb.\n *\n * Handles the slider thumb ripple states (hover, focus, and active),\n * and displaying the value tooltip on discrete sliders.\n * @docs-private\n */\nclass MatSliderVisualThumb {\n  constructor(_cdr, _ngZone, _elementRef, _slider) {\n    this._cdr = _cdr;\n    this._ngZone = _ngZone;\n    this._slider = _slider;\n    /** Whether the slider thumb is currently being hovered. */\n    this._isHovered = false;\n    /** Whether the slider thumb is currently being pressed. */\n    this._isActive = false;\n    /** Whether the value indicator tooltip is visible. */\n    this._isValueIndicatorVisible = false;\n    this._onPointerMove = event => {\n      if (this._sliderInput._isFocused) {\n        return;\n      }\n      const rect = this._hostElement.getBoundingClientRect();\n      const isHovered = this._isSliderThumbHovered(event, rect);\n      this._isHovered = isHovered;\n      if (isHovered) {\n        this._showHoverRipple();\n      } else {\n        this._hideRipple(this._hoverRippleRef);\n      }\n    };\n    this._onMouseLeave = () => {\n      this._isHovered = false;\n      this._hideRipple(this._hoverRippleRef);\n    };\n    this._onFocus = () => {\n      // We don't want to show the hover ripple on top of the focus ripple.\n      // Happen when the users cursor is over a thumb and then the user tabs to it.\n      this._hideRipple(this._hoverRippleRef);\n      this._showFocusRipple();\n      this._hostElement.classList.add('mdc-slider__thumb--focused');\n    };\n    this._onBlur = () => {\n      // Happens when the user tabs away while still dragging a thumb.\n      if (!this._isActive) {\n        this._hideRipple(this._focusRippleRef);\n      }\n      // Happens when the user tabs away from a thumb but their cursor is still over it.\n      if (this._isHovered) {\n        this._showHoverRipple();\n      }\n      this._hostElement.classList.remove('mdc-slider__thumb--focused');\n    };\n    this._onDragStart = () => {\n      this._isActive = true;\n      this._showActiveRipple();\n    };\n    this._onDragEnd = () => {\n      this._isActive = false;\n      this._hideRipple(this._activeRippleRef);\n      // Happens when the user starts dragging a thumb, tabs away, and then stops dragging.\n      if (!this._sliderInput._isFocused) {\n        this._hideRipple(this._focusRippleRef);\n      }\n    };\n    this._hostElement = _elementRef.nativeElement;\n  }\n  ngAfterViewInit() {\n    this._ripple.radius = 24;\n    this._sliderInput = this._slider._getInput(this.thumbPosition);\n    this._sliderInputEl = this._sliderInput._hostElement;\n    const input = this._sliderInputEl;\n    // These listeners don't update any data bindings so we bind them outside\n    // of the NgZone to prevent Angular from needlessly running change detection.\n    this._ngZone.runOutsideAngular(() => {\n      input.addEventListener('pointermove', this._onPointerMove);\n      input.addEventListener('pointerdown', this._onDragStart);\n      input.addEventListener('pointerup', this._onDragEnd);\n      input.addEventListener('pointerleave', this._onMouseLeave);\n      input.addEventListener('focus', this._onFocus);\n      input.addEventListener('blur', this._onBlur);\n    });\n  }\n  ngOnDestroy() {\n    const input = this._sliderInputEl;\n    input.removeEventListener('pointermove', this._onPointerMove);\n    input.removeEventListener('pointerdown', this._onDragStart);\n    input.removeEventListener('pointerup', this._onDragEnd);\n    input.removeEventListener('pointerleave', this._onMouseLeave);\n    input.removeEventListener('focus', this._onFocus);\n    input.removeEventListener('blur', this._onBlur);\n  }\n  /** Handles displaying the hover ripple. */\n  _showHoverRipple() {\n    if (!this._isShowingRipple(this._hoverRippleRef)) {\n      this._hoverRippleRef = this._showRipple({\n        enterDuration: 0,\n        exitDuration: 0\n      });\n      this._hoverRippleRef?.element.classList.add('mat-mdc-slider-hover-ripple');\n    }\n  }\n  /** Handles displaying the focus ripple. */\n  _showFocusRipple() {\n    // Show the focus ripple event if noop animations are enabled.\n    if (!this._isShowingRipple(this._focusRippleRef)) {\n      this._focusRippleRef = this._showRipple({\n        enterDuration: 0,\n        exitDuration: 0\n      }, true);\n      this._focusRippleRef?.element.classList.add('mat-mdc-slider-focus-ripple');\n    }\n  }\n  /** Handles displaying the active ripple. */\n  _showActiveRipple() {\n    if (!this._isShowingRipple(this._activeRippleRef)) {\n      this._activeRippleRef = this._showRipple({\n        enterDuration: 225,\n        exitDuration: 400\n      });\n      this._activeRippleRef?.element.classList.add('mat-mdc-slider-active-ripple');\n    }\n  }\n  /** Whether the given rippleRef is currently fading in or visible. */\n  _isShowingRipple(rippleRef) {\n    return rippleRef?.state === 0 /* RippleState.FADING_IN */ || rippleRef?.state === 1 /* RippleState.VISIBLE */;\n  }\n  /** Manually launches the slider thumb ripple using the specified ripple animation config. */\n  _showRipple(animation, ignoreGlobalRippleConfig) {\n    if (this._slider.disabled) {\n      return;\n    }\n    this._showValueIndicator();\n    if (this._slider._isRange) {\n      const sibling = this._slider._getThumb(this.thumbPosition === 1 /* _MatThumb.START */ ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */);\n      sibling._showValueIndicator();\n    }\n    if (this._slider._globalRippleOptions?.disabled && !ignoreGlobalRippleConfig) {\n      return;\n    }\n    return this._ripple.launch({\n      animation: this._slider._noopAnimations ? {\n        enterDuration: 0,\n        exitDuration: 0\n      } : animation,\n      centered: true,\n      persistent: true\n    });\n  }\n  /**\n   * Fades out the given ripple.\n   * Also hides the value indicator if no ripple is showing.\n   */\n  _hideRipple(rippleRef) {\n    rippleRef?.fadeOut();\n    if (this._isShowingAnyRipple()) {\n      return;\n    }\n    if (!this._slider._isRange) {\n      this._hideValueIndicator();\n    }\n    const sibling = this._getSibling();\n    if (!sibling._isShowingAnyRipple()) {\n      this._hideValueIndicator();\n      sibling._hideValueIndicator();\n    }\n  }\n  /** Shows the value indicator ui. */\n  _showValueIndicator() {\n    this._hostElement.classList.add('mdc-slider__thumb--with-indicator');\n  }\n  /** Hides the value indicator ui. */\n  _hideValueIndicator() {\n    this._hostElement.classList.remove('mdc-slider__thumb--with-indicator');\n  }\n  _getSibling() {\n    return this._slider._getThumb(this.thumbPosition === 1 /* _MatThumb.START */ ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */);\n  }\n  /** Gets the value indicator container's native HTML element. */\n  _getValueIndicatorContainer() {\n    return this._valueIndicatorContainer?.nativeElement;\n  }\n  /** Gets the native HTML element of the slider thumb knob. */\n  _getKnob() {\n    return this._knob.nativeElement;\n  }\n  _isShowingAnyRipple() {\n    return this._isShowingRipple(this._hoverRippleRef) || this._isShowingRipple(this._focusRippleRef) || this._isShowingRipple(this._activeRippleRef);\n  }\n  _isSliderThumbHovered(event, rect) {\n    const radius = rect.width / 2;\n    const centerX = rect.x + radius;\n    const centerY = rect.y + radius;\n    const dx = event.clientX - centerX;\n    const dy = event.clientY - centerY;\n    return Math.pow(dx, 2) + Math.pow(dy, 2) < Math.pow(radius, 2);\n  }\n}\nMatSliderVisualThumb.ɵfac = function MatSliderVisualThumb_Factory(t) {\n  return new (t || MatSliderVisualThumb)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_SLIDER));\n};\nMatSliderVisualThumb.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatSliderVisualThumb,\n  selectors: [[\"mat-slider-visual-thumb\"]],\n  viewQuery: function MatSliderVisualThumb_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatRipple, 5);\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._ripple = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._knob = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._valueIndicatorContainer = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mdc-slider__thumb\", \"mat-mdc-slider-visual-thumb\"],\n  inputs: {\n    discrete: \"discrete\",\n    thumbPosition: \"thumbPosition\",\n    valueIndicatorText: \"valueIndicatorText\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_SLIDER_VISUAL_THUMB,\n    useExisting: MatSliderVisualThumb\n  }])],\n  decls: 4,\n  vars: 2,\n  consts: [[\"class\", \"mdc-slider__value-indicator-container\", 4, \"ngIf\"], [1, \"mdc-slider__thumb-knob\"], [\"knob\", \"\"], [\"matRipple\", \"\", 1, \"mat-mdc-focus-indicator\", 3, \"matRippleDisabled\"], [1, \"mdc-slider__value-indicator-container\"], [\"valueIndicatorContainer\", \"\"], [1, \"mdc-slider__value-indicator\"], [1, \"mdc-slider__value-indicator-text\"]],\n  template: function MatSliderVisualThumb_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, MatSliderVisualThumb_div_0_Template, 5, 1, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1, 2)(3, \"div\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.discrete);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"matRippleDisabled\", true);\n    }\n  },\n  dependencies: [i3.NgIf, i2.MatRipple],\n  styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderVisualThumb, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slider-visual-thumb',\n      host: {\n        'class': 'mdc-slider__thumb mat-mdc-slider-visual-thumb'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_SLIDER_VISUAL_THUMB,\n        useExisting: MatSliderVisualThumb\n      }],\n      template: \"<div class=\\\"mdc-slider__value-indicator-container\\\" *ngIf=\\\"discrete\\\" #valueIndicatorContainer>\\n  <div class=\\\"mdc-slider__value-indicator\\\">\\n    <span class=\\\"mdc-slider__value-indicator-text\\\">{{valueIndicatorText}}</span>\\n  </div>\\n</div>\\n<div class=\\\"mdc-slider__thumb-knob\\\" #knob></div>\\n<div matRipple class=\\\"mat-mdc-focus-indicator\\\" [matRippleDisabled]=\\\"true\\\"></div>\\n\",\n      styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_SLIDER]\n      }]\n    }];\n  }, {\n    discrete: [{\n      type: Input\n    }],\n    thumbPosition: [{\n      type: Input\n    }],\n    valueIndicatorText: [{\n      type: Input\n    }],\n    _ripple: [{\n      type: ViewChild,\n      args: [MatRipple]\n    }],\n    _knob: [{\n      type: ViewChild,\n      args: ['knob']\n    }],\n    _valueIndicatorContainer: [{\n      type: ViewChild,\n      args: ['valueIndicatorContainer']\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(wagnermaciel): maybe handle the following edge case:\n// 1. start dragging discrete slider\n// 2. tab to disable checkbox\n// 3. without ending drag, disable the slider\n// Boilerplate for applying mixins to MatSlider.\nconst _MatSliderMixinBase = mixinColor(mixinDisableRipple(class {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n}), 'primary');\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderMixinBase {\n  constructor(_ngZone, _cdr, _platform, elementRef, _dir, _globalRippleOptions, animationMode) {\n    super(elementRef);\n    this._ngZone = _ngZone;\n    this._cdr = _cdr;\n    this._platform = _platform;\n    this._dir = _dir;\n    this._globalRippleOptions = _globalRippleOptions;\n    this._disabled = false;\n    this._discrete = false;\n    this._showTickMarks = false;\n    this._min = 0;\n    this._max = 100;\n    this._step = 0;\n    /**\n     * Function that will be used to format the value before it is displayed\n     * in the thumb label. Can be used to format very large number in order\n     * for them to fit into the slider thumb.\n     */\n    this.displayWith = value => `${value}`;\n    this._rippleRadius = 24;\n    // The value indicator tooltip text for the visual slider thumb(s).\n    /** @docs-private */\n    this.startValueIndicatorText = '';\n    /** @docs-private */\n    this.endValueIndicatorText = '';\n    this._isRange = false;\n    /** Whether the slider is rtl. */\n    this._isRtl = false;\n    this._hasViewInitialized = false;\n    /**\n     * The width of the tick mark track.\n     * The tick mark track width is different from full track width\n     */\n    this._tickMarkTrackWidth = 0;\n    this._hasAnimation = false;\n    this._resizeTimer = null;\n    /** The radius of the native slider's knob. AFAIK there is no way to avoid hardcoding this. */\n    this._knobRadius = 8;\n    /** Whether or not the slider thumbs overlap. */\n    this._thumbsOverlap = false;\n    this._noopAnimations = animationMode === 'NoopAnimations';\n    this._dirChangeSubscription = this._dir.change.subscribe(() => this._onDirChange());\n    this._isRtl = this._dir.value === 'rtl';\n  }\n  /** Whether the slider is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(v) {\n    this._disabled = coerceBooleanProperty(v);\n    const endInput = this._getInput(2 /* _MatThumb.END */);\n    const startInput = this._getInput(1 /* _MatThumb.START */);\n    if (endInput) {\n      endInput.disabled = this._disabled;\n    }\n    if (startInput) {\n      startInput.disabled = this._disabled;\n    }\n  }\n  /** Whether the slider displays a numeric value label upon pressing the thumb. */\n  get discrete() {\n    return this._discrete;\n  }\n  set discrete(v) {\n    this._discrete = coerceBooleanProperty(v);\n  }\n  /** Whether the slider displays tick marks along the slider track. */\n  get showTickMarks() {\n    return this._showTickMarks;\n  }\n  set showTickMarks(v) {\n    this._showTickMarks = coerceBooleanProperty(v);\n  }\n  /** The minimum value that the slider can have. */\n  get min() {\n    return this._min;\n  }\n  set min(v) {\n    const min = coerceNumberProperty(v, this._min);\n    if (this._min !== min) {\n      this._updateMin(min);\n    }\n  }\n  _updateMin(min) {\n    const prevMin = this._min;\n    this._min = min;\n    this._isRange ? this._updateMinRange({\n      old: prevMin,\n      new: min\n    }) : this._updateMinNonRange(min);\n    this._onMinMaxOrStepChange();\n  }\n  _updateMinRange(min) {\n    const endInput = this._getInput(2 /* _MatThumb.END */);\n    const startInput = this._getInput(1 /* _MatThumb.START */);\n    const oldEndValue = endInput.value;\n    const oldStartValue = startInput.value;\n    startInput.min = min.new;\n    endInput.min = Math.max(min.new, startInput.value);\n    startInput.max = Math.min(endInput.max, endInput.value);\n    startInput._updateWidthInactive();\n    endInput._updateWidthInactive();\n    min.new < min.old ? this._onTranslateXChangeBySideEffect(endInput, startInput) : this._onTranslateXChangeBySideEffect(startInput, endInput);\n    if (oldEndValue !== endInput.value) {\n      this._onValueChange(endInput);\n    }\n    if (oldStartValue !== startInput.value) {\n      this._onValueChange(startInput);\n    }\n  }\n  _updateMinNonRange(min) {\n    const input = this._getInput(2 /* _MatThumb.END */);\n    if (input) {\n      const oldValue = input.value;\n      input.min = min;\n      input._updateThumbUIByValue();\n      this._updateTrackUI(input);\n      if (oldValue !== input.value) {\n        this._onValueChange(input);\n      }\n    }\n  }\n  /** The maximum value that the slider can have. */\n  get max() {\n    return this._max;\n  }\n  set max(v) {\n    const max = coerceNumberProperty(v, this._max);\n    if (this._max !== max) {\n      this._updateMax(max);\n    }\n  }\n  _updateMax(max) {\n    const prevMax = this._max;\n    this._max = max;\n    this._isRange ? this._updateMaxRange({\n      old: prevMax,\n      new: max\n    }) : this._updateMaxNonRange(max);\n    this._onMinMaxOrStepChange();\n  }\n  _updateMaxRange(max) {\n    const endInput = this._getInput(2 /* _MatThumb.END */);\n    const startInput = this._getInput(1 /* _MatThumb.START */);\n    const oldEndValue = endInput.value;\n    const oldStartValue = startInput.value;\n    endInput.max = max.new;\n    startInput.max = Math.min(max.new, endInput.value);\n    endInput.min = startInput.value;\n    endInput._updateWidthInactive();\n    startInput._updateWidthInactive();\n    max.new > max.old ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput);\n    if (oldEndValue !== endInput.value) {\n      this._onValueChange(endInput);\n    }\n    if (oldStartValue !== startInput.value) {\n      this._onValueChange(startInput);\n    }\n  }\n  _updateMaxNonRange(max) {\n    const input = this._getInput(2 /* _MatThumb.END */);\n    if (input) {\n      const oldValue = input.value;\n      input.max = max;\n      input._updateThumbUIByValue();\n      this._updateTrackUI(input);\n      if (oldValue !== input.value) {\n        this._onValueChange(input);\n      }\n    }\n  }\n  /** The values at which the thumb will snap. */\n  get step() {\n    return this._step;\n  }\n  set step(v) {\n    const step = coerceNumberProperty(v, this._step);\n    if (this._step !== step) {\n      this._updateStep(step);\n    }\n  }\n  _updateStep(step) {\n    this._step = step;\n    this._isRange ? this._updateStepRange() : this._updateStepNonRange();\n    this._onMinMaxOrStepChange();\n  }\n  _updateStepRange() {\n    const endInput = this._getInput(2 /* _MatThumb.END */);\n    const startInput = this._getInput(1 /* _MatThumb.START */);\n    const oldEndValue = endInput.value;\n    const oldStartValue = startInput.value;\n    const prevStartValue = startInput.value;\n    endInput.min = this._min;\n    startInput.max = this._max;\n    endInput.step = this._step;\n    startInput.step = this._step;\n    if (this._platform.SAFARI) {\n      endInput.value = endInput.value;\n      startInput.value = startInput.value;\n    }\n    endInput.min = Math.max(this._min, startInput.value);\n    startInput.max = Math.min(this._max, endInput.value);\n    startInput._updateWidthInactive();\n    endInput._updateWidthInactive();\n    endInput.value < prevStartValue ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput);\n    if (oldEndValue !== endInput.value) {\n      this._onValueChange(endInput);\n    }\n    if (oldStartValue !== startInput.value) {\n      this._onValueChange(startInput);\n    }\n  }\n  _updateStepNonRange() {\n    const input = this._getInput(2 /* _MatThumb.END */);\n    if (input) {\n      const oldValue = input.value;\n      input.step = this._step;\n      if (this._platform.SAFARI) {\n        input.value = input.value;\n      }\n      input._updateThumbUIByValue();\n      if (oldValue !== input.value) {\n        this._onValueChange(input);\n      }\n    }\n  }\n  ngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      this._updateDimensions();\n    }\n    const eInput = this._getInput(2 /* _MatThumb.END */);\n    const sInput = this._getInput(1 /* _MatThumb.START */);\n    this._isRange = !!eInput && !!sInput;\n    this._cdr.detectChanges();\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      _validateInputs(this._isRange, this._getInput(2 /* _MatThumb.END */), this._getInput(1 /* _MatThumb.START */));\n    }\n\n    const thumb = this._getThumb(2 /* _MatThumb.END */);\n    this._rippleRadius = thumb._ripple.radius;\n    this._inputPadding = this._rippleRadius - this._knobRadius;\n    this._inputOffset = this._knobRadius;\n    this._isRange ? this._initUIRange(eInput, sInput) : this._initUINonRange(eInput);\n    this._updateTrackUI(eInput);\n    this._updateTickMarkUI();\n    this._updateTickMarkTrackUI();\n    this._observeHostResize();\n    this._cdr.detectChanges();\n  }\n  _initUINonRange(eInput) {\n    eInput.initProps();\n    eInput.initUI();\n    this._updateValueIndicatorUI(eInput);\n    this._hasViewInitialized = true;\n    eInput._updateThumbUIByValue();\n  }\n  _initUIRange(eInput, sInput) {\n    eInput.initProps();\n    eInput.initUI();\n    sInput.initProps();\n    sInput.initUI();\n    eInput._updateMinMax();\n    sInput._updateMinMax();\n    eInput._updateStaticStyles();\n    sInput._updateStaticStyles();\n    this._updateValueIndicatorUI(eInput);\n    this._updateValueIndicatorUI(sInput);\n    this._hasViewInitialized = true;\n    eInput._updateThumbUIByValue();\n    sInput._updateThumbUIByValue();\n  }\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    this._resizeObserver?.disconnect();\n    this._resizeObserver = null;\n  }\n  /** Handles updating the slider ui after a dir change. */\n  _onDirChange() {\n    this._isRtl = this._dir.value === 'rtl';\n    this._isRange ? this._onDirChangeRange() : this._onDirChangeNonRange();\n    this._updateTickMarkUI();\n  }\n  _onDirChangeRange() {\n    const endInput = this._getInput(2 /* _MatThumb.END */);\n    const startInput = this._getInput(1 /* _MatThumb.START */);\n    endInput._setIsLeftThumb();\n    startInput._setIsLeftThumb();\n    endInput.translateX = endInput._calcTranslateXByValue();\n    startInput.translateX = startInput._calcTranslateXByValue();\n    endInput._updateStaticStyles();\n    startInput._updateStaticStyles();\n    endInput._updateWidthInactive();\n    startInput._updateWidthInactive();\n    endInput._updateThumbUIByValue();\n    startInput._updateThumbUIByValue();\n  }\n  _onDirChangeNonRange() {\n    const input = this._getInput(2 /* _MatThumb.END */);\n    input._updateThumbUIByValue();\n  }\n  /** Starts observing and updating the slider if the host changes its size. */\n  _observeHostResize() {\n    if (typeof ResizeObserver === 'undefined' || !ResizeObserver) {\n      return;\n    }\n    this._ngZone.runOutsideAngular(() => {\n      this._resizeObserver = new ResizeObserver(() => {\n        if (this._isActive()) {\n          return;\n        }\n        if (this._resizeTimer) {\n          clearTimeout(this._resizeTimer);\n        }\n        this._onResize();\n      });\n      this._resizeObserver.observe(this._elementRef.nativeElement);\n    });\n  }\n  /** Whether any of the thumbs are currently active. */\n  _isActive() {\n    return this._getThumb(1 /* _MatThumb.START */)._isActive || this._getThumb(2 /* _MatThumb.END */)._isActive;\n  }\n  _getValue(thumbPosition = 2 /* _MatThumb.END */) {\n    const input = this._getInput(thumbPosition);\n    if (!input) {\n      return this.min;\n    }\n    return input.value;\n  }\n  _skipUpdate() {\n    return !!(this._getInput(1 /* _MatThumb.START */)?._skipUIUpdate || this._getInput(2 /* _MatThumb.END */)?._skipUIUpdate);\n  }\n  /** Stores the slider dimensions. */\n  _updateDimensions() {\n    const rect = this._elementRef.nativeElement.getBoundingClientRect();\n    this._cachedWidth = rect.width;\n    this._cachedLeft = rect.left;\n  }\n  /** Sets the styles for the active portion of the track. */\n  _setTrackActiveStyles(styles) {\n    const trackStyle = this._trackActive.nativeElement.style;\n    const animationOriginChanged = styles.left !== trackStyle.left && styles.right !== trackStyle.right;\n    trackStyle.left = styles.left;\n    trackStyle.right = styles.right;\n    trackStyle.transformOrigin = styles.transformOrigin;\n    if (animationOriginChanged) {\n      this._elementRef.nativeElement.classList.add('mat-mdc-slider-disable-track-animation');\n      this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n        this._elementRef.nativeElement.classList.remove('mat-mdc-slider-disable-track-animation');\n        trackStyle.transform = styles.transform;\n      });\n    } else {\n      trackStyle.transform = styles.transform;\n    }\n  }\n  /** Returns the translateX positioning for a tick mark based on it's index. */\n  _calcTickMarkTransform(index) {\n    // TODO(wagnermaciel): See if we can avoid doing this and just using flex to position these.\n    const translateX = index * (this._tickMarkTrackWidth / (this._tickMarks.length - 1));\n    return `translateX(${translateX}px`;\n  }\n  // Handlers for updating the slider ui.\n  _onTranslateXChange(source) {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    this._updateThumbUI(source);\n    this._updateTrackUI(source);\n    this._updateOverlappingThumbUI(source);\n  }\n  _onTranslateXChangeBySideEffect(input1, input2) {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    input1._updateThumbUIByValue();\n    input2._updateThumbUIByValue();\n  }\n  _onValueChange(source) {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    this._updateValueIndicatorUI(source);\n    this._updateTickMarkUI();\n    this._cdr.detectChanges();\n  }\n  _onMinMaxOrStepChange() {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    this._updateTickMarkUI();\n    this._updateTickMarkTrackUI();\n    this._cdr.markForCheck();\n  }\n  _onResize() {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    this._updateDimensions();\n    if (this._isRange) {\n      const eInput = this._getInput(2 /* _MatThumb.END */);\n      const sInput = this._getInput(1 /* _MatThumb.START */);\n      eInput._updateThumbUIByValue();\n      sInput._updateThumbUIByValue();\n      eInput._updateStaticStyles();\n      sInput._updateStaticStyles();\n      eInput._updateMinMax();\n      sInput._updateMinMax();\n      eInput._updateWidthInactive();\n      sInput._updateWidthInactive();\n    } else {\n      const eInput = this._getInput(2 /* _MatThumb.END */);\n      if (eInput) {\n        eInput._updateThumbUIByValue();\n      }\n    }\n    this._updateTickMarkUI();\n    this._updateTickMarkTrackUI();\n    this._cdr.detectChanges();\n  }\n  /** Returns true if the slider knobs are overlapping one another. */\n  _areThumbsOverlapping() {\n    const startInput = this._getInput(1 /* _MatThumb.START */);\n    const endInput = this._getInput(2 /* _MatThumb.END */);\n    if (!startInput || !endInput) {\n      return false;\n    }\n    return endInput.translateX - startInput.translateX < 20;\n  }\n  /**\n   * Updates the class names of overlapping slider thumbs so\n   * that the current active thumb is styled to be on \"top\".\n   */\n  _updateOverlappingThumbClassNames(source) {\n    const sibling = source.getSibling();\n    const sourceThumb = this._getThumb(source.thumbPosition);\n    const siblingThumb = this._getThumb(sibling.thumbPosition);\n    siblingThumb._hostElement.classList.remove('mdc-slider__thumb--top');\n    sourceThumb._hostElement.classList.toggle('mdc-slider__thumb--top', this._thumbsOverlap);\n  }\n  /** Updates the UI of slider thumbs when they begin or stop overlapping. */\n  _updateOverlappingThumbUI(source) {\n    if (!this._isRange || this._skipUpdate()) {\n      return;\n    }\n    if (this._thumbsOverlap !== this._areThumbsOverlapping()) {\n      this._thumbsOverlap = !this._thumbsOverlap;\n      this._updateOverlappingThumbClassNames(source);\n    }\n  }\n  // _MatThumb styles update conditions\n  //\n  // 1. TranslateX, resize, or dir change\n  //    - Reason: The thumb styles need to be updated according to the new translateX.\n  // 2. Min, max, or step\n  //    - Reason: The value may have silently changed.\n  /** Updates the translateX of the given thumb. */\n  _updateThumbUI(source) {\n    if (this._skipUpdate()) {\n      return;\n    }\n    const thumb = this._getThumb(source.thumbPosition === 2 /* _MatThumb.END */ ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */);\n    thumb._hostElement.style.transform = `translateX(${source.translateX}px)`;\n  }\n  // Value indicator text update conditions\n  //\n  // 1. Value\n  //    - Reason: The value displayed needs to be updated.\n  // 2. Min, max, or step\n  //    - Reason: The value may have silently changed.\n  /** Updates the value indicator tooltip ui for the given thumb. */\n  _updateValueIndicatorUI(source) {\n    if (this._skipUpdate()) {\n      return;\n    }\n    const valuetext = this.displayWith(source.value);\n    this._hasViewInitialized ? source._valuetext = valuetext : source._hostElement.setAttribute('aria-valuetext', valuetext);\n    if (this.discrete) {\n      source.thumbPosition === 1 /* _MatThumb.START */ ? this.startValueIndicatorText = valuetext : this.endValueIndicatorText = valuetext;\n      const visualThumb = this._getThumb(source.thumbPosition);\n      valuetext.length < 3 ? visualThumb._hostElement.classList.add('mdc-slider__thumb--short-value') : visualThumb._hostElement.classList.remove('mdc-slider__thumb--short-value');\n    }\n  }\n  // Update Tick Mark Track Width\n  //\n  // 1. Min, max, or step\n  //    - Reason: The maximum reachable value may have changed.\n  //    - Side note: The maximum reachable value is different from the maximum value set by the\n  //      user. For example, a slider with [min: 5, max: 100, step: 10] would have a maximum\n  //      reachable value of 95.\n  // 2. Resize\n  //    - Reason: The position for the maximum reachable value needs to be recalculated.\n  /** Updates the width of the tick mark track. */\n  _updateTickMarkTrackUI() {\n    if (this._skipUpdate()) {\n      return;\n    }\n    const step = this._step && this._step > 0 ? this._step : 1;\n    const maxValue = Math.floor(this.max / step) * step;\n    const percentage = (maxValue - this.min) / (this.max - this.min);\n    this._tickMarkTrackWidth = this._cachedWidth * percentage - 6;\n  }\n  // Track active update conditions\n  //\n  // 1. TranslateX\n  //    - Reason: The track active should line up with the new thumb position.\n  // 2. Min or max\n  //    - Reason #1: The 'active' percentage needs to be recalculated.\n  //    - Reason #2: The value may have silently changed.\n  // 3. Step\n  //    - Reason: The value may have silently changed causing the thumb(s) to shift.\n  // 4. Dir change\n  //    - Reason: The track active will need to be updated according to the new thumb position(s).\n  // 5. Resize\n  //    - Reason: The total width the 'active' tracks translateX is based on has changed.\n  /** Updates the scale on the active portion of the track. */\n  _updateTrackUI(source) {\n    if (this._skipUpdate()) {\n      return;\n    }\n    this._isRange ? this._updateTrackUIRange(source) : this._updateTrackUINonRange(source);\n  }\n  _updateTrackUIRange(source) {\n    const sibling = source.getSibling();\n    if (!sibling || !this._cachedWidth) {\n      return;\n    }\n    const activePercentage = Math.abs(sibling.translateX - source.translateX) / this._cachedWidth;\n    if (source._isLeftThumb && this._cachedWidth) {\n      this._setTrackActiveStyles({\n        left: 'auto',\n        right: `${this._cachedWidth - sibling.translateX}px`,\n        transformOrigin: 'right',\n        transform: `scaleX(${activePercentage})`\n      });\n    } else {\n      this._setTrackActiveStyles({\n        left: `${sibling.translateX}px`,\n        right: 'auto',\n        transformOrigin: 'left',\n        transform: `scaleX(${activePercentage})`\n      });\n    }\n  }\n  _updateTrackUINonRange(source) {\n    this._isRtl ? this._setTrackActiveStyles({\n      left: 'auto',\n      right: '0px',\n      transformOrigin: 'right',\n      transform: `scaleX(${1 - source.fillPercentage})`\n    }) : this._setTrackActiveStyles({\n      left: '0px',\n      right: 'auto',\n      transformOrigin: 'left',\n      transform: `scaleX(${source.fillPercentage})`\n    });\n  }\n  // Tick mark update conditions\n  //\n  // 1. Value\n  //    - Reason: a tick mark which was once active might now be inactive or vice versa.\n  // 2. Min, max, or step\n  //    - Reason #1: the number of tick marks may have changed.\n  //    - Reason #2: The value may have silently changed.\n  /** Updates the dots along the slider track. */\n  _updateTickMarkUI() {\n    if (this.step === undefined || this.min === undefined || this.max === undefined) {\n      return;\n    }\n    const step = this.step > 0 ? this.step : 1;\n    this._isRange ? this._updateTickMarkUIRange(step) : this._updateTickMarkUINonRange(step);\n    if (this._isRtl) {\n      this._tickMarks.reverse();\n    }\n  }\n  _updateTickMarkUINonRange(step) {\n    const value = this._getValue();\n    let numActive = Math.max(Math.round((value - this.min) / step), 0);\n    let numInactive = Math.max(Math.round((this.max - value) / step), 0);\n    this._isRtl ? numActive++ : numInactive++;\n    this._tickMarks = Array(numActive).fill(0 /* _MatTickMark.ACTIVE */).concat(Array(numInactive).fill(1 /* _MatTickMark.INACTIVE */));\n  }\n\n  _updateTickMarkUIRange(step) {\n    const endValue = this._getValue();\n    const startValue = this._getValue(1 /* _MatThumb.START */);\n    const numInactiveBeforeStartThumb = Math.max(Math.floor((startValue - this.min) / step), 0);\n    const numActive = Math.max(Math.floor((endValue - startValue) / step) + 1, 0);\n    const numInactiveAfterEndThumb = Math.max(Math.floor((this.max - endValue) / step), 0);\n    this._tickMarks = Array(numInactiveBeforeStartThumb).fill(1 /* _MatTickMark.INACTIVE */).concat(Array(numActive).fill(0 /* _MatTickMark.ACTIVE */), Array(numInactiveAfterEndThumb).fill(1 /* _MatTickMark.INACTIVE */));\n  }\n  /** Gets the slider thumb input of the given thumb position. */\n  _getInput(thumbPosition) {\n    if (thumbPosition === 2 /* _MatThumb.END */ && this._input) {\n      return this._input;\n    }\n    if (this._inputs?.length) {\n      return thumbPosition === 1 /* _MatThumb.START */ ? this._inputs.first : this._inputs.last;\n    }\n    return;\n  }\n  /** Gets the slider thumb HTML input element of the given thumb position. */\n  _getThumb(thumbPosition) {\n    return thumbPosition === 2 /* _MatThumb.END */ ? this._thumbs?.last : this._thumbs?.first;\n  }\n  _setTransition(withAnimation) {\n    this._hasAnimation = withAnimation && !this._noopAnimations;\n    this._elementRef.nativeElement.classList.toggle('mat-mdc-slider-with-animation', this._hasAnimation);\n  }\n}\nMatSlider.ɵfac = function MatSlider_Factory(t) {\n  return new (t || MatSlider)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2$1.Directionality, 8), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatSlider.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatSlider,\n  selectors: [[\"mat-slider\"]],\n  contentQueries: function MatSlider_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MAT_SLIDER_THUMB, 5);\n      i0.ɵɵcontentQuery(dirIndex, MAT_SLIDER_RANGE_THUMB, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._input = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputs = _t);\n    }\n  },\n  viewQuery: function MatSlider_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(MAT_SLIDER_VISUAL_THUMB, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._trackActive = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._thumbs = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-mdc-slider\", \"mdc-slider\"],\n  hostVars: 10,\n  hostBindings: function MatSlider_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mdc-slider--range\", ctx._isRange)(\"mdc-slider--disabled\", ctx.disabled)(\"mdc-slider--discrete\", ctx.discrete)(\"mdc-slider--tick-marks\", ctx.showTickMarks)(\"_mat-animation-noopable\", ctx._noopAnimations);\n    }\n  },\n  inputs: {\n    color: \"color\",\n    disableRipple: \"disableRipple\",\n    disabled: \"disabled\",\n    discrete: \"discrete\",\n    showTickMarks: \"showTickMarks\",\n    min: \"min\",\n    max: \"max\",\n    step: \"step\",\n    displayWith: \"displayWith\"\n  },\n  exportAs: [\"matSlider\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_SLIDER,\n    useExisting: MatSlider\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c3,\n  decls: 9,\n  vars: 5,\n  consts: [[1, \"mdc-slider__track\"], [1, \"mdc-slider__track--inactive\"], [1, \"mdc-slider__track--active\"], [1, \"mdc-slider__track--active_fill\"], [\"trackActive\", \"\"], [\"class\", \"mdc-slider__tick-marks\", 4, \"ngIf\"], [3, \"discrete\", \"thumbPosition\", \"valueIndicatorText\", 4, \"ngIf\"], [3, \"discrete\", \"thumbPosition\", \"valueIndicatorText\"], [1, \"mdc-slider__tick-marks\"], [\"tickMarkContainer\", \"\"], [4, \"ngIf\"], [3, \"class\", \"transform\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function MatSlider_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n      i0.ɵɵelementStart(1, \"div\", 0);\n      i0.ɵɵelement(2, \"div\", 1);\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"div\", 3, 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, MatSlider_div_6_Template, 3, 1, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, MatSlider_mat_slider_visual_thumb_7_Template, 1, 3, \"mat-slider-visual-thumb\", 6);\n      i0.ɵɵelement(8, \"mat-slider-visual-thumb\", 7);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.showTickMarks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx._isRange);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"discrete\", ctx.discrete)(\"thumbPosition\", 2)(\"valueIndicatorText\", ctx.endValueIndicatorText);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, MatSliderVisualThumb],\n  styles: [\".mdc-slider{cursor:pointer;height:48px;margin:0 24px;position:relative;touch-action:pan-y}.mdc-slider .mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%}.mdc-slider .mdc-slider__track--active,.mdc-slider .mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider .mdc-slider__track--active{overflow:hidden;top:-1px}.mdc-slider .mdc-slider__track--active_fill{border-top:6px solid;box-sizing:border-box;height:100%;width:100%;position:relative;-webkit-transform-origin:left;transform-origin:left}[dir=rtl] .mdc-slider .mdc-slider__track--active_fill,.mdc-slider .mdc-slider__track--active_fill[dir=rtl]{-webkit-transform-origin:right;transform-origin:right}.mdc-slider .mdc-slider__track--inactive{left:0;top:0}.mdc-slider .mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider .mdc-slider__value-indicator-container{bottom:44px;left:var(--slider-value-indicator-container-left, 50%);pointer-events:none;position:absolute;right:var(--slider-value-indicator-container-right);transform:var(--slider-value-indicator-container-transform, translateX(-50%))}.mdc-slider .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0.4, 0, 1, 1);align-items:center;border-radius:4px;display:flex;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom}.mdc-slider .mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:var(--slider-value-indicator-caret-left, 50%);position:absolute;right:var(--slider-value-indicator-caret-right);transform:var(--slider-value-indicator-caret-transform, translateX(-50%));width:0}.mdc-slider .mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}@media(prefers-reduced-motion){.mdc-slider .mdc-slider__value-indicator,.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:none}}.mdc-slider .mdc-slider__thumb{display:flex;left:-24px;outline:none;position:absolute;user-select:none;height:48px;width:48px}.mdc-slider .mdc-slider__thumb--top{z-index:1}.mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-style:solid;border-width:1px;box-sizing:content-box}.mdc-slider .mdc-slider__thumb-knob{box-sizing:border-box;left:50%;position:absolute;top:50%;transform:translate(-50%, -50%)}.mdc-slider .mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:transform 80ms ease}@media(prefers-reduced-motion){.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:none}}.mdc-slider--disabled{cursor:auto}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__input{cursor:pointer;left:0;margin:0;height:100%;opacity:0;pointer-events:none;position:absolute;top:0;width:100%}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;margin-left:8px;margin-right:8px;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider .mdc-slider__thumb-knob{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000));border-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb::before,.mat-mdc-slider .mdc-slider__thumb::after{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover::before,.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-surface--hover::before{opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded--background-focused::before,.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__track--active_fill{border-color:var(--mdc-slider-active-track-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider .mdc-slider__track--inactive{background-color:var(--mdc-slider-inactive-track-color, var(--mdc-theme-primary, #6200ee));opacity:.24}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mdc-theme-on-surface, #000));opacity:.24}.mat-mdc-slider .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mdc-theme-primary, #6200ee));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mdc-theme-on-surface, #000));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__value-indicator{background-color:var(--mdc-slider-label-container-color, #666666);opacity:1}.mat-mdc-slider .mdc-slider__value-indicator::before{border-top-color:var(--mdc-slider-label-container-color, #666666)}.mat-mdc-slider .mdc-slider__value-indicator{color:var(--mdc-slider-label-label-text-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slider .mdc-slider__track{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__track--active{height:var(--mdc-slider-active-track-height, 6px)}.mat-mdc-slider .mdc-slider__track--inactive{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{height:var(--mdc-slider-with-tick-marks-container-size, 2px);width:var(--mdc-slider-with-tick-marks-container-size, 2px)}.mat-mdc-slider.mdc-slider--disabled{opacity:0.38}.mat-mdc-slider .mdc-slider__value-indicator-text{letter-spacing:var(--mdc-slider-label-label-text-tracking, 0.0071428571em);font-size:var(--mdc-slider-label-label-text-font-size, 0.875rem);font-family:var(--mdc-slider-label-label-text-font, Roboto, sans-serif);font-weight:var(--mdc-slider-label-label-text-weight, 500);line-height:var(--mdc-slider-label-label-text-line-height, 1.375rem)}.mat-mdc-slider .mdc-slider__track--active{border-radius:var(--mdc-slider-active-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__track--inactive{border-radius:var(--mdc-slider-inactive-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__thumb-knob{border-radius:var(--mdc-slider-handle-shape, 50%);width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-style:solid;border-width:calc(var(--mdc-slider-handle-height, 20px) / 2) calc(var(--mdc-slider-handle-width, 20px) / 2)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{border-radius:var(--mdc-slider-with-tick-marks-container-shape, 50%)}.mat-mdc-slider .mdc-slider__thumb-knob{box-shadow:var(--mdc-slider-handle-elevation, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:var(--mdc-slider-with-overlap-handle-outline-color, #fff);border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mat-mdc-slider .mdc-slider__input{pointer-events:auto}.mat-mdc-slider .mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mat-mdc-slider .mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider .mdc-slider__track,.mat-mdc-slider .mdc-slider__thumb{pointer-events:none}.mat-mdc-slider .mdc-slider__value-indicator{opacity:var(--mat-mdc-slider-value-indicator-opacity, 1)}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-mdc-slider-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-mdc-slider-hover-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-mdc-slider-focus-ripple-color, transparent)}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-mdc-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSlider, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slider',\n      host: {\n        'class': 'mat-mdc-slider mdc-slider',\n        '[class.mdc-slider--range]': '_isRange',\n        '[class.mdc-slider--disabled]': 'disabled',\n        '[class.mdc-slider--discrete]': 'discrete',\n        '[class.mdc-slider--tick-marks]': 'showTickMarks',\n        '[class._mat-animation-noopable]': '_noopAnimations'\n      },\n      exportAs: 'matSlider',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      inputs: ['color', 'disableRipple'],\n      providers: [{\n        provide: MAT_SLIDER,\n        useExisting: MatSlider\n      }],\n      template: \"<!-- Inputs -->\\n<ng-content></ng-content>\\n\\n<!-- Track -->\\n<div class=\\\"mdc-slider__track\\\">\\n  <div class=\\\"mdc-slider__track--inactive\\\"></div>\\n  <div class=\\\"mdc-slider__track--active\\\">\\n    <div #trackActive class=\\\"mdc-slider__track--active_fill\\\"></div>\\n  </div>\\n  <div *ngIf=\\\"showTickMarks\\\" class=\\\"mdc-slider__tick-marks\\\" #tickMarkContainer>\\n    <ng-container *ngIf=\\\"_cachedWidth\\\">\\n        <div\\n          *ngFor=\\\"let tickMark of _tickMarks; let i = index\\\"\\n          [class]=\\\"tickMark === 0 ? 'mdc-slider__tick-mark--active' : 'mdc-slider__tick-mark--inactive'\\\"\\n          [style.transform]=\\\"_calcTickMarkTransform(i)\\\"></div>\\n    </ng-container>\\n  </div>\\n</div>\\n\\n<!-- Thumbs -->\\n<mat-slider-visual-thumb\\n  *ngIf=\\\"_isRange\\\"\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"1\\\"\\n  [valueIndicatorText]=\\\"startValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\\n<mat-slider-visual-thumb\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"2\\\"\\n  [valueIndicatorText]=\\\"endValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\",\n      styles: [\".mdc-slider{cursor:pointer;height:48px;margin:0 24px;position:relative;touch-action:pan-y}.mdc-slider .mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%}.mdc-slider .mdc-slider__track--active,.mdc-slider .mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider .mdc-slider__track--active{overflow:hidden;top:-1px}.mdc-slider .mdc-slider__track--active_fill{border-top:6px solid;box-sizing:border-box;height:100%;width:100%;position:relative;-webkit-transform-origin:left;transform-origin:left}[dir=rtl] .mdc-slider .mdc-slider__track--active_fill,.mdc-slider .mdc-slider__track--active_fill[dir=rtl]{-webkit-transform-origin:right;transform-origin:right}.mdc-slider .mdc-slider__track--inactive{left:0;top:0}.mdc-slider .mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider .mdc-slider__value-indicator-container{bottom:44px;left:var(--slider-value-indicator-container-left, 50%);pointer-events:none;position:absolute;right:var(--slider-value-indicator-container-right);transform:var(--slider-value-indicator-container-transform, translateX(-50%))}.mdc-slider .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0.4, 0, 1, 1);align-items:center;border-radius:4px;display:flex;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom}.mdc-slider .mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:var(--slider-value-indicator-caret-left, 50%);position:absolute;right:var(--slider-value-indicator-caret-right);transform:var(--slider-value-indicator-caret-transform, translateX(-50%));width:0}.mdc-slider .mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}@media(prefers-reduced-motion){.mdc-slider .mdc-slider__value-indicator,.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:none}}.mdc-slider .mdc-slider__thumb{display:flex;left:-24px;outline:none;position:absolute;user-select:none;height:48px;width:48px}.mdc-slider .mdc-slider__thumb--top{z-index:1}.mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-style:solid;border-width:1px;box-sizing:content-box}.mdc-slider .mdc-slider__thumb-knob{box-sizing:border-box;left:50%;position:absolute;top:50%;transform:translate(-50%, -50%)}.mdc-slider .mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:transform 80ms ease}@media(prefers-reduced-motion){.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:none}}.mdc-slider--disabled{cursor:auto}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__input{cursor:pointer;left:0;margin:0;height:100%;opacity:0;pointer-events:none;position:absolute;top:0;width:100%}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;margin-left:8px;margin-right:8px;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider .mdc-slider__thumb-knob{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000));border-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb::before,.mat-mdc-slider .mdc-slider__thumb::after{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover::before,.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-surface--hover::before{opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded--background-focused::before,.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__track--active_fill{border-color:var(--mdc-slider-active-track-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider .mdc-slider__track--inactive{background-color:var(--mdc-slider-inactive-track-color, var(--mdc-theme-primary, #6200ee));opacity:.24}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mdc-theme-on-surface, #000));opacity:.24}.mat-mdc-slider .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mdc-theme-primary, #6200ee));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mdc-theme-on-surface, #000));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__value-indicator{background-color:var(--mdc-slider-label-container-color, #666666);opacity:1}.mat-mdc-slider .mdc-slider__value-indicator::before{border-top-color:var(--mdc-slider-label-container-color, #666666)}.mat-mdc-slider .mdc-slider__value-indicator{color:var(--mdc-slider-label-label-text-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slider .mdc-slider__track{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__track--active{height:var(--mdc-slider-active-track-height, 6px)}.mat-mdc-slider .mdc-slider__track--inactive{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{height:var(--mdc-slider-with-tick-marks-container-size, 2px);width:var(--mdc-slider-with-tick-marks-container-size, 2px)}.mat-mdc-slider.mdc-slider--disabled{opacity:0.38}.mat-mdc-slider .mdc-slider__value-indicator-text{letter-spacing:var(--mdc-slider-label-label-text-tracking, 0.0071428571em);font-size:var(--mdc-slider-label-label-text-font-size, 0.875rem);font-family:var(--mdc-slider-label-label-text-font, Roboto, sans-serif);font-weight:var(--mdc-slider-label-label-text-weight, 500);line-height:var(--mdc-slider-label-label-text-line-height, 1.375rem)}.mat-mdc-slider .mdc-slider__track--active{border-radius:var(--mdc-slider-active-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__track--inactive{border-radius:var(--mdc-slider-inactive-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__thumb-knob{border-radius:var(--mdc-slider-handle-shape, 50%);width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-style:solid;border-width:calc(var(--mdc-slider-handle-height, 20px) / 2) calc(var(--mdc-slider-handle-width, 20px) / 2)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{border-radius:var(--mdc-slider-with-tick-marks-container-shape, 50%)}.mat-mdc-slider .mdc-slider__thumb-knob{box-shadow:var(--mdc-slider-handle-elevation, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:var(--mdc-slider-with-overlap-handle-outline-color, #fff);border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mat-mdc-slider .mdc-slider__input{pointer-events:auto}.mat-mdc-slider .mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mat-mdc-slider .mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider .mdc-slider__track,.mat-mdc-slider .mdc-slider__thumb{pointer-events:none}.mat-mdc-slider .mdc-slider__value-indicator{opacity:var(--mat-mdc-slider-value-indicator-opacity, 1)}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-mdc-slider-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-mdc-slider-hover-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-mdc-slider-focus-ripple-color, transparent)}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-mdc-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.Platform\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i2$1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    _trackActive: [{\n      type: ViewChild,\n      args: ['trackActive']\n    }],\n    _thumbs: [{\n      type: ViewChildren,\n      args: [MAT_SLIDER_VISUAL_THUMB]\n    }],\n    _input: [{\n      type: ContentChild,\n      args: [MAT_SLIDER_THUMB]\n    }],\n    _inputs: [{\n      type: ContentChildren,\n      args: [MAT_SLIDER_RANGE_THUMB, {\n        descendants: false\n      }]\n    }],\n    disabled: [{\n      type: Input\n    }],\n    discrete: [{\n      type: Input\n    }],\n    showTickMarks: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    displayWith: [{\n      type: Input\n    }]\n  });\n})();\n/** Ensures that there is not an invalid configuration for the slider thumb inputs. */\nfunction _validateInputs(isRange, endInputElement, startInputElement) {\n  const startValid = !isRange || startInputElement?._hostElement.hasAttribute('matSliderStartThumb');\n  const endValid = endInputElement._hostElement.hasAttribute(isRange ? 'matSliderEndThumb' : 'matSliderThumb');\n  if (!startValid || !endValid) {\n    _throwInvalidInputConfigurationError();\n  }\n}\nfunction _throwInvalidInputConfigurationError() {\n  throw Error(`Invalid slider thumb input configuration!\n\n   Valid configurations are as follows:\n\n     <mat-slider>\n       <input matSliderThumb>\n     </mat-slider>\n\n     or\n\n     <mat-slider>\n       <input matSliderStartThumb>\n       <input matSliderEndThumb>\n     </mat-slider>\n   `);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provider that allows the slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSliderThumb),\n  multi: true\n};\n/**\n * Provider that allows the range slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSliderRangeThumb),\n  multi: true\n};\n/**\n * Directive that adds slider-specific behaviors to an input element inside `<mat-slider>`.\n * Up to two may be placed inside of a `<mat-slider>`.\n *\n * If one is used, the selector `matSliderThumb` must be used, and the outcome will be a normal\n * slider. If two are used, the selectors `matSliderStartThumb` and `matSliderEndThumb` must be\n * used, and the outcome will be a range slider with two slider thumbs.\n */\nclass MatSliderThumb {\n  constructor(_ngZone, _elementRef, _cdr, _slider) {\n    this._ngZone = _ngZone;\n    this._elementRef = _elementRef;\n    this._cdr = _cdr;\n    this._slider = _slider;\n    /** Event emitted when the `value` is changed. */\n    this.valueChange = new EventEmitter();\n    /** Event emitted when the slider thumb starts being dragged. */\n    this.dragStart = new EventEmitter();\n    /** Event emitted when the slider thumb stops being dragged. */\n    this.dragEnd = new EventEmitter();\n    /**\n     * Indicates whether this thumb is the start or end thumb.\n     * @docs-private\n     */\n    this.thumbPosition = 2 /* _MatThumb.END */;\n    /** The radius of a native html slider's knob. */\n    this._knobRadius = 8;\n    /** Whether user's cursor is currently in a mouse down state on the input. */\n    this._isActive = false;\n    /** Whether the input is currently focused (either by tab or after clicking). */\n    this._isFocused = false;\n    /**\n     * Whether the initial value has been set.\n     * This exists because the initial value cannot be immediately set because the min and max\n     * must first be relayed from the parent MatSlider component, which can only happen later\n     * in the component lifecycle.\n     */\n    this._hasSetInitialValue = false;\n    /** Emits when the component is destroyed. */\n    this._destroyed = new Subject();\n    /**\n     * Indicates whether UI updates should be skipped.\n     *\n     * This flag is used to avoid flickering\n     * when correcting values on pointer up/down.\n     */\n    this._skipUIUpdate = false;\n    /** Callback called when the slider input value changes. */\n    this._onChangeFn = () => {};\n    /** Callback called when the slider input has been touched. */\n    this._onTouchedFn = () => {};\n    this._hostElement = _elementRef.nativeElement;\n    this._ngZone.runOutsideAngular(() => {\n      this._hostElement.addEventListener('pointerdown', this._onPointerDown.bind(this));\n      this._hostElement.addEventListener('pointermove', this._onPointerMove.bind(this));\n      this._hostElement.addEventListener('pointerup', this._onPointerUp.bind(this));\n    });\n  }\n  get value() {\n    return coerceNumberProperty(this._hostElement.value);\n  }\n  set value(v) {\n    const val = coerceNumberProperty(v).toString();\n    if (!this._hasSetInitialValue) {\n      this._initialValue = val;\n      return;\n    }\n    if (this._isActive) {\n      return;\n    }\n    this._hostElement.value = val;\n    this._updateThumbUIByValue();\n    this._slider._onValueChange(this);\n    this._cdr.detectChanges();\n  }\n  /**\n   * The current translateX in px of the slider visual thumb.\n   * @docs-private\n   */\n  get translateX() {\n    if (this._slider.min >= this._slider.max) {\n      this._translateX = 0;\n      return this._translateX;\n    }\n    if (this._translateX === undefined) {\n      this._translateX = this._calcTranslateXByValue();\n    }\n    return this._translateX;\n  }\n  set translateX(v) {\n    this._translateX = v;\n  }\n  /** @docs-private */\n  get min() {\n    return coerceNumberProperty(this._hostElement.min);\n  }\n  set min(v) {\n    this._hostElement.min = coerceNumberProperty(v).toString();\n    this._cdr.detectChanges();\n  }\n  /** @docs-private */\n  get max() {\n    return coerceNumberProperty(this._hostElement.max);\n  }\n  set max(v) {\n    this._hostElement.max = coerceNumberProperty(v).toString();\n    this._cdr.detectChanges();\n  }\n  get step() {\n    return coerceNumberProperty(this._hostElement.step);\n  }\n  set step(v) {\n    this._hostElement.step = coerceNumberProperty(v).toString();\n    this._cdr.detectChanges();\n  }\n  /** @docs-private */\n  get disabled() {\n    return coerceBooleanProperty(this._hostElement.disabled);\n  }\n  set disabled(v) {\n    this._hostElement.disabled = coerceBooleanProperty(v);\n    this._cdr.detectChanges();\n    if (this._slider.disabled !== this.disabled) {\n      this._slider.disabled = this.disabled;\n    }\n  }\n  /** The percentage of the slider that coincides with the value. */\n  get percentage() {\n    if (this._slider.min >= this._slider.max) {\n      return this._slider._isRtl ? 1 : 0;\n    }\n    return (this.value - this._slider.min) / (this._slider.max - this._slider.min);\n  }\n  /** @docs-private */\n  get fillPercentage() {\n    if (!this._slider._cachedWidth) {\n      return this._slider._isRtl ? 1 : 0;\n    }\n    if (this._translateX === 0) {\n      return 0;\n    }\n    return this.translateX / this._slider._cachedWidth;\n  }\n  /** Used to relay updates to _isFocused to the slider visual thumbs. */\n  _setIsFocused(v) {\n    this._isFocused = v;\n  }\n  ngOnDestroy() {\n    this._hostElement.removeEventListener('pointerdown', this._onPointerDown);\n    this._hostElement.removeEventListener('pointermove', this._onPointerMove);\n    this._hostElement.removeEventListener('pointerup', this._onPointerUp);\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.dragStart.complete();\n    this.dragEnd.complete();\n  }\n  /** @docs-private */\n  initProps() {\n    this._updateWidthInactive();\n    this.disabled = this._slider.disabled;\n    this.step = this._slider.step;\n    this.min = this._slider.min;\n    this.max = this._slider.max;\n    this._initValue();\n  }\n  /** @docs-private */\n  initUI() {\n    this._updateThumbUIByValue();\n  }\n  _initValue() {\n    this._hasSetInitialValue = true;\n    if (this._initialValue === undefined) {\n      this.value = this._getDefaultValue();\n    } else {\n      this._hostElement.value = this._initialValue;\n      this._updateThumbUIByValue();\n      this._slider._onValueChange(this);\n      this._cdr.detectChanges();\n    }\n  }\n  _getDefaultValue() {\n    return this.min;\n  }\n  _onBlur() {\n    this._setIsFocused(false);\n    this._onTouchedFn();\n  }\n  _onFocus() {\n    this._setIsFocused(true);\n  }\n  _onChange() {\n    // only used to handle the edge case where user\n    // mousedown on the slider then uses arrow keys.\n    if (this._isActive) {\n      this._updateThumbUIByValue({\n        withAnimation: true\n      });\n    }\n  }\n  _onInput() {\n    this.valueChange.emit(this.value);\n    this._onChangeFn(this.value);\n    // handles arrowing and updating the value when\n    // a step is defined.\n    if (this._slider.step || !this._isActive) {\n      this._updateThumbUIByValue({\n        withAnimation: true\n      });\n    }\n    this._slider._onValueChange(this);\n  }\n  _onNgControlValueChange() {\n    // only used to handle when the value change\n    // originates outside of the slider.\n    if (!this._isActive || !this._isFocused) {\n      this._slider._onValueChange(this);\n      this._updateThumbUIByValue();\n    }\n    this._slider.disabled = this._formControl.disabled;\n  }\n  _onPointerDown(event) {\n    if (this.disabled || event.button !== 0) {\n      return;\n    }\n    this._isActive = true;\n    this._setIsFocused(true);\n    this._updateWidthActive();\n    this._slider._updateDimensions();\n    // Does nothing if a step is defined because we\n    // want the value to snap to the values on input.\n    if (!this._slider.step) {\n      this._updateThumbUIByPointerEvent(event, {\n        withAnimation: true\n      });\n    }\n    if (!this.disabled) {\n      this._handleValueCorrection(event);\n    }\n  }\n  /**\n   * Corrects the value of the slider on pointer up/down.\n   *\n   * Called on pointer down and up because the value is set based\n   * on the inactive width instead of the active width.\n   */\n  _handleValueCorrection(event) {\n    // Don't update the UI with the current value! The value on pointerdown\n    // and pointerup is calculated in the split second before the input(s)\n    // resize. See _updateWidthInactive() and _updateWidthActive() for more\n    // details.\n    this._skipUIUpdate = true;\n    // Note that this function gets triggered before the actual value of the\n    // slider is updated. This means if we were to set the value here, it\n    // would immediately be overwritten. Using setTimeout ensures the setting\n    // of the value happens after the value has been updated by the\n    // pointerdown event.\n    setTimeout(() => {\n      this._skipUIUpdate = false;\n      this._fixValue(event);\n    }, 0);\n  }\n  /** Corrects the value of the slider based on the pointer event's position. */\n  _fixValue(event) {\n    const xPos = event.clientX - this._slider._cachedLeft;\n    const width = this._slider._cachedWidth;\n    const step = this._slider.step === 0 ? 1 : this._slider.step;\n    const numSteps = Math.floor((this._slider.max - this._slider.min) / step);\n    const percentage = this._slider._isRtl ? 1 - xPos / width : xPos / width;\n    // To ensure the percentage is rounded to the necessary number of decimals.\n    const fixedPercentage = Math.round(percentage * numSteps) / numSteps;\n    const impreciseValue = fixedPercentage * (this._slider.max - this._slider.min) + this._slider.min;\n    const value = Math.round(impreciseValue / step) * step;\n    const prevValue = this.value;\n    const dragEvent = {\n      source: this,\n      parent: this._slider,\n      value: value\n    };\n    this._isActive ? this.dragStart.emit(dragEvent) : this.dragEnd.emit(dragEvent);\n    if (value === prevValue) {\n      // Because we prevented UI updates, if it turns out that the race\n      // condition didn't happen and the value is already correct, we\n      // have to apply the ui updates now.\n      this._slider._onValueChange(this);\n      this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {\n        withAnimation: this._slider._hasAnimation\n      });\n      return;\n    }\n    this.value = value;\n    this.valueChange.emit(this.value);\n    this._onChangeFn(this.value);\n    this._slider._onValueChange(this);\n    this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {\n      withAnimation: this._slider._hasAnimation\n    });\n  }\n  _onPointerMove(event) {\n    // Again, does nothing if a step is defined because\n    // we want the value to snap to the values on input.\n    if (!this._slider.step && this._isActive) {\n      this._updateThumbUIByPointerEvent(event);\n    }\n  }\n  _onPointerUp(event) {\n    this._isActive = false;\n    this._updateWidthInactive();\n    if (!this.disabled) {\n      this._handleValueCorrection(event);\n    }\n  }\n  _clamp(v) {\n    return Math.max(Math.min(v, this._slider._cachedWidth), 0);\n  }\n  _calcTranslateXByValue() {\n    if (this._slider._isRtl) {\n      return (1 - this.percentage) * this._slider._cachedWidth;\n    }\n    return this.percentage * this._slider._cachedWidth;\n  }\n  _calcTranslateXByPointerEvent(event) {\n    return event.clientX - this._slider._cachedLeft;\n  }\n  /**\n   * Used to set the slider width to the correct\n   * dimensions while the user is dragging.\n   */\n  _updateWidthActive() {\n    this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n    this._hostElement.style.width = `calc(100% + ${this._slider._inputPadding}px)`;\n  }\n  /**\n   * Sets the slider input to disproportionate dimensions to allow for touch\n   * events to be captured on touch devices.\n   */\n  _updateWidthInactive() {\n    this._hostElement.style.padding = '0px';\n    this._hostElement.style.width = 'calc(100% + 48px)';\n    this._hostElement.style.left = '-24px';\n  }\n  _updateThumbUIByValue(options) {\n    this.translateX = this._clamp(this._calcTranslateXByValue());\n    this._updateThumbUI(options);\n  }\n  _updateThumbUIByPointerEvent(event, options) {\n    this.translateX = this._clamp(this._calcTranslateXByPointerEvent(event));\n    this._updateThumbUI(options);\n  }\n  _updateThumbUI(options) {\n    this._slider._setTransition(!!options?.withAnimation);\n    this._slider._onTranslateXChange(this);\n  }\n  /**\n   * Sets the input's value.\n   * @param value The new value of the input\n   * @docs-private\n   */\n  writeValue(value) {\n    this.value = value;\n  }\n  /**\n   * Registers a callback to be invoked when the input's value changes from user input.\n   * @param fn The callback to register\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this._onChangeFn = fn;\n  }\n  /**\n   * Registers a callback to be invoked when the input is blurred by the user.\n   * @param fn The callback to register\n   * @docs-private\n   */\n  registerOnTouched(fn) {\n    this._onTouchedFn = fn;\n  }\n  /**\n   * Sets the disabled state of the slider.\n   * @param isDisabled The new disabled state\n   * @docs-private\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  focus() {\n    this._hostElement.focus();\n  }\n  blur() {\n    this._hostElement.blur();\n  }\n}\nMatSliderThumb.ɵfac = function MatSliderThumb_Factory(t) {\n  return new (t || MatSliderThumb)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_SLIDER));\n};\nMatSliderThumb.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatSliderThumb,\n  selectors: [[\"input\", \"matSliderThumb\", \"\"]],\n  hostAttrs: [\"type\", \"range\", 1, \"mdc-slider__input\"],\n  hostVars: 1,\n  hostBindings: function MatSliderThumb_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"change\", function MatSliderThumb_change_HostBindingHandler() {\n        return ctx._onChange();\n      })(\"input\", function MatSliderThumb_input_HostBindingHandler() {\n        return ctx._onInput();\n      })(\"blur\", function MatSliderThumb_blur_HostBindingHandler() {\n        return ctx._onBlur();\n      })(\"focus\", function MatSliderThumb_focus_HostBindingHandler() {\n        return ctx._onFocus();\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-valuetext\", ctx._valuetext);\n    }\n  },\n  inputs: {\n    value: \"value\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    dragStart: \"dragStart\",\n    dragEnd: \"dragEnd\"\n  },\n  exportAs: [\"matSliderThumb\"],\n  features: [i0.ɵɵProvidersFeature([MAT_SLIDER_THUMB_VALUE_ACCESSOR, {\n    provide: MAT_SLIDER_THUMB,\n    useExisting: MatSliderThumb\n  }])]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderThumb, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matSliderThumb]',\n      exportAs: 'matSliderThumb',\n      host: {\n        'class': 'mdc-slider__input',\n        'type': 'range',\n        '[attr.aria-valuetext]': '_valuetext',\n        '(change)': '_onChange()',\n        '(input)': '_onInput()',\n        // TODO(wagnermaciel): Consider using a global event listener instead.\n        // Reason: I have found a semi-consistent way to mouse up without triggering this event.\n        '(blur)': '_onBlur()',\n        '(focus)': '_onFocus()'\n      },\n      providers: [MAT_SLIDER_THUMB_VALUE_ACCESSOR, {\n        provide: MAT_SLIDER_THUMB,\n        useExisting: MatSliderThumb\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_SLIDER]\n      }]\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }]\n  });\n})();\nclass MatSliderRangeThumb extends MatSliderThumb {\n  constructor(_ngZone, _slider, _elementRef, _cdr) {\n    super(_ngZone, _elementRef, _cdr, _slider);\n    this._cdr = _cdr;\n    this._isEndThumb = this._hostElement.hasAttribute('matSliderEndThumb');\n    this._setIsLeftThumb();\n    this.thumbPosition = this._isEndThumb ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */;\n  }\n  /** @docs-private */\n  getSibling() {\n    if (!this._sibling) {\n      this._sibling = this._slider._getInput(this._isEndThumb ? 1 /* _MatThumb.START */ : 2 /* _MatThumb.END */);\n    }\n\n    return this._sibling;\n  }\n  /**\n   * Returns the minimum translateX position allowed for this slider input's visual thumb.\n   * @docs-private\n   */\n  getMinPos() {\n    const sibling = this.getSibling();\n    if (!this._isLeftThumb && sibling) {\n      return sibling.translateX;\n    }\n    return 0;\n  }\n  /**\n   * Returns the maximum translateX position allowed for this slider input's visual thumb.\n   * @docs-private\n   */\n  getMaxPos() {\n    const sibling = this.getSibling();\n    if (this._isLeftThumb && sibling) {\n      return sibling.translateX;\n    }\n    return this._slider._cachedWidth;\n  }\n  _setIsLeftThumb() {\n    this._isLeftThumb = this._isEndThumb && this._slider._isRtl || !this._isEndThumb && !this._slider._isRtl;\n  }\n  _getDefaultValue() {\n    return this._isEndThumb && this._slider._isRange ? this.max : this.min;\n  }\n  _onInput() {\n    super._onInput();\n    this._updateSibling();\n    if (!this._isActive) {\n      this._updateWidthInactive();\n    }\n  }\n  _onNgControlValueChange() {\n    super._onNgControlValueChange();\n    this.getSibling()?._updateMinMax();\n  }\n  _onPointerDown(event) {\n    if (this.disabled) {\n      return;\n    }\n    if (this._sibling) {\n      this._sibling._updateWidthActive();\n      this._sibling._hostElement.classList.add('mat-mdc-slider-input-no-pointer-events');\n    }\n    super._onPointerDown(event);\n  }\n  _onPointerUp(event) {\n    super._onPointerUp(event);\n    if (this._sibling) {\n      this._sibling._updateWidthInactive();\n      this._sibling._hostElement.classList.remove('mat-mdc-slider-input-no-pointer-events');\n    }\n  }\n  _onPointerMove(event) {\n    super._onPointerMove(event);\n    if (!this._slider.step && this._isActive) {\n      this._updateSibling();\n    }\n  }\n  _fixValue(event) {\n    super._fixValue(event);\n    this._sibling?._updateMinMax();\n  }\n  _clamp(v) {\n    return Math.max(Math.min(v, this.getMaxPos()), this.getMinPos());\n  }\n  _updateMinMax() {\n    const sibling = this.getSibling();\n    if (!sibling) {\n      return;\n    }\n    if (this._isEndThumb) {\n      this.min = Math.max(this._slider.min, sibling.value);\n      this.max = this._slider.max;\n    } else {\n      this.min = this._slider.min;\n      this.max = Math.min(this._slider.max, sibling.value);\n    }\n  }\n  _updateWidthActive() {\n    const minWidth = this._slider._rippleRadius * 2 - this._slider._inputPadding * 2;\n    const maxWidth = this._slider._cachedWidth + this._slider._inputPadding - minWidth;\n    const percentage = this._slider.min < this._slider.max ? (this.max - this.min) / (this._slider.max - this._slider.min) : 1;\n    const width = maxWidth * percentage + minWidth;\n    this._hostElement.style.width = `${width}px`;\n    this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n  }\n  _updateWidthInactive() {\n    const sibling = this.getSibling();\n    if (!sibling) {\n      return;\n    }\n    const maxWidth = this._slider._cachedWidth;\n    const midValue = this._isEndThumb ? this.value - (this.value - sibling.value) / 2 : this.value + (sibling.value - this.value) / 2;\n    const _percentage = this._isEndThumb ? (this.max - midValue) / (this._slider.max - this._slider.min) : (midValue - this.min) / (this._slider.max - this._slider.min);\n    const percentage = this._slider.min < this._slider.max ? _percentage : 1;\n    const width = maxWidth * percentage + 24;\n    this._hostElement.style.width = `${width}px`;\n    this._hostElement.style.padding = '0px';\n    if (this._isLeftThumb) {\n      this._hostElement.style.left = '-24px';\n      this._hostElement.style.right = 'auto';\n    } else {\n      this._hostElement.style.left = 'auto';\n      this._hostElement.style.right = '-24px';\n    }\n  }\n  _updateStaticStyles() {\n    this._hostElement.classList.toggle('mat-slider__right-input', !this._isLeftThumb);\n  }\n  _updateSibling() {\n    const sibling = this.getSibling();\n    if (!sibling) {\n      return;\n    }\n    sibling._updateMinMax();\n    if (this._isActive) {\n      sibling._updateWidthActive();\n    } else {\n      sibling._updateWidthInactive();\n    }\n  }\n  /**\n   * Sets the input's value.\n   * @param value The new value of the input\n   * @docs-private\n   */\n  writeValue(value) {\n    this.value = value;\n    this._updateWidthInactive();\n    this._updateSibling();\n  }\n}\nMatSliderRangeThumb.ɵfac = function MatSliderRangeThumb_Factory(t) {\n  return new (t || MatSliderRangeThumb)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(MAT_SLIDER), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nMatSliderRangeThumb.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatSliderRangeThumb,\n  selectors: [[\"input\", \"matSliderStartThumb\", \"\"], [\"input\", \"matSliderEndThumb\", \"\"]],\n  exportAs: [\"matSliderRangeThumb\"],\n  features: [i0.ɵɵProvidersFeature([MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR, {\n    provide: MAT_SLIDER_RANGE_THUMB,\n    useExisting: MatSliderRangeThumb\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderRangeThumb, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matSliderStartThumb], input[matSliderEndThumb]',\n      exportAs: 'matSliderRangeThumb',\n      providers: [MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR, {\n        provide: MAT_SLIDER_RANGE_THUMB,\n        useExisting: MatSliderRangeThumb\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_SLIDER]\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSliderModule {}\nMatSliderModule.ɵfac = function MatSliderModule_Factory(t) {\n  return new (t || MatSliderModule)();\n};\nMatSliderModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatSliderModule\n});\nMatSliderModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [MatCommonModule, CommonModule, MatRippleModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CommonModule, MatRippleModule],\n      exports: [MatSlider, MatSliderThumb, MatSliderRangeThumb],\n      declarations: [MatSlider, MatSliderThumb, MatSliderRangeThumb, MatSliderVisualThumb]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatSlider, MatSliderChange, MatSliderModule, MatSliderRangeThumb, MatSliderThumb, MatSliderVisualThumb };","map":{"version":3,"names":["i2$1","coerceBooleanProperty","coerceNumberProperty","i1","i0","InjectionToken","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","Input","ViewChild","Optional","ViewChildren","ContentChild","ContentChildren","forwardRef","EventEmitter","Directive","Output","NgModule","i2","MatRipple","mixinColor","mixinDisableRipple","MAT_RIPPLE_GLOBAL_OPTIONS","MatCommonModule","MatRippleModule","ANIMATION_MODULE_TYPE","take","i3","CommonModule","NG_VALUE_ACCESSOR","Subject","MAT_SLIDER","MAT_SLIDER_THUMB","MAT_SLIDER_RANGE_THUMB","MAT_SLIDER_VISUAL_THUMB","MatSliderChange","MatSliderVisualThumb","constructor","_cdr","_ngZone","_elementRef","_slider","_isHovered","_isActive","_isValueIndicatorVisible","_onPointerMove","event","_sliderInput","_isFocused","rect","_hostElement","getBoundingClientRect","isHovered","_isSliderThumbHovered","_showHoverRipple","_hideRipple","_hoverRippleRef","_onMouseLeave","_onFocus","_showFocusRipple","classList","add","_onBlur","_focusRippleRef","remove","_onDragStart","_showActiveRipple","_onDragEnd","_activeRippleRef","nativeElement","ngAfterViewInit","_ripple","radius","_getInput","thumbPosition","_sliderInputEl","input","runOutsideAngular","addEventListener","ngOnDestroy","removeEventListener","_isShowingRipple","_showRipple","enterDuration","exitDuration","element","rippleRef","state","animation","ignoreGlobalRippleConfig","disabled","_showValueIndicator","_isRange","sibling","_getThumb","_globalRippleOptions","launch","_noopAnimations","centered","persistent","fadeOut","_isShowingAnyRipple","_hideValueIndicator","_getSibling","_getValueIndicatorContainer","_valueIndicatorContainer","_getKnob","_knob","width","centerX","x","centerY","y","dx","clientX","dy","clientY","Math","pow","ɵfac","ChangeDetectorRef","NgZone","ElementRef","ɵcmp","provide","useExisting","NgIf","type","args","selector","host","changeDetection","OnPush","encapsulation","None","providers","template","styles","undefined","decorators","discrete","valueIndicatorText","_MatSliderMixinBase","MatSlider","_platform","elementRef","_dir","animationMode","_disabled","_discrete","_showTickMarks","_min","_max","_step","displayWith","value","_rippleRadius","startValueIndicatorText","endValueIndicatorText","_isRtl","_hasViewInitialized","_tickMarkTrackWidth","_hasAnimation","_resizeTimer","_knobRadius","_thumbsOverlap","_dirChangeSubscription","change","subscribe","_onDirChange","v","endInput","startInput","showTickMarks","min","_updateMin","prevMin","_updateMinRange","old","new","_updateMinNonRange","_onMinMaxOrStepChange","oldEndValue","oldStartValue","max","_updateWidthInactive","_onTranslateXChangeBySideEffect","_onValueChange","oldValue","_updateThumbUIByValue","_updateTrackUI","_updateMax","prevMax","_updateMaxRange","_updateMaxNonRange","step","_updateStep","_updateStepRange","_updateStepNonRange","prevStartValue","SAFARI","isBrowser","_updateDimensions","eInput","sInput","detectChanges","ngDevMode","_validateInputs","thumb","_inputPadding","_inputOffset","_initUIRange","_initUINonRange","_updateTickMarkUI","_updateTickMarkTrackUI","_observeHostResize","initProps","initUI","_updateValueIndicatorUI","_updateMinMax","_updateStaticStyles","unsubscribe","_resizeObserver","disconnect","_onDirChangeRange","_onDirChangeNonRange","_setIsLeftThumb","translateX","_calcTranslateXByValue","ResizeObserver","clearTimeout","_onResize","observe","_getValue","_skipUpdate","_skipUIUpdate","_cachedWidth","_cachedLeft","left","_setTrackActiveStyles","trackStyle","_trackActive","style","animationOriginChanged","right","transformOrigin","onStable","pipe","transform","_calcTickMarkTransform","index","_tickMarks","length","_onTranslateXChange","source","_updateThumbUI","_updateOverlappingThumbUI","input1","input2","markForCheck","_areThumbsOverlapping","_updateOverlappingThumbClassNames","getSibling","sourceThumb","siblingThumb","toggle","valuetext","_valuetext","setAttribute","visualThumb","maxValue","floor","percentage","_updateTrackUIRange","_updateTrackUINonRange","activePercentage","abs","_isLeftThumb","fillPercentage","_updateTickMarkUIRange","_updateTickMarkUINonRange","reverse","numActive","round","numInactive","Array","fill","concat","endValue","startValue","numInactiveBeforeStartThumb","numInactiveAfterEndThumb","_input","_inputs","first","last","_thumbs","_setTransition","withAnimation","Platform","Directionality","NgForOf","exportAs","inputs","descendants","isRange","endInputElement","startInputElement","startValid","hasAttribute","endValid","_throwInvalidInputConfigurationError","Error","MAT_SLIDER_THUMB_VALUE_ACCESSOR","MatSliderThumb","multi","MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR","MatSliderRangeThumb","valueChange","dragStart","dragEnd","_hasSetInitialValue","_destroyed","_onChangeFn","_onTouchedFn","_onPointerDown","bind","_onPointerUp","val","toString","_initialValue","_translateX","_setIsFocused","next","complete","_initValue","_getDefaultValue","_onChange","_onInput","emit","_onNgControlValueChange","_formControl","button","_updateWidthActive","_updateThumbUIByPointerEvent","_handleValueCorrection","setTimeout","_fixValue","xPos","numSteps","fixedPercentage","impreciseValue","prevValue","dragEvent","parent","_clamp","_calcTranslateXByPointerEvent","padding","options","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","focus","blur","ɵdir","_isEndThumb","_sibling","getMinPos","getMaxPos","_updateSibling","minWidth","maxWidth","midValue","_percentage","MatSliderModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["/Users/ludmilamalomuz/Desktop/Frontend projects/coffeeapp-pwa/coffeeapp2/node_modules/@angular/material/fesm2020/slider.mjs"],"sourcesContent":["import * as i2$1 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, ViewChild, Optional, ViewChildren, ContentChild, ContentChildren, forwardRef, EventEmitter, Directive, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { MatRipple, mixinColor, mixinDisableRipple, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { take } from 'rxjs/operators';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used for a `MatSlider` to provide itself as a\n * parent to the `MatSliderThumb` and `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER = new InjectionToken('_MatSlider');\n/**\n * Injection token that can be used to query for a `MatSliderThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB = new InjectionToken('_MatSliderThumb');\n/**\n * Injection token that can be used to query for a `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB = new InjectionToken('_MatSliderRangeThumb');\n/**\n * Injection token that can be used to query for a `MatSliderVisualThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_VISUAL_THUMB = new InjectionToken('_MatSliderVisualThumb');\n/**\n * A simple change event emitted by the MatSlider component.\n * @deprecated Use event bindings directly on the MatSliderThumbs for `change` and `input` events. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatSliderChange {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The visual slider thumb.\n *\n * Handles the slider thumb ripple states (hover, focus, and active),\n * and displaying the value tooltip on discrete sliders.\n * @docs-private\n */\nclass MatSliderVisualThumb {\n    constructor(_cdr, _ngZone, _elementRef, _slider) {\n        this._cdr = _cdr;\n        this._ngZone = _ngZone;\n        this._slider = _slider;\n        /** Whether the slider thumb is currently being hovered. */\n        this._isHovered = false;\n        /** Whether the slider thumb is currently being pressed. */\n        this._isActive = false;\n        /** Whether the value indicator tooltip is visible. */\n        this._isValueIndicatorVisible = false;\n        this._onPointerMove = (event) => {\n            if (this._sliderInput._isFocused) {\n                return;\n            }\n            const rect = this._hostElement.getBoundingClientRect();\n            const isHovered = this._isSliderThumbHovered(event, rect);\n            this._isHovered = isHovered;\n            if (isHovered) {\n                this._showHoverRipple();\n            }\n            else {\n                this._hideRipple(this._hoverRippleRef);\n            }\n        };\n        this._onMouseLeave = () => {\n            this._isHovered = false;\n            this._hideRipple(this._hoverRippleRef);\n        };\n        this._onFocus = () => {\n            // We don't want to show the hover ripple on top of the focus ripple.\n            // Happen when the users cursor is over a thumb and then the user tabs to it.\n            this._hideRipple(this._hoverRippleRef);\n            this._showFocusRipple();\n            this._hostElement.classList.add('mdc-slider__thumb--focused');\n        };\n        this._onBlur = () => {\n            // Happens when the user tabs away while still dragging a thumb.\n            if (!this._isActive) {\n                this._hideRipple(this._focusRippleRef);\n            }\n            // Happens when the user tabs away from a thumb but their cursor is still over it.\n            if (this._isHovered) {\n                this._showHoverRipple();\n            }\n            this._hostElement.classList.remove('mdc-slider__thumb--focused');\n        };\n        this._onDragStart = () => {\n            this._isActive = true;\n            this._showActiveRipple();\n        };\n        this._onDragEnd = () => {\n            this._isActive = false;\n            this._hideRipple(this._activeRippleRef);\n            // Happens when the user starts dragging a thumb, tabs away, and then stops dragging.\n            if (!this._sliderInput._isFocused) {\n                this._hideRipple(this._focusRippleRef);\n            }\n        };\n        this._hostElement = _elementRef.nativeElement;\n    }\n    ngAfterViewInit() {\n        this._ripple.radius = 24;\n        this._sliderInput = this._slider._getInput(this.thumbPosition);\n        this._sliderInputEl = this._sliderInput._hostElement;\n        const input = this._sliderInputEl;\n        // These listeners don't update any data bindings so we bind them outside\n        // of the NgZone to prevent Angular from needlessly running change detection.\n        this._ngZone.runOutsideAngular(() => {\n            input.addEventListener('pointermove', this._onPointerMove);\n            input.addEventListener('pointerdown', this._onDragStart);\n            input.addEventListener('pointerup', this._onDragEnd);\n            input.addEventListener('pointerleave', this._onMouseLeave);\n            input.addEventListener('focus', this._onFocus);\n            input.addEventListener('blur', this._onBlur);\n        });\n    }\n    ngOnDestroy() {\n        const input = this._sliderInputEl;\n        input.removeEventListener('pointermove', this._onPointerMove);\n        input.removeEventListener('pointerdown', this._onDragStart);\n        input.removeEventListener('pointerup', this._onDragEnd);\n        input.removeEventListener('pointerleave', this._onMouseLeave);\n        input.removeEventListener('focus', this._onFocus);\n        input.removeEventListener('blur', this._onBlur);\n    }\n    /** Handles displaying the hover ripple. */\n    _showHoverRipple() {\n        if (!this._isShowingRipple(this._hoverRippleRef)) {\n            this._hoverRippleRef = this._showRipple({ enterDuration: 0, exitDuration: 0 });\n            this._hoverRippleRef?.element.classList.add('mat-mdc-slider-hover-ripple');\n        }\n    }\n    /** Handles displaying the focus ripple. */\n    _showFocusRipple() {\n        // Show the focus ripple event if noop animations are enabled.\n        if (!this._isShowingRipple(this._focusRippleRef)) {\n            this._focusRippleRef = this._showRipple({ enterDuration: 0, exitDuration: 0 }, true);\n            this._focusRippleRef?.element.classList.add('mat-mdc-slider-focus-ripple');\n        }\n    }\n    /** Handles displaying the active ripple. */\n    _showActiveRipple() {\n        if (!this._isShowingRipple(this._activeRippleRef)) {\n            this._activeRippleRef = this._showRipple({ enterDuration: 225, exitDuration: 400 });\n            this._activeRippleRef?.element.classList.add('mat-mdc-slider-active-ripple');\n        }\n    }\n    /** Whether the given rippleRef is currently fading in or visible. */\n    _isShowingRipple(rippleRef) {\n        return rippleRef?.state === 0 /* RippleState.FADING_IN */ || rippleRef?.state === 1 /* RippleState.VISIBLE */;\n    }\n    /** Manually launches the slider thumb ripple using the specified ripple animation config. */\n    _showRipple(animation, ignoreGlobalRippleConfig) {\n        if (this._slider.disabled) {\n            return;\n        }\n        this._showValueIndicator();\n        if (this._slider._isRange) {\n            const sibling = this._slider._getThumb(this.thumbPosition === 1 /* _MatThumb.START */ ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */);\n            sibling._showValueIndicator();\n        }\n        if (this._slider._globalRippleOptions?.disabled && !ignoreGlobalRippleConfig) {\n            return;\n        }\n        return this._ripple.launch({\n            animation: this._slider._noopAnimations ? { enterDuration: 0, exitDuration: 0 } : animation,\n            centered: true,\n            persistent: true,\n        });\n    }\n    /**\n     * Fades out the given ripple.\n     * Also hides the value indicator if no ripple is showing.\n     */\n    _hideRipple(rippleRef) {\n        rippleRef?.fadeOut();\n        if (this._isShowingAnyRipple()) {\n            return;\n        }\n        if (!this._slider._isRange) {\n            this._hideValueIndicator();\n        }\n        const sibling = this._getSibling();\n        if (!sibling._isShowingAnyRipple()) {\n            this._hideValueIndicator();\n            sibling._hideValueIndicator();\n        }\n    }\n    /** Shows the value indicator ui. */\n    _showValueIndicator() {\n        this._hostElement.classList.add('mdc-slider__thumb--with-indicator');\n    }\n    /** Hides the value indicator ui. */\n    _hideValueIndicator() {\n        this._hostElement.classList.remove('mdc-slider__thumb--with-indicator');\n    }\n    _getSibling() {\n        return this._slider._getThumb(this.thumbPosition === 1 /* _MatThumb.START */ ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */);\n    }\n    /** Gets the value indicator container's native HTML element. */\n    _getValueIndicatorContainer() {\n        return this._valueIndicatorContainer?.nativeElement;\n    }\n    /** Gets the native HTML element of the slider thumb knob. */\n    _getKnob() {\n        return this._knob.nativeElement;\n    }\n    _isShowingAnyRipple() {\n        return (this._isShowingRipple(this._hoverRippleRef) ||\n            this._isShowingRipple(this._focusRippleRef) ||\n            this._isShowingRipple(this._activeRippleRef));\n    }\n    _isSliderThumbHovered(event, rect) {\n        const radius = rect.width / 2;\n        const centerX = rect.x + radius;\n        const centerY = rect.y + radius;\n        const dx = event.clientX - centerX;\n        const dy = event.clientY - centerY;\n        return Math.pow(dx, 2) + Math.pow(dy, 2) < Math.pow(radius, 2);\n    }\n}\nMatSliderVisualThumb.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatSliderVisualThumb, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i0.ElementRef }, { token: MAT_SLIDER }], target: i0.ɵɵFactoryTarget.Component });\nMatSliderVisualThumb.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0-rc.1\", type: MatSliderVisualThumb, selector: \"mat-slider-visual-thumb\", inputs: { discrete: \"discrete\", thumbPosition: \"thumbPosition\", valueIndicatorText: \"valueIndicatorText\" }, host: { classAttribute: \"mdc-slider__thumb mat-mdc-slider-visual-thumb\" }, providers: [{ provide: MAT_SLIDER_VISUAL_THUMB, useExisting: MatSliderVisualThumb }], viewQueries: [{ propertyName: \"_ripple\", first: true, predicate: MatRipple, descendants: true }, { propertyName: \"_knob\", first: true, predicate: [\"knob\"], descendants: true }, { propertyName: \"_valueIndicatorContainer\", first: true, predicate: [\"valueIndicatorContainer\"], descendants: true }], ngImport: i0, template: \"<div class=\\\"mdc-slider__value-indicator-container\\\" *ngIf=\\\"discrete\\\" #valueIndicatorContainer>\\n  <div class=\\\"mdc-slider__value-indicator\\\">\\n    <span class=\\\"mdc-slider__value-indicator-text\\\">{{valueIndicatorText}}</span>\\n  </div>\\n</div>\\n<div class=\\\"mdc-slider__thumb-knob\\\" #knob></div>\\n<div matRipple class=\\\"mat-mdc-focus-indicator\\\" [matRippleDisabled]=\\\"true\\\"></div>\\n\", styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatSliderVisualThumb, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slider-visual-thumb', host: {\n                        'class': 'mdc-slider__thumb mat-mdc-slider-visual-thumb',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [{ provide: MAT_SLIDER_VISUAL_THUMB, useExisting: MatSliderVisualThumb }], template: \"<div class=\\\"mdc-slider__value-indicator-container\\\" *ngIf=\\\"discrete\\\" #valueIndicatorContainer>\\n  <div class=\\\"mdc-slider__value-indicator\\\">\\n    <span class=\\\"mdc-slider__value-indicator-text\\\">{{valueIndicatorText}}</span>\\n  </div>\\n</div>\\n<div class=\\\"mdc-slider__thumb-knob\\\" #knob></div>\\n<div matRipple class=\\\"mat-mdc-focus-indicator\\\" [matRippleDisabled]=\\\"true\\\"></div>\\n\", styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SLIDER]\n                }] }]; }, propDecorators: { discrete: [{\n                type: Input\n            }], thumbPosition: [{\n                type: Input\n            }], valueIndicatorText: [{\n                type: Input\n            }], _ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }], _knob: [{\n                type: ViewChild,\n                args: ['knob']\n            }], _valueIndicatorContainer: [{\n                type: ViewChild,\n                args: ['valueIndicatorContainer']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(wagnermaciel): maybe handle the following edge case:\n// 1. start dragging discrete slider\n// 2. tab to disable checkbox\n// 3. without ending drag, disable the slider\n// Boilerplate for applying mixins to MatSlider.\nconst _MatSliderMixinBase = mixinColor(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'primary');\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderMixinBase {\n    constructor(_ngZone, _cdr, _platform, elementRef, _dir, _globalRippleOptions, animationMode) {\n        super(elementRef);\n        this._ngZone = _ngZone;\n        this._cdr = _cdr;\n        this._platform = _platform;\n        this._dir = _dir;\n        this._globalRippleOptions = _globalRippleOptions;\n        this._disabled = false;\n        this._discrete = false;\n        this._showTickMarks = false;\n        this._min = 0;\n        this._max = 100;\n        this._step = 0;\n        /**\n         * Function that will be used to format the value before it is displayed\n         * in the thumb label. Can be used to format very large number in order\n         * for them to fit into the slider thumb.\n         */\n        this.displayWith = (value) => `${value}`;\n        this._rippleRadius = 24;\n        // The value indicator tooltip text for the visual slider thumb(s).\n        /** @docs-private */\n        this.startValueIndicatorText = '';\n        /** @docs-private */\n        this.endValueIndicatorText = '';\n        this._isRange = false;\n        /** Whether the slider is rtl. */\n        this._isRtl = false;\n        this._hasViewInitialized = false;\n        /**\n         * The width of the tick mark track.\n         * The tick mark track width is different from full track width\n         */\n        this._tickMarkTrackWidth = 0;\n        this._hasAnimation = false;\n        this._resizeTimer = null;\n        /** The radius of the native slider's knob. AFAIK there is no way to avoid hardcoding this. */\n        this._knobRadius = 8;\n        /** Whether or not the slider thumbs overlap. */\n        this._thumbsOverlap = false;\n        this._noopAnimations = animationMode === 'NoopAnimations';\n        this._dirChangeSubscription = this._dir.change.subscribe(() => this._onDirChange());\n        this._isRtl = this._dir.value === 'rtl';\n    }\n    /** Whether the slider is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(v) {\n        this._disabled = coerceBooleanProperty(v);\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        if (endInput) {\n            endInput.disabled = this._disabled;\n        }\n        if (startInput) {\n            startInput.disabled = this._disabled;\n        }\n    }\n    /** Whether the slider displays a numeric value label upon pressing the thumb. */\n    get discrete() {\n        return this._discrete;\n    }\n    set discrete(v) {\n        this._discrete = coerceBooleanProperty(v);\n    }\n    /** Whether the slider displays tick marks along the slider track. */\n    get showTickMarks() {\n        return this._showTickMarks;\n    }\n    set showTickMarks(v) {\n        this._showTickMarks = coerceBooleanProperty(v);\n    }\n    /** The minimum value that the slider can have. */\n    get min() {\n        return this._min;\n    }\n    set min(v) {\n        const min = coerceNumberProperty(v, this._min);\n        if (this._min !== min) {\n            this._updateMin(min);\n        }\n    }\n    _updateMin(min) {\n        const prevMin = this._min;\n        this._min = min;\n        this._isRange ? this._updateMinRange({ old: prevMin, new: min }) : this._updateMinNonRange(min);\n        this._onMinMaxOrStepChange();\n    }\n    _updateMinRange(min) {\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        const oldEndValue = endInput.value;\n        const oldStartValue = startInput.value;\n        startInput.min = min.new;\n        endInput.min = Math.max(min.new, startInput.value);\n        startInput.max = Math.min(endInput.max, endInput.value);\n        startInput._updateWidthInactive();\n        endInput._updateWidthInactive();\n        min.new < min.old\n            ? this._onTranslateXChangeBySideEffect(endInput, startInput)\n            : this._onTranslateXChangeBySideEffect(startInput, endInput);\n        if (oldEndValue !== endInput.value) {\n            this._onValueChange(endInput);\n        }\n        if (oldStartValue !== startInput.value) {\n            this._onValueChange(startInput);\n        }\n    }\n    _updateMinNonRange(min) {\n        const input = this._getInput(2 /* _MatThumb.END */);\n        if (input) {\n            const oldValue = input.value;\n            input.min = min;\n            input._updateThumbUIByValue();\n            this._updateTrackUI(input);\n            if (oldValue !== input.value) {\n                this._onValueChange(input);\n            }\n        }\n    }\n    /** The maximum value that the slider can have. */\n    get max() {\n        return this._max;\n    }\n    set max(v) {\n        const max = coerceNumberProperty(v, this._max);\n        if (this._max !== max) {\n            this._updateMax(max);\n        }\n    }\n    _updateMax(max) {\n        const prevMax = this._max;\n        this._max = max;\n        this._isRange ? this._updateMaxRange({ old: prevMax, new: max }) : this._updateMaxNonRange(max);\n        this._onMinMaxOrStepChange();\n    }\n    _updateMaxRange(max) {\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        const oldEndValue = endInput.value;\n        const oldStartValue = startInput.value;\n        endInput.max = max.new;\n        startInput.max = Math.min(max.new, endInput.value);\n        endInput.min = startInput.value;\n        endInput._updateWidthInactive();\n        startInput._updateWidthInactive();\n        max.new > max.old\n            ? this._onTranslateXChangeBySideEffect(startInput, endInput)\n            : this._onTranslateXChangeBySideEffect(endInput, startInput);\n        if (oldEndValue !== endInput.value) {\n            this._onValueChange(endInput);\n        }\n        if (oldStartValue !== startInput.value) {\n            this._onValueChange(startInput);\n        }\n    }\n    _updateMaxNonRange(max) {\n        const input = this._getInput(2 /* _MatThumb.END */);\n        if (input) {\n            const oldValue = input.value;\n            input.max = max;\n            input._updateThumbUIByValue();\n            this._updateTrackUI(input);\n            if (oldValue !== input.value) {\n                this._onValueChange(input);\n            }\n        }\n    }\n    /** The values at which the thumb will snap. */\n    get step() {\n        return this._step;\n    }\n    set step(v) {\n        const step = coerceNumberProperty(v, this._step);\n        if (this._step !== step) {\n            this._updateStep(step);\n        }\n    }\n    _updateStep(step) {\n        this._step = step;\n        this._isRange ? this._updateStepRange() : this._updateStepNonRange();\n        this._onMinMaxOrStepChange();\n    }\n    _updateStepRange() {\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        const oldEndValue = endInput.value;\n        const oldStartValue = startInput.value;\n        const prevStartValue = startInput.value;\n        endInput.min = this._min;\n        startInput.max = this._max;\n        endInput.step = this._step;\n        startInput.step = this._step;\n        if (this._platform.SAFARI) {\n            endInput.value = endInput.value;\n            startInput.value = startInput.value;\n        }\n        endInput.min = Math.max(this._min, startInput.value);\n        startInput.max = Math.min(this._max, endInput.value);\n        startInput._updateWidthInactive();\n        endInput._updateWidthInactive();\n        endInput.value < prevStartValue\n            ? this._onTranslateXChangeBySideEffect(startInput, endInput)\n            : this._onTranslateXChangeBySideEffect(endInput, startInput);\n        if (oldEndValue !== endInput.value) {\n            this._onValueChange(endInput);\n        }\n        if (oldStartValue !== startInput.value) {\n            this._onValueChange(startInput);\n        }\n    }\n    _updateStepNonRange() {\n        const input = this._getInput(2 /* _MatThumb.END */);\n        if (input) {\n            const oldValue = input.value;\n            input.step = this._step;\n            if (this._platform.SAFARI) {\n                input.value = input.value;\n            }\n            input._updateThumbUIByValue();\n            if (oldValue !== input.value) {\n                this._onValueChange(input);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._updateDimensions();\n        }\n        const eInput = this._getInput(2 /* _MatThumb.END */);\n        const sInput = this._getInput(1 /* _MatThumb.START */);\n        this._isRange = !!eInput && !!sInput;\n        this._cdr.detectChanges();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            _validateInputs(this._isRange, this._getInput(2 /* _MatThumb.END */), this._getInput(1 /* _MatThumb.START */));\n        }\n        const thumb = this._getThumb(2 /* _MatThumb.END */);\n        this._rippleRadius = thumb._ripple.radius;\n        this._inputPadding = this._rippleRadius - this._knobRadius;\n        this._inputOffset = this._knobRadius;\n        this._isRange\n            ? this._initUIRange(eInput, sInput)\n            : this._initUINonRange(eInput);\n        this._updateTrackUI(eInput);\n        this._updateTickMarkUI();\n        this._updateTickMarkTrackUI();\n        this._observeHostResize();\n        this._cdr.detectChanges();\n    }\n    _initUINonRange(eInput) {\n        eInput.initProps();\n        eInput.initUI();\n        this._updateValueIndicatorUI(eInput);\n        this._hasViewInitialized = true;\n        eInput._updateThumbUIByValue();\n    }\n    _initUIRange(eInput, sInput) {\n        eInput.initProps();\n        eInput.initUI();\n        sInput.initProps();\n        sInput.initUI();\n        eInput._updateMinMax();\n        sInput._updateMinMax();\n        eInput._updateStaticStyles();\n        sInput._updateStaticStyles();\n        this._updateValueIndicatorUI(eInput);\n        this._updateValueIndicatorUI(sInput);\n        this._hasViewInitialized = true;\n        eInput._updateThumbUIByValue();\n        sInput._updateThumbUIByValue();\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._resizeObserver?.disconnect();\n        this._resizeObserver = null;\n    }\n    /** Handles updating the slider ui after a dir change. */\n    _onDirChange() {\n        this._isRtl = this._dir.value === 'rtl';\n        this._isRange ? this._onDirChangeRange() : this._onDirChangeNonRange();\n        this._updateTickMarkUI();\n    }\n    _onDirChangeRange() {\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        endInput._setIsLeftThumb();\n        startInput._setIsLeftThumb();\n        endInput.translateX = endInput._calcTranslateXByValue();\n        startInput.translateX = startInput._calcTranslateXByValue();\n        endInput._updateStaticStyles();\n        startInput._updateStaticStyles();\n        endInput._updateWidthInactive();\n        startInput._updateWidthInactive();\n        endInput._updateThumbUIByValue();\n        startInput._updateThumbUIByValue();\n    }\n    _onDirChangeNonRange() {\n        const input = this._getInput(2 /* _MatThumb.END */);\n        input._updateThumbUIByValue();\n    }\n    /** Starts observing and updating the slider if the host changes its size. */\n    _observeHostResize() {\n        if (typeof ResizeObserver === 'undefined' || !ResizeObserver) {\n            return;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            this._resizeObserver = new ResizeObserver(() => {\n                if (this._isActive()) {\n                    return;\n                }\n                if (this._resizeTimer) {\n                    clearTimeout(this._resizeTimer);\n                }\n                this._onResize();\n            });\n            this._resizeObserver.observe(this._elementRef.nativeElement);\n        });\n    }\n    /** Whether any of the thumbs are currently active. */\n    _isActive() {\n        return this._getThumb(1 /* _MatThumb.START */)._isActive || this._getThumb(2 /* _MatThumb.END */)._isActive;\n    }\n    _getValue(thumbPosition = 2 /* _MatThumb.END */) {\n        const input = this._getInput(thumbPosition);\n        if (!input) {\n            return this.min;\n        }\n        return input.value;\n    }\n    _skipUpdate() {\n        return !!(this._getInput(1 /* _MatThumb.START */)?._skipUIUpdate || this._getInput(2 /* _MatThumb.END */)?._skipUIUpdate);\n    }\n    /** Stores the slider dimensions. */\n    _updateDimensions() {\n        const rect = this._elementRef.nativeElement.getBoundingClientRect();\n        this._cachedWidth = rect.width;\n        this._cachedLeft = rect.left;\n    }\n    /** Sets the styles for the active portion of the track. */\n    _setTrackActiveStyles(styles) {\n        const trackStyle = this._trackActive.nativeElement.style;\n        const animationOriginChanged = styles.left !== trackStyle.left && styles.right !== trackStyle.right;\n        trackStyle.left = styles.left;\n        trackStyle.right = styles.right;\n        trackStyle.transformOrigin = styles.transformOrigin;\n        if (animationOriginChanged) {\n            this._elementRef.nativeElement.classList.add('mat-mdc-slider-disable-track-animation');\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                this._elementRef.nativeElement.classList.remove('mat-mdc-slider-disable-track-animation');\n                trackStyle.transform = styles.transform;\n            });\n        }\n        else {\n            trackStyle.transform = styles.transform;\n        }\n    }\n    /** Returns the translateX positioning for a tick mark based on it's index. */\n    _calcTickMarkTransform(index) {\n        // TODO(wagnermaciel): See if we can avoid doing this and just using flex to position these.\n        const translateX = index * (this._tickMarkTrackWidth / (this._tickMarks.length - 1));\n        return `translateX(${translateX}px`;\n    }\n    // Handlers for updating the slider ui.\n    _onTranslateXChange(source) {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateThumbUI(source);\n        this._updateTrackUI(source);\n        this._updateOverlappingThumbUI(source);\n    }\n    _onTranslateXChangeBySideEffect(input1, input2) {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        input1._updateThumbUIByValue();\n        input2._updateThumbUIByValue();\n    }\n    _onValueChange(source) {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateValueIndicatorUI(source);\n        this._updateTickMarkUI();\n        this._cdr.detectChanges();\n    }\n    _onMinMaxOrStepChange() {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateTickMarkUI();\n        this._updateTickMarkTrackUI();\n        this._cdr.markForCheck();\n    }\n    _onResize() {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateDimensions();\n        if (this._isRange) {\n            const eInput = this._getInput(2 /* _MatThumb.END */);\n            const sInput = this._getInput(1 /* _MatThumb.START */);\n            eInput._updateThumbUIByValue();\n            sInput._updateThumbUIByValue();\n            eInput._updateStaticStyles();\n            sInput._updateStaticStyles();\n            eInput._updateMinMax();\n            sInput._updateMinMax();\n            eInput._updateWidthInactive();\n            sInput._updateWidthInactive();\n        }\n        else {\n            const eInput = this._getInput(2 /* _MatThumb.END */);\n            if (eInput) {\n                eInput._updateThumbUIByValue();\n            }\n        }\n        this._updateTickMarkUI();\n        this._updateTickMarkTrackUI();\n        this._cdr.detectChanges();\n    }\n    /** Returns true if the slider knobs are overlapping one another. */\n    _areThumbsOverlapping() {\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        if (!startInput || !endInput) {\n            return false;\n        }\n        return endInput.translateX - startInput.translateX < 20;\n    }\n    /**\n     * Updates the class names of overlapping slider thumbs so\n     * that the current active thumb is styled to be on \"top\".\n     */\n    _updateOverlappingThumbClassNames(source) {\n        const sibling = source.getSibling();\n        const sourceThumb = this._getThumb(source.thumbPosition);\n        const siblingThumb = this._getThumb(sibling.thumbPosition);\n        siblingThumb._hostElement.classList.remove('mdc-slider__thumb--top');\n        sourceThumb._hostElement.classList.toggle('mdc-slider__thumb--top', this._thumbsOverlap);\n    }\n    /** Updates the UI of slider thumbs when they begin or stop overlapping. */\n    _updateOverlappingThumbUI(source) {\n        if (!this._isRange || this._skipUpdate()) {\n            return;\n        }\n        if (this._thumbsOverlap !== this._areThumbsOverlapping()) {\n            this._thumbsOverlap = !this._thumbsOverlap;\n            this._updateOverlappingThumbClassNames(source);\n        }\n    }\n    // _MatThumb styles update conditions\n    //\n    // 1. TranslateX, resize, or dir change\n    //    - Reason: The thumb styles need to be updated according to the new translateX.\n    // 2. Min, max, or step\n    //    - Reason: The value may have silently changed.\n    /** Updates the translateX of the given thumb. */\n    _updateThumbUI(source) {\n        if (this._skipUpdate()) {\n            return;\n        }\n        const thumb = this._getThumb(source.thumbPosition === 2 /* _MatThumb.END */ ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */);\n        thumb._hostElement.style.transform = `translateX(${source.translateX}px)`;\n    }\n    // Value indicator text update conditions\n    //\n    // 1. Value\n    //    - Reason: The value displayed needs to be updated.\n    // 2. Min, max, or step\n    //    - Reason: The value may have silently changed.\n    /** Updates the value indicator tooltip ui for the given thumb. */\n    _updateValueIndicatorUI(source) {\n        if (this._skipUpdate()) {\n            return;\n        }\n        const valuetext = this.displayWith(source.value);\n        this._hasViewInitialized\n            ? (source._valuetext = valuetext)\n            : source._hostElement.setAttribute('aria-valuetext', valuetext);\n        if (this.discrete) {\n            source.thumbPosition === 1 /* _MatThumb.START */\n                ? (this.startValueIndicatorText = valuetext)\n                : (this.endValueIndicatorText = valuetext);\n            const visualThumb = this._getThumb(source.thumbPosition);\n            valuetext.length < 3\n                ? visualThumb._hostElement.classList.add('mdc-slider__thumb--short-value')\n                : visualThumb._hostElement.classList.remove('mdc-slider__thumb--short-value');\n        }\n    }\n    // Update Tick Mark Track Width\n    //\n    // 1. Min, max, or step\n    //    - Reason: The maximum reachable value may have changed.\n    //    - Side note: The maximum reachable value is different from the maximum value set by the\n    //      user. For example, a slider with [min: 5, max: 100, step: 10] would have a maximum\n    //      reachable value of 95.\n    // 2. Resize\n    //    - Reason: The position for the maximum reachable value needs to be recalculated.\n    /** Updates the width of the tick mark track. */\n    _updateTickMarkTrackUI() {\n        if (this._skipUpdate()) {\n            return;\n        }\n        const step = this._step && this._step > 0 ? this._step : 1;\n        const maxValue = Math.floor(this.max / step) * step;\n        const percentage = (maxValue - this.min) / (this.max - this.min);\n        this._tickMarkTrackWidth = this._cachedWidth * percentage - 6;\n    }\n    // Track active update conditions\n    //\n    // 1. TranslateX\n    //    - Reason: The track active should line up with the new thumb position.\n    // 2. Min or max\n    //    - Reason #1: The 'active' percentage needs to be recalculated.\n    //    - Reason #2: The value may have silently changed.\n    // 3. Step\n    //    - Reason: The value may have silently changed causing the thumb(s) to shift.\n    // 4. Dir change\n    //    - Reason: The track active will need to be updated according to the new thumb position(s).\n    // 5. Resize\n    //    - Reason: The total width the 'active' tracks translateX is based on has changed.\n    /** Updates the scale on the active portion of the track. */\n    _updateTrackUI(source) {\n        if (this._skipUpdate()) {\n            return;\n        }\n        this._isRange\n            ? this._updateTrackUIRange(source)\n            : this._updateTrackUINonRange(source);\n    }\n    _updateTrackUIRange(source) {\n        const sibling = source.getSibling();\n        if (!sibling || !this._cachedWidth) {\n            return;\n        }\n        const activePercentage = Math.abs(sibling.translateX - source.translateX) / this._cachedWidth;\n        if (source._isLeftThumb && this._cachedWidth) {\n            this._setTrackActiveStyles({\n                left: 'auto',\n                right: `${this._cachedWidth - sibling.translateX}px`,\n                transformOrigin: 'right',\n                transform: `scaleX(${activePercentage})`,\n            });\n        }\n        else {\n            this._setTrackActiveStyles({\n                left: `${sibling.translateX}px`,\n                right: 'auto',\n                transformOrigin: 'left',\n                transform: `scaleX(${activePercentage})`,\n            });\n        }\n    }\n    _updateTrackUINonRange(source) {\n        this._isRtl\n            ? this._setTrackActiveStyles({\n                left: 'auto',\n                right: '0px',\n                transformOrigin: 'right',\n                transform: `scaleX(${1 - source.fillPercentage})`,\n            })\n            : this._setTrackActiveStyles({\n                left: '0px',\n                right: 'auto',\n                transformOrigin: 'left',\n                transform: `scaleX(${source.fillPercentage})`,\n            });\n    }\n    // Tick mark update conditions\n    //\n    // 1. Value\n    //    - Reason: a tick mark which was once active might now be inactive or vice versa.\n    // 2. Min, max, or step\n    //    - Reason #1: the number of tick marks may have changed.\n    //    - Reason #2: The value may have silently changed.\n    /** Updates the dots along the slider track. */\n    _updateTickMarkUI() {\n        if (this.step === undefined || this.min === undefined || this.max === undefined) {\n            return;\n        }\n        const step = this.step > 0 ? this.step : 1;\n        this._isRange ? this._updateTickMarkUIRange(step) : this._updateTickMarkUINonRange(step);\n        if (this._isRtl) {\n            this._tickMarks.reverse();\n        }\n    }\n    _updateTickMarkUINonRange(step) {\n        const value = this._getValue();\n        let numActive = Math.max(Math.round((value - this.min) / step), 0);\n        let numInactive = Math.max(Math.round((this.max - value) / step), 0);\n        this._isRtl ? numActive++ : numInactive++;\n        this._tickMarks = Array(numActive)\n            .fill(0 /* _MatTickMark.ACTIVE */)\n            .concat(Array(numInactive).fill(1 /* _MatTickMark.INACTIVE */));\n    }\n    _updateTickMarkUIRange(step) {\n        const endValue = this._getValue();\n        const startValue = this._getValue(1 /* _MatThumb.START */);\n        const numInactiveBeforeStartThumb = Math.max(Math.floor((startValue - this.min) / step), 0);\n        const numActive = Math.max(Math.floor((endValue - startValue) / step) + 1, 0);\n        const numInactiveAfterEndThumb = Math.max(Math.floor((this.max - endValue) / step), 0);\n        this._tickMarks = Array(numInactiveBeforeStartThumb)\n            .fill(1 /* _MatTickMark.INACTIVE */)\n            .concat(Array(numActive).fill(0 /* _MatTickMark.ACTIVE */), Array(numInactiveAfterEndThumb).fill(1 /* _MatTickMark.INACTIVE */));\n    }\n    /** Gets the slider thumb input of the given thumb position. */\n    _getInput(thumbPosition) {\n        if (thumbPosition === 2 /* _MatThumb.END */ && this._input) {\n            return this._input;\n        }\n        if (this._inputs?.length) {\n            return thumbPosition === 1 /* _MatThumb.START */ ? this._inputs.first : this._inputs.last;\n        }\n        return;\n    }\n    /** Gets the slider thumb HTML input element of the given thumb position. */\n    _getThumb(thumbPosition) {\n        return thumbPosition === 2 /* _MatThumb.END */ ? this._thumbs?.last : this._thumbs?.first;\n    }\n    _setTransition(withAnimation) {\n        this._hasAnimation = withAnimation && !this._noopAnimations;\n        this._elementRef.nativeElement.classList.toggle('mat-mdc-slider-with-animation', this._hasAnimation);\n    }\n}\nMatSlider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatSlider, deps: [{ token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1.Platform }, { token: i0.ElementRef }, { token: i2$1.Directionality, optional: true }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatSlider.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0-rc.1\", type: MatSlider, selector: \"mat-slider\", inputs: { color: \"color\", disableRipple: \"disableRipple\", disabled: \"disabled\", discrete: \"discrete\", showTickMarks: \"showTickMarks\", min: \"min\", max: \"max\", step: \"step\", displayWith: \"displayWith\" }, host: { properties: { \"class.mdc-slider--range\": \"_isRange\", \"class.mdc-slider--disabled\": \"disabled\", \"class.mdc-slider--discrete\": \"discrete\", \"class.mdc-slider--tick-marks\": \"showTickMarks\", \"class._mat-animation-noopable\": \"_noopAnimations\" }, classAttribute: \"mat-mdc-slider mdc-slider\" }, providers: [{ provide: MAT_SLIDER, useExisting: MatSlider }], queries: [{ propertyName: \"_input\", first: true, predicate: MAT_SLIDER_THUMB, descendants: true }, { propertyName: \"_inputs\", predicate: MAT_SLIDER_RANGE_THUMB }], viewQueries: [{ propertyName: \"_trackActive\", first: true, predicate: [\"trackActive\"], descendants: true }, { propertyName: \"_thumbs\", predicate: MAT_SLIDER_VISUAL_THUMB, descendants: true }], exportAs: [\"matSlider\"], usesInheritance: true, ngImport: i0, template: \"<!-- Inputs -->\\n<ng-content></ng-content>\\n\\n<!-- Track -->\\n<div class=\\\"mdc-slider__track\\\">\\n  <div class=\\\"mdc-slider__track--inactive\\\"></div>\\n  <div class=\\\"mdc-slider__track--active\\\">\\n    <div #trackActive class=\\\"mdc-slider__track--active_fill\\\"></div>\\n  </div>\\n  <div *ngIf=\\\"showTickMarks\\\" class=\\\"mdc-slider__tick-marks\\\" #tickMarkContainer>\\n    <ng-container *ngIf=\\\"_cachedWidth\\\">\\n        <div\\n          *ngFor=\\\"let tickMark of _tickMarks; let i = index\\\"\\n          [class]=\\\"tickMark === 0 ? 'mdc-slider__tick-mark--active' : 'mdc-slider__tick-mark--inactive'\\\"\\n          [style.transform]=\\\"_calcTickMarkTransform(i)\\\"></div>\\n    </ng-container>\\n  </div>\\n</div>\\n\\n<!-- Thumbs -->\\n<mat-slider-visual-thumb\\n  *ngIf=\\\"_isRange\\\"\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"1\\\"\\n  [valueIndicatorText]=\\\"startValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\\n<mat-slider-visual-thumb\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"2\\\"\\n  [valueIndicatorText]=\\\"endValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\", styles: [\".mdc-slider{cursor:pointer;height:48px;margin:0 24px;position:relative;touch-action:pan-y}.mdc-slider .mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%}.mdc-slider .mdc-slider__track--active,.mdc-slider .mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider .mdc-slider__track--active{overflow:hidden;top:-1px}.mdc-slider .mdc-slider__track--active_fill{border-top:6px solid;box-sizing:border-box;height:100%;width:100%;position:relative;-webkit-transform-origin:left;transform-origin:left}[dir=rtl] .mdc-slider .mdc-slider__track--active_fill,.mdc-slider .mdc-slider__track--active_fill[dir=rtl]{-webkit-transform-origin:right;transform-origin:right}.mdc-slider .mdc-slider__track--inactive{left:0;top:0}.mdc-slider .mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider .mdc-slider__value-indicator-container{bottom:44px;left:var(--slider-value-indicator-container-left, 50%);pointer-events:none;position:absolute;right:var(--slider-value-indicator-container-right);transform:var(--slider-value-indicator-container-transform, translateX(-50%))}.mdc-slider .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0.4, 0, 1, 1);align-items:center;border-radius:4px;display:flex;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom}.mdc-slider .mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:var(--slider-value-indicator-caret-left, 50%);position:absolute;right:var(--slider-value-indicator-caret-right);transform:var(--slider-value-indicator-caret-transform, translateX(-50%));width:0}.mdc-slider .mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}@media(prefers-reduced-motion){.mdc-slider .mdc-slider__value-indicator,.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:none}}.mdc-slider .mdc-slider__thumb{display:flex;left:-24px;outline:none;position:absolute;user-select:none;height:48px;width:48px}.mdc-slider .mdc-slider__thumb--top{z-index:1}.mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-style:solid;border-width:1px;box-sizing:content-box}.mdc-slider .mdc-slider__thumb-knob{box-sizing:border-box;left:50%;position:absolute;top:50%;transform:translate(-50%, -50%)}.mdc-slider .mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:transform 80ms ease}@media(prefers-reduced-motion){.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:none}}.mdc-slider--disabled{cursor:auto}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__input{cursor:pointer;left:0;margin:0;height:100%;opacity:0;pointer-events:none;position:absolute;top:0;width:100%}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;margin-left:8px;margin-right:8px;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider .mdc-slider__thumb-knob{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000));border-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb::before,.mat-mdc-slider .mdc-slider__thumb::after{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover::before,.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-surface--hover::before{opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded--background-focused::before,.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__track--active_fill{border-color:var(--mdc-slider-active-track-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider .mdc-slider__track--inactive{background-color:var(--mdc-slider-inactive-track-color, var(--mdc-theme-primary, #6200ee));opacity:.24}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mdc-theme-on-surface, #000));opacity:.24}.mat-mdc-slider .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mdc-theme-primary, #6200ee));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mdc-theme-on-surface, #000));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__value-indicator{background-color:var(--mdc-slider-label-container-color, #666666);opacity:1}.mat-mdc-slider .mdc-slider__value-indicator::before{border-top-color:var(--mdc-slider-label-container-color, #666666)}.mat-mdc-slider .mdc-slider__value-indicator{color:var(--mdc-slider-label-label-text-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slider .mdc-slider__track{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__track--active{height:var(--mdc-slider-active-track-height, 6px)}.mat-mdc-slider .mdc-slider__track--inactive{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{height:var(--mdc-slider-with-tick-marks-container-size, 2px);width:var(--mdc-slider-with-tick-marks-container-size, 2px)}.mat-mdc-slider.mdc-slider--disabled{opacity:0.38}.mat-mdc-slider .mdc-slider__value-indicator-text{letter-spacing:var(--mdc-slider-label-label-text-tracking, 0.0071428571em);font-size:var(--mdc-slider-label-label-text-font-size, 0.875rem);font-family:var(--mdc-slider-label-label-text-font, Roboto, sans-serif);font-weight:var(--mdc-slider-label-label-text-weight, 500);line-height:var(--mdc-slider-label-label-text-line-height, 1.375rem)}.mat-mdc-slider .mdc-slider__track--active{border-radius:var(--mdc-slider-active-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__track--inactive{border-radius:var(--mdc-slider-inactive-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__thumb-knob{border-radius:var(--mdc-slider-handle-shape, 50%);width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-style:solid;border-width:calc(var(--mdc-slider-handle-height, 20px) / 2) calc(var(--mdc-slider-handle-width, 20px) / 2)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{border-radius:var(--mdc-slider-with-tick-marks-container-shape, 50%)}.mat-mdc-slider .mdc-slider__thumb-knob{box-shadow:var(--mdc-slider-handle-elevation, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:var(--mdc-slider-with-overlap-handle-outline-color, #fff);border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mat-mdc-slider .mdc-slider__input{pointer-events:auto}.mat-mdc-slider .mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mat-mdc-slider .mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider .mdc-slider__track,.mat-mdc-slider .mdc-slider__thumb{pointer-events:none}.mat-mdc-slider .mdc-slider__value-indicator{opacity:var(--mat-mdc-slider-value-indicator-opacity, 1)}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-mdc-slider-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-mdc-slider-hover-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-mdc-slider-focus-ripple-color, transparent)}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-mdc-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: MatSliderVisualThumb, selector: \"mat-slider-visual-thumb\", inputs: [\"discrete\", \"thumbPosition\", \"valueIndicatorText\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatSlider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slider', host: {\n                        'class': 'mat-mdc-slider mdc-slider',\n                        '[class.mdc-slider--range]': '_isRange',\n                        '[class.mdc-slider--disabled]': 'disabled',\n                        '[class.mdc-slider--discrete]': 'discrete',\n                        '[class.mdc-slider--tick-marks]': 'showTickMarks',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                    }, exportAs: 'matSlider', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, inputs: ['color', 'disableRipple'], providers: [{ provide: MAT_SLIDER, useExisting: MatSlider }], template: \"<!-- Inputs -->\\n<ng-content></ng-content>\\n\\n<!-- Track -->\\n<div class=\\\"mdc-slider__track\\\">\\n  <div class=\\\"mdc-slider__track--inactive\\\"></div>\\n  <div class=\\\"mdc-slider__track--active\\\">\\n    <div #trackActive class=\\\"mdc-slider__track--active_fill\\\"></div>\\n  </div>\\n  <div *ngIf=\\\"showTickMarks\\\" class=\\\"mdc-slider__tick-marks\\\" #tickMarkContainer>\\n    <ng-container *ngIf=\\\"_cachedWidth\\\">\\n        <div\\n          *ngFor=\\\"let tickMark of _tickMarks; let i = index\\\"\\n          [class]=\\\"tickMark === 0 ? 'mdc-slider__tick-mark--active' : 'mdc-slider__tick-mark--inactive'\\\"\\n          [style.transform]=\\\"_calcTickMarkTransform(i)\\\"></div>\\n    </ng-container>\\n  </div>\\n</div>\\n\\n<!-- Thumbs -->\\n<mat-slider-visual-thumb\\n  *ngIf=\\\"_isRange\\\"\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"1\\\"\\n  [valueIndicatorText]=\\\"startValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\\n<mat-slider-visual-thumb\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"2\\\"\\n  [valueIndicatorText]=\\\"endValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\", styles: [\".mdc-slider{cursor:pointer;height:48px;margin:0 24px;position:relative;touch-action:pan-y}.mdc-slider .mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%}.mdc-slider .mdc-slider__track--active,.mdc-slider .mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider .mdc-slider__track--active{overflow:hidden;top:-1px}.mdc-slider .mdc-slider__track--active_fill{border-top:6px solid;box-sizing:border-box;height:100%;width:100%;position:relative;-webkit-transform-origin:left;transform-origin:left}[dir=rtl] .mdc-slider .mdc-slider__track--active_fill,.mdc-slider .mdc-slider__track--active_fill[dir=rtl]{-webkit-transform-origin:right;transform-origin:right}.mdc-slider .mdc-slider__track--inactive{left:0;top:0}.mdc-slider .mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider .mdc-slider__value-indicator-container{bottom:44px;left:var(--slider-value-indicator-container-left, 50%);pointer-events:none;position:absolute;right:var(--slider-value-indicator-container-right);transform:var(--slider-value-indicator-container-transform, translateX(-50%))}.mdc-slider .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0.4, 0, 1, 1);align-items:center;border-radius:4px;display:flex;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom}.mdc-slider .mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:var(--slider-value-indicator-caret-left, 50%);position:absolute;right:var(--slider-value-indicator-caret-right);transform:var(--slider-value-indicator-caret-transform, translateX(-50%));width:0}.mdc-slider .mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}@media(prefers-reduced-motion){.mdc-slider .mdc-slider__value-indicator,.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:none}}.mdc-slider .mdc-slider__thumb{display:flex;left:-24px;outline:none;position:absolute;user-select:none;height:48px;width:48px}.mdc-slider .mdc-slider__thumb--top{z-index:1}.mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-style:solid;border-width:1px;box-sizing:content-box}.mdc-slider .mdc-slider__thumb-knob{box-sizing:border-box;left:50%;position:absolute;top:50%;transform:translate(-50%, -50%)}.mdc-slider .mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:transform 80ms ease}@media(prefers-reduced-motion){.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:none}}.mdc-slider--disabled{cursor:auto}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__input{cursor:pointer;left:0;margin:0;height:100%;opacity:0;pointer-events:none;position:absolute;top:0;width:100%}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;margin-left:8px;margin-right:8px;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider .mdc-slider__thumb-knob{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000));border-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb::before,.mat-mdc-slider .mdc-slider__thumb::after{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover::before,.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-surface--hover::before{opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded--background-focused::before,.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__track--active_fill{border-color:var(--mdc-slider-active-track-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider .mdc-slider__track--inactive{background-color:var(--mdc-slider-inactive-track-color, var(--mdc-theme-primary, #6200ee));opacity:.24}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mdc-theme-on-surface, #000));opacity:.24}.mat-mdc-slider .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mdc-theme-primary, #6200ee));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mdc-theme-on-surface, #000));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__value-indicator{background-color:var(--mdc-slider-label-container-color, #666666);opacity:1}.mat-mdc-slider .mdc-slider__value-indicator::before{border-top-color:var(--mdc-slider-label-container-color, #666666)}.mat-mdc-slider .mdc-slider__value-indicator{color:var(--mdc-slider-label-label-text-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slider .mdc-slider__track{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__track--active{height:var(--mdc-slider-active-track-height, 6px)}.mat-mdc-slider .mdc-slider__track--inactive{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{height:var(--mdc-slider-with-tick-marks-container-size, 2px);width:var(--mdc-slider-with-tick-marks-container-size, 2px)}.mat-mdc-slider.mdc-slider--disabled{opacity:0.38}.mat-mdc-slider .mdc-slider__value-indicator-text{letter-spacing:var(--mdc-slider-label-label-text-tracking, 0.0071428571em);font-size:var(--mdc-slider-label-label-text-font-size, 0.875rem);font-family:var(--mdc-slider-label-label-text-font, Roboto, sans-serif);font-weight:var(--mdc-slider-label-label-text-weight, 500);line-height:var(--mdc-slider-label-label-text-line-height, 1.375rem)}.mat-mdc-slider .mdc-slider__track--active{border-radius:var(--mdc-slider-active-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__track--inactive{border-radius:var(--mdc-slider-inactive-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__thumb-knob{border-radius:var(--mdc-slider-handle-shape, 50%);width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-style:solid;border-width:calc(var(--mdc-slider-handle-height, 20px) / 2) calc(var(--mdc-slider-handle-width, 20px) / 2)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{border-radius:var(--mdc-slider-with-tick-marks-container-shape, 50%)}.mat-mdc-slider .mdc-slider__thumb-knob{box-shadow:var(--mdc-slider-handle-elevation, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:var(--mdc-slider-with-overlap-handle-outline-color, #fff);border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mat-mdc-slider .mdc-slider__input{pointer-events:auto}.mat-mdc-slider .mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mat-mdc-slider .mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider .mdc-slider__track,.mat-mdc-slider .mdc-slider__thumb{pointer-events:none}.mat-mdc-slider .mdc-slider__value-indicator{opacity:var(--mat-mdc-slider-value-indicator-opacity, 1)}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-mdc-slider-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-mdc-slider-hover-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-mdc-slider-focus-ripple-color, transparent)}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-mdc-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1.Platform }, { type: i0.ElementRef }, { type: i2$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _trackActive: [{\n                type: ViewChild,\n                args: ['trackActive']\n            }], _thumbs: [{\n                type: ViewChildren,\n                args: [MAT_SLIDER_VISUAL_THUMB]\n            }], _input: [{\n                type: ContentChild,\n                args: [MAT_SLIDER_THUMB]\n            }], _inputs: [{\n                type: ContentChildren,\n                args: [MAT_SLIDER_RANGE_THUMB, { descendants: false }]\n            }], disabled: [{\n                type: Input\n            }], discrete: [{\n                type: Input\n            }], showTickMarks: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], displayWith: [{\n                type: Input\n            }] } });\n/** Ensures that there is not an invalid configuration for the slider thumb inputs. */\nfunction _validateInputs(isRange, endInputElement, startInputElement) {\n    const startValid = !isRange || startInputElement?._hostElement.hasAttribute('matSliderStartThumb');\n    const endValid = endInputElement._hostElement.hasAttribute(isRange ? 'matSliderEndThumb' : 'matSliderThumb');\n    if (!startValid || !endValid) {\n        _throwInvalidInputConfigurationError();\n    }\n}\nfunction _throwInvalidInputConfigurationError() {\n    throw Error(`Invalid slider thumb input configuration!\n\n   Valid configurations are as follows:\n\n     <mat-slider>\n       <input matSliderThumb>\n     </mat-slider>\n\n     or\n\n     <mat-slider>\n       <input matSliderStartThumb>\n       <input matSliderEndThumb>\n     </mat-slider>\n   `);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provider that allows the slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSliderThumb),\n    multi: true,\n};\n/**\n * Provider that allows the range slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSliderRangeThumb),\n    multi: true,\n};\n/**\n * Directive that adds slider-specific behaviors to an input element inside `<mat-slider>`.\n * Up to two may be placed inside of a `<mat-slider>`.\n *\n * If one is used, the selector `matSliderThumb` must be used, and the outcome will be a normal\n * slider. If two are used, the selectors `matSliderStartThumb` and `matSliderEndThumb` must be\n * used, and the outcome will be a range slider with two slider thumbs.\n */\nclass MatSliderThumb {\n    constructor(_ngZone, _elementRef, _cdr, _slider) {\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._cdr = _cdr;\n        this._slider = _slider;\n        /** Event emitted when the `value` is changed. */\n        this.valueChange = new EventEmitter();\n        /** Event emitted when the slider thumb starts being dragged. */\n        this.dragStart = new EventEmitter();\n        /** Event emitted when the slider thumb stops being dragged. */\n        this.dragEnd = new EventEmitter();\n        /**\n         * Indicates whether this thumb is the start or end thumb.\n         * @docs-private\n         */\n        this.thumbPosition = 2 /* _MatThumb.END */;\n        /** The radius of a native html slider's knob. */\n        this._knobRadius = 8;\n        /** Whether user's cursor is currently in a mouse down state on the input. */\n        this._isActive = false;\n        /** Whether the input is currently focused (either by tab or after clicking). */\n        this._isFocused = false;\n        /**\n         * Whether the initial value has been set.\n         * This exists because the initial value cannot be immediately set because the min and max\n         * must first be relayed from the parent MatSlider component, which can only happen later\n         * in the component lifecycle.\n         */\n        this._hasSetInitialValue = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Indicates whether UI updates should be skipped.\n         *\n         * This flag is used to avoid flickering\n         * when correcting values on pointer up/down.\n         */\n        this._skipUIUpdate = false;\n        /** Callback called when the slider input value changes. */\n        this._onChangeFn = () => { };\n        /** Callback called when the slider input has been touched. */\n        this._onTouchedFn = () => { };\n        this._hostElement = _elementRef.nativeElement;\n        this._ngZone.runOutsideAngular(() => {\n            this._hostElement.addEventListener('pointerdown', this._onPointerDown.bind(this));\n            this._hostElement.addEventListener('pointermove', this._onPointerMove.bind(this));\n            this._hostElement.addEventListener('pointerup', this._onPointerUp.bind(this));\n        });\n    }\n    get value() {\n        return coerceNumberProperty(this._hostElement.value);\n    }\n    set value(v) {\n        const val = coerceNumberProperty(v).toString();\n        if (!this._hasSetInitialValue) {\n            this._initialValue = val;\n            return;\n        }\n        if (this._isActive) {\n            return;\n        }\n        this._hostElement.value = val;\n        this._updateThumbUIByValue();\n        this._slider._onValueChange(this);\n        this._cdr.detectChanges();\n    }\n    /**\n     * The current translateX in px of the slider visual thumb.\n     * @docs-private\n     */\n    get translateX() {\n        if (this._slider.min >= this._slider.max) {\n            this._translateX = 0;\n            return this._translateX;\n        }\n        if (this._translateX === undefined) {\n            this._translateX = this._calcTranslateXByValue();\n        }\n        return this._translateX;\n    }\n    set translateX(v) {\n        this._translateX = v;\n    }\n    /** @docs-private */\n    get min() {\n        return coerceNumberProperty(this._hostElement.min);\n    }\n    set min(v) {\n        this._hostElement.min = coerceNumberProperty(v).toString();\n        this._cdr.detectChanges();\n    }\n    /** @docs-private */\n    get max() {\n        return coerceNumberProperty(this._hostElement.max);\n    }\n    set max(v) {\n        this._hostElement.max = coerceNumberProperty(v).toString();\n        this._cdr.detectChanges();\n    }\n    get step() {\n        return coerceNumberProperty(this._hostElement.step);\n    }\n    set step(v) {\n        this._hostElement.step = coerceNumberProperty(v).toString();\n        this._cdr.detectChanges();\n    }\n    /** @docs-private */\n    get disabled() {\n        return coerceBooleanProperty(this._hostElement.disabled);\n    }\n    set disabled(v) {\n        this._hostElement.disabled = coerceBooleanProperty(v);\n        this._cdr.detectChanges();\n        if (this._slider.disabled !== this.disabled) {\n            this._slider.disabled = this.disabled;\n        }\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percentage() {\n        if (this._slider.min >= this._slider.max) {\n            return this._slider._isRtl ? 1 : 0;\n        }\n        return (this.value - this._slider.min) / (this._slider.max - this._slider.min);\n    }\n    /** @docs-private */\n    get fillPercentage() {\n        if (!this._slider._cachedWidth) {\n            return this._slider._isRtl ? 1 : 0;\n        }\n        if (this._translateX === 0) {\n            return 0;\n        }\n        return this.translateX / this._slider._cachedWidth;\n    }\n    /** Used to relay updates to _isFocused to the slider visual thumbs. */\n    _setIsFocused(v) {\n        this._isFocused = v;\n    }\n    ngOnDestroy() {\n        this._hostElement.removeEventListener('pointerdown', this._onPointerDown);\n        this._hostElement.removeEventListener('pointermove', this._onPointerMove);\n        this._hostElement.removeEventListener('pointerup', this._onPointerUp);\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.dragStart.complete();\n        this.dragEnd.complete();\n    }\n    /** @docs-private */\n    initProps() {\n        this._updateWidthInactive();\n        this.disabled = this._slider.disabled;\n        this.step = this._slider.step;\n        this.min = this._slider.min;\n        this.max = this._slider.max;\n        this._initValue();\n    }\n    /** @docs-private */\n    initUI() {\n        this._updateThumbUIByValue();\n    }\n    _initValue() {\n        this._hasSetInitialValue = true;\n        if (this._initialValue === undefined) {\n            this.value = this._getDefaultValue();\n        }\n        else {\n            this._hostElement.value = this._initialValue;\n            this._updateThumbUIByValue();\n            this._slider._onValueChange(this);\n            this._cdr.detectChanges();\n        }\n    }\n    _getDefaultValue() {\n        return this.min;\n    }\n    _onBlur() {\n        this._setIsFocused(false);\n        this._onTouchedFn();\n    }\n    _onFocus() {\n        this._setIsFocused(true);\n    }\n    _onChange() {\n        // only used to handle the edge case where user\n        // mousedown on the slider then uses arrow keys.\n        if (this._isActive) {\n            this._updateThumbUIByValue({ withAnimation: true });\n        }\n    }\n    _onInput() {\n        this.valueChange.emit(this.value);\n        this._onChangeFn(this.value);\n        // handles arrowing and updating the value when\n        // a step is defined.\n        if (this._slider.step || !this._isActive) {\n            this._updateThumbUIByValue({ withAnimation: true });\n        }\n        this._slider._onValueChange(this);\n    }\n    _onNgControlValueChange() {\n        // only used to handle when the value change\n        // originates outside of the slider.\n        if (!this._isActive || !this._isFocused) {\n            this._slider._onValueChange(this);\n            this._updateThumbUIByValue();\n        }\n        this._slider.disabled = this._formControl.disabled;\n    }\n    _onPointerDown(event) {\n        if (this.disabled || event.button !== 0) {\n            return;\n        }\n        this._isActive = true;\n        this._setIsFocused(true);\n        this._updateWidthActive();\n        this._slider._updateDimensions();\n        // Does nothing if a step is defined because we\n        // want the value to snap to the values on input.\n        if (!this._slider.step) {\n            this._updateThumbUIByPointerEvent(event, { withAnimation: true });\n        }\n        if (!this.disabled) {\n            this._handleValueCorrection(event);\n        }\n    }\n    /**\n     * Corrects the value of the slider on pointer up/down.\n     *\n     * Called on pointer down and up because the value is set based\n     * on the inactive width instead of the active width.\n     */\n    _handleValueCorrection(event) {\n        // Don't update the UI with the current value! The value on pointerdown\n        // and pointerup is calculated in the split second before the input(s)\n        // resize. See _updateWidthInactive() and _updateWidthActive() for more\n        // details.\n        this._skipUIUpdate = true;\n        // Note that this function gets triggered before the actual value of the\n        // slider is updated. This means if we were to set the value here, it\n        // would immediately be overwritten. Using setTimeout ensures the setting\n        // of the value happens after the value has been updated by the\n        // pointerdown event.\n        setTimeout(() => {\n            this._skipUIUpdate = false;\n            this._fixValue(event);\n        }, 0);\n    }\n    /** Corrects the value of the slider based on the pointer event's position. */\n    _fixValue(event) {\n        const xPos = event.clientX - this._slider._cachedLeft;\n        const width = this._slider._cachedWidth;\n        const step = this._slider.step === 0 ? 1 : this._slider.step;\n        const numSteps = Math.floor((this._slider.max - this._slider.min) / step);\n        const percentage = this._slider._isRtl ? 1 - xPos / width : xPos / width;\n        // To ensure the percentage is rounded to the necessary number of decimals.\n        const fixedPercentage = Math.round(percentage * numSteps) / numSteps;\n        const impreciseValue = fixedPercentage * (this._slider.max - this._slider.min) + this._slider.min;\n        const value = Math.round(impreciseValue / step) * step;\n        const prevValue = this.value;\n        const dragEvent = { source: this, parent: this._slider, value: value };\n        this._isActive ? this.dragStart.emit(dragEvent) : this.dragEnd.emit(dragEvent);\n        if (value === prevValue) {\n            // Because we prevented UI updates, if it turns out that the race\n            // condition didn't happen and the value is already correct, we\n            // have to apply the ui updates now.\n            this._slider._onValueChange(this);\n            this._slider.step > 0\n                ? this._updateThumbUIByValue()\n                : this._updateThumbUIByPointerEvent(event, { withAnimation: this._slider._hasAnimation });\n            return;\n        }\n        this.value = value;\n        this.valueChange.emit(this.value);\n        this._onChangeFn(this.value);\n        this._slider._onValueChange(this);\n        this._slider.step > 0\n            ? this._updateThumbUIByValue()\n            : this._updateThumbUIByPointerEvent(event, { withAnimation: this._slider._hasAnimation });\n    }\n    _onPointerMove(event) {\n        // Again, does nothing if a step is defined because\n        // we want the value to snap to the values on input.\n        if (!this._slider.step && this._isActive) {\n            this._updateThumbUIByPointerEvent(event);\n        }\n    }\n    _onPointerUp(event) {\n        this._isActive = false;\n        this._updateWidthInactive();\n        if (!this.disabled) {\n            this._handleValueCorrection(event);\n        }\n    }\n    _clamp(v) {\n        return Math.max(Math.min(v, this._slider._cachedWidth), 0);\n    }\n    _calcTranslateXByValue() {\n        if (this._slider._isRtl) {\n            return (1 - this.percentage) * this._slider._cachedWidth;\n        }\n        return this.percentage * this._slider._cachedWidth;\n    }\n    _calcTranslateXByPointerEvent(event) {\n        return event.clientX - this._slider._cachedLeft;\n    }\n    /**\n     * Used to set the slider width to the correct\n     * dimensions while the user is dragging.\n     */\n    _updateWidthActive() {\n        this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n        this._hostElement.style.width = `calc(100% + ${this._slider._inputPadding}px)`;\n    }\n    /**\n     * Sets the slider input to disproportionate dimensions to allow for touch\n     * events to be captured on touch devices.\n     */\n    _updateWidthInactive() {\n        this._hostElement.style.padding = '0px';\n        this._hostElement.style.width = 'calc(100% + 48px)';\n        this._hostElement.style.left = '-24px';\n    }\n    _updateThumbUIByValue(options) {\n        this.translateX = this._clamp(this._calcTranslateXByValue());\n        this._updateThumbUI(options);\n    }\n    _updateThumbUIByPointerEvent(event, options) {\n        this.translateX = this._clamp(this._calcTranslateXByPointerEvent(event));\n        this._updateThumbUI(options);\n    }\n    _updateThumbUI(options) {\n        this._slider._setTransition(!!options?.withAnimation);\n        this._slider._onTranslateXChange(this);\n    }\n    /**\n     * Sets the input's value.\n     * @param value The new value of the input\n     * @docs-private\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be invoked when the input's value changes from user input.\n     * @param fn The callback to register\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._onChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be invoked when the input is blurred by the user.\n     * @param fn The callback to register\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this._onTouchedFn = fn;\n    }\n    /**\n     * Sets the disabled state of the slider.\n     * @param isDisabled The new disabled state\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    focus() {\n        this._hostElement.focus();\n    }\n    blur() {\n        this._hostElement.blur();\n    }\n}\nMatSliderThumb.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatSliderThumb, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_SLIDER }], target: i0.ɵɵFactoryTarget.Directive });\nMatSliderThumb.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0-rc.1\", type: MatSliderThumb, selector: \"input[matSliderThumb]\", inputs: { value: \"value\" }, outputs: { valueChange: \"valueChange\", dragStart: \"dragStart\", dragEnd: \"dragEnd\" }, host: { attributes: { \"type\": \"range\" }, listeners: { \"change\": \"_onChange()\", \"input\": \"_onInput()\", \"blur\": \"_onBlur()\", \"focus\": \"_onFocus()\" }, properties: { \"attr.aria-valuetext\": \"_valuetext\" }, classAttribute: \"mdc-slider__input\" }, providers: [\n        MAT_SLIDER_THUMB_VALUE_ACCESSOR,\n        { provide: MAT_SLIDER_THUMB, useExisting: MatSliderThumb },\n    ], exportAs: [\"matSliderThumb\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatSliderThumb, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matSliderThumb]',\n                    exportAs: 'matSliderThumb',\n                    host: {\n                        'class': 'mdc-slider__input',\n                        'type': 'range',\n                        '[attr.aria-valuetext]': '_valuetext',\n                        '(change)': '_onChange()',\n                        '(input)': '_onInput()',\n                        // TODO(wagnermaciel): Consider using a global event listener instead.\n                        // Reason: I have found a semi-consistent way to mouse up without triggering this event.\n                        '(blur)': '_onBlur()',\n                        '(focus)': '_onFocus()',\n                    },\n                    providers: [\n                        MAT_SLIDER_THUMB_VALUE_ACCESSOR,\n                        { provide: MAT_SLIDER_THUMB, useExisting: MatSliderThumb },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SLIDER]\n                }] }]; }, propDecorators: { value: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], dragStart: [{\n                type: Output\n            }], dragEnd: [{\n                type: Output\n            }] } });\nclass MatSliderRangeThumb extends MatSliderThumb {\n    constructor(_ngZone, _slider, _elementRef, _cdr) {\n        super(_ngZone, _elementRef, _cdr, _slider);\n        this._cdr = _cdr;\n        this._isEndThumb = this._hostElement.hasAttribute('matSliderEndThumb');\n        this._setIsLeftThumb();\n        this.thumbPosition = this._isEndThumb ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */;\n    }\n    /** @docs-private */\n    getSibling() {\n        if (!this._sibling) {\n            this._sibling = this._slider._getInput(this._isEndThumb ? 1 /* _MatThumb.START */ : 2 /* _MatThumb.END */);\n        }\n        return this._sibling;\n    }\n    /**\n     * Returns the minimum translateX position allowed for this slider input's visual thumb.\n     * @docs-private\n     */\n    getMinPos() {\n        const sibling = this.getSibling();\n        if (!this._isLeftThumb && sibling) {\n            return sibling.translateX;\n        }\n        return 0;\n    }\n    /**\n     * Returns the maximum translateX position allowed for this slider input's visual thumb.\n     * @docs-private\n     */\n    getMaxPos() {\n        const sibling = this.getSibling();\n        if (this._isLeftThumb && sibling) {\n            return sibling.translateX;\n        }\n        return this._slider._cachedWidth;\n    }\n    _setIsLeftThumb() {\n        this._isLeftThumb =\n            (this._isEndThumb && this._slider._isRtl) || (!this._isEndThumb && !this._slider._isRtl);\n    }\n    _getDefaultValue() {\n        return this._isEndThumb && this._slider._isRange ? this.max : this.min;\n    }\n    _onInput() {\n        super._onInput();\n        this._updateSibling();\n        if (!this._isActive) {\n            this._updateWidthInactive();\n        }\n    }\n    _onNgControlValueChange() {\n        super._onNgControlValueChange();\n        this.getSibling()?._updateMinMax();\n    }\n    _onPointerDown(event) {\n        if (this.disabled) {\n            return;\n        }\n        if (this._sibling) {\n            this._sibling._updateWidthActive();\n            this._sibling._hostElement.classList.add('mat-mdc-slider-input-no-pointer-events');\n        }\n        super._onPointerDown(event);\n    }\n    _onPointerUp(event) {\n        super._onPointerUp(event);\n        if (this._sibling) {\n            this._sibling._updateWidthInactive();\n            this._sibling._hostElement.classList.remove('mat-mdc-slider-input-no-pointer-events');\n        }\n    }\n    _onPointerMove(event) {\n        super._onPointerMove(event);\n        if (!this._slider.step && this._isActive) {\n            this._updateSibling();\n        }\n    }\n    _fixValue(event) {\n        super._fixValue(event);\n        this._sibling?._updateMinMax();\n    }\n    _clamp(v) {\n        return Math.max(Math.min(v, this.getMaxPos()), this.getMinPos());\n    }\n    _updateMinMax() {\n        const sibling = this.getSibling();\n        if (!sibling) {\n            return;\n        }\n        if (this._isEndThumb) {\n            this.min = Math.max(this._slider.min, sibling.value);\n            this.max = this._slider.max;\n        }\n        else {\n            this.min = this._slider.min;\n            this.max = Math.min(this._slider.max, sibling.value);\n        }\n    }\n    _updateWidthActive() {\n        const minWidth = this._slider._rippleRadius * 2 - this._slider._inputPadding * 2;\n        const maxWidth = this._slider._cachedWidth + this._slider._inputPadding - minWidth;\n        const percentage = this._slider.min < this._slider.max\n            ? (this.max - this.min) / (this._slider.max - this._slider.min)\n            : 1;\n        const width = maxWidth * percentage + minWidth;\n        this._hostElement.style.width = `${width}px`;\n        this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n    }\n    _updateWidthInactive() {\n        const sibling = this.getSibling();\n        if (!sibling) {\n            return;\n        }\n        const maxWidth = this._slider._cachedWidth;\n        const midValue = this._isEndThumb\n            ? this.value - (this.value - sibling.value) / 2\n            : this.value + (sibling.value - this.value) / 2;\n        const _percentage = this._isEndThumb\n            ? (this.max - midValue) / (this._slider.max - this._slider.min)\n            : (midValue - this.min) / (this._slider.max - this._slider.min);\n        const percentage = this._slider.min < this._slider.max ? _percentage : 1;\n        const width = maxWidth * percentage + 24;\n        this._hostElement.style.width = `${width}px`;\n        this._hostElement.style.padding = '0px';\n        if (this._isLeftThumb) {\n            this._hostElement.style.left = '-24px';\n            this._hostElement.style.right = 'auto';\n        }\n        else {\n            this._hostElement.style.left = 'auto';\n            this._hostElement.style.right = '-24px';\n        }\n    }\n    _updateStaticStyles() {\n        this._hostElement.classList.toggle('mat-slider__right-input', !this._isLeftThumb);\n    }\n    _updateSibling() {\n        const sibling = this.getSibling();\n        if (!sibling) {\n            return;\n        }\n        sibling._updateMinMax();\n        if (this._isActive) {\n            sibling._updateWidthActive();\n        }\n        else {\n            sibling._updateWidthInactive();\n        }\n    }\n    /**\n     * Sets the input's value.\n     * @param value The new value of the input\n     * @docs-private\n     */\n    writeValue(value) {\n        this.value = value;\n        this._updateWidthInactive();\n        this._updateSibling();\n    }\n}\nMatSliderRangeThumb.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatSliderRangeThumb, deps: [{ token: i0.NgZone }, { token: MAT_SLIDER }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatSliderRangeThumb.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0-rc.1\", type: MatSliderRangeThumb, selector: \"input[matSliderStartThumb], input[matSliderEndThumb]\", providers: [\n        MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR,\n        { provide: MAT_SLIDER_RANGE_THUMB, useExisting: MatSliderRangeThumb },\n    ], exportAs: [\"matSliderRangeThumb\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatSliderRangeThumb, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matSliderStartThumb], input[matSliderEndThumb]',\n                    exportAs: 'matSliderRangeThumb',\n                    providers: [\n                        MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR,\n                        { provide: MAT_SLIDER_RANGE_THUMB, useExisting: MatSliderRangeThumb },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SLIDER]\n                }] }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatSliderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSliderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatSliderModule, declarations: [MatSlider, MatSliderThumb, MatSliderRangeThumb, MatSliderVisualThumb], imports: [MatCommonModule, CommonModule, MatRippleModule], exports: [MatSlider, MatSliderThumb, MatSliderRangeThumb] });\nMatSliderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatSliderModule, imports: [MatCommonModule, CommonModule, MatRippleModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0-rc.1\", ngImport: i0, type: MatSliderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CommonModule, MatRippleModule],\n                    exports: [MatSlider, MatSliderThumb, MatSliderRangeThumb],\n                    declarations: [MatSlider, MatSliderThumb, MatSliderRangeThumb, MatSliderVisualThumb],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatSlider, MatSliderChange, MatSliderModule, MatSliderRangeThumb, MatSliderThumb, MatSliderVisualThumb };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}