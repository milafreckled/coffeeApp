{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n    this.endpoint = 'http://localhost:3000/coffee';\n  }\n  getList(callback) {\n    this.http.get(`${this.endpoint}/coffees`).subscribe(response => {\n      console.log(response);\n      callback(response);\n    });\n  }\n  deleteCoffee(coffee, callback) {\n    this.http.delete(`${this.endpoint}/coffees/${coffee._id}`).subscribe(response => {\n      console.log(response);\n      callback(response);\n    });\n  }\n  getCoffee(_id, callback) {\n    this.http.get(`${this.endpoint}/coffees/${_id}`).subscribe(response => {\n      console.log(response);\n      callback(response);\n    });\n  }\n  save(coffee, callback) {\n    if (coffee._id) {\n      // it's an update\n      this.http.put(`${this.endpoint}/coffees/${coffee._id}`, coffee).subscribe(response => callback(true));\n    } else {\n      // it's an insert\n      this.http.post(`${this.endpoint}/coffees`, coffee).subscribe(response => callback(true));\n    }\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IACjB,aAAQ,GAAG,8BAA8B;EADR;EAGxCC,OAAO,CAACC,QAAkB;IACxB,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACC,QAAQ,UAAU,CAAC,CACvCC,SAAS,CAAEC,QAAa,IAAI;MAC5BC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBJ,QAAQ,CAACI,QAAQ,CAAC;IACtB,CAAC,CAAC;EACF;EAEAG,YAAY,CAACC,MAAc,EAAER,QAAkB;IAC7C,IAAI,CAACF,IAAI,CAACW,MAAM,CAAC,GAAG,IAAI,CAACP,QAAQ,YAAYM,MAAM,CAACE,GAAG,EAAE,CAAC,CACvDP,SAAS,CAAEC,QAAa,IAAI;MAC3BC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBJ,QAAQ,CAACI,QAAQ,CAAC;IACtB,CAAC,CAAC;EACJ;EAEAO,SAAS,CAACD,GAAW,EAAEV,QAAkB;IACvC,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACC,QAAQ,YAAYQ,GAAG,EAAE,CAAC,CACrDP,SAAS,CAAEC,QAAa,IAAI;MAC7BC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBJ,QAAQ,CAACI,QAAQ,CAAC;IACpB,CAAC,CAAC;EACN;EAEEQ,IAAI,CAACJ,MAAW,EAAER,QAAkB;IAClC,IAAIQ,MAAM,CAACE,GAAG,EAAC;MACb;MACA,IAAI,CAACZ,IAAI,CAACe,GAAG,CAAC,GAAG,IAAI,CAACX,QAAQ,YAAYM,MAAM,CAACE,GAAG,EAAE,EAAEF,MAAM,CAAC,CAC7DL,SAAS,CAAEC,QAAa,IAAKJ,QAAQ,CAAC,IAAI,CAAC,CAAC;KAC/C,MAAI;MACH;MACA,IAAI,CAACF,IAAI,CAACgB,IAAI,CAAC,GAAG,IAAI,CAACZ,QAAQ,UAAU,EAAEM,MAAM,CAAC,CAChDL,SAAS,CAAEC,QAAa,IAAKJ,QAAQ,CAAC,IAAI,CAAC,CAAC;;EAElD;;AAvCWJ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAmB,SAAXnB,WAAW;EAAAoB,YAFV;AAAM","names":["DataService","constructor","http","getList","callback","get","endpoint","subscribe","response","console","log","deleteCoffee","coffee","delete","_id","getCoffee","save","put","post","factory","providedIn"],"sourceRoot":"","sources":["/Users/ludmilamalomuz/Desktop/Frontend projects/coffeeapp-pwa/coffeeapp2/src/app/data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Coffee } from './logic/Coffee';\nimport { PlaceLocation } from './logic/PlaceLocation';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n  public endpoint = 'http://localhost:3000/coffee';\n\n  getList(callback: Function){\n    this.http.get(`${this.endpoint}/coffees`)\n     .subscribe((response: any) => {\n      console.log(response)\n      callback(response)\n  })\n  }\n\n  deleteCoffee(coffee: Coffee, callback: Function){\n    this.http.delete(`${this.endpoint}/coffees/${coffee._id}`)\n      .subscribe((response: any) => {\n        console.log(response)\n        callback(response)\n    })\n  }\n\n  getCoffee(_id: string, callback: Function){\n    this.http.get<Coffee>(`${this.endpoint}/coffees/${_id}`)\n      .subscribe((response: any) => {\n      console.log(response)\n      callback(response)\n    })\n}\n\n  save(coffee: any, callback: Function){\n    if (coffee._id){\n      // it's an update\n      this.http.put(`${this.endpoint}/coffees/${coffee._id}`, coffee)\n       .subscribe((response: any) => callback(true))\n    }else{\n      // it's an insert\n      this.http.post(`${this.endpoint}/coffees`, coffee)\n       .subscribe((response: any) => callback(true))\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}