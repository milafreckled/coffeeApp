{"ast":null,"code":"import { Coffee } from '../logic/Coffee';\nimport { TastingRating } from '../logic/TastingRating';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../geo-location.service\";\nimport * as i3 from \"../data.service\";\nimport * as i4 from \"../auth.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"@angular/material/slider\";\nimport * as i13 from \"@angular/material/slide-toggle\";\nimport * as i14 from \"@angular/material/card\";\nfunction CoffeeComponent_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Coffee name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CoffeeComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Coffee name is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CoffeeComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Place name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CoffeeComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Place name is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CoffeeComponent_mat_form_field_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-form-field\")(1, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function CoffeeComponent_mat_form_field_12_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.coffee.location.address = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.coffee.location.address);\n  }\n}\nfunction CoffeeComponent_mat_form_field_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-form-field\")(1, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function CoffeeComponent_mat_form_field_13_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.coffee.location.city = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.coffee.location.city);\n  }\n}\nfunction CoffeeComponent_mat_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Coffee name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CoffeeComponent_section_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\", 16)(1, \"label\");\n    i0.ɵɵtext(2, \"Aroma\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-slider\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function CoffeeComponent_section_23_Template_mat_slider_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.coffee.tastingRating.aroma = $event);\n    });\n    i0.ɵɵelement(4, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"label\");\n    i0.ɵɵtext(6, \"Body\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-slider\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function CoffeeComponent_section_23_Template_mat_slider_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.coffee.tastingRating.body = $event);\n    });\n    i0.ɵɵelement(8, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"label\");\n    i0.ɵɵtext(10, \"Flavor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-slider\", 19);\n    i0.ɵɵlistener(\"ngModelChange\", function CoffeeComponent_section_23_Template_mat_slider_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.coffee.tastingRating.flavor = $event);\n    });\n    i0.ɵɵelement(12, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"label\");\n    i0.ɵɵtext(14, \"Intensity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"mat-slider\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function CoffeeComponent_section_23_Template_mat_slider_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.coffee.tastingRating.intensity = $event);\n    });\n    i0.ɵɵelement(16, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"label\");\n    i0.ɵɵtext(18, \"Sweetness\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"mat-slider\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function CoffeeComponent_section_23_Template_mat_slider_ngModelChange_19_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.coffee.tastingRating.sweetness = $event);\n    });\n    i0.ɵɵelement(20, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"label\");\n    i0.ɵɵtext(22, \"Aftertaste\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"mat-slider\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function CoffeeComponent_section_23_Template_mat_slider_ngModelChange_23_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.coffee.tastingRating.afterTaste = $event);\n    });\n    i0.ɵɵelement(24, \"input\", 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r8.coffee.tastingRating.aroma);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r8.coffee.tastingRating.body);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r8.coffee.tastingRating.flavor);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r8.coffee.tastingRating.intensity);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r8.coffee.tastingRating.sweetness);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r8.coffee.tastingRating.afterTaste);\n  }\n}\nfunction CoffeeComponent_mat_option_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r22 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r22);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r22);\n  }\n}\nfunction CoffeeComponent_mat_error_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Coffee type is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CoffeeComponent {\n  constructor(route, geolocation, router, data, auth) {\n    this.route = route;\n    this.geolocation = geolocation;\n    this.router = router;\n    this.data = data;\n    this.auth = auth;\n    this.types = [\"Espresso\", \"Americano\", \"Latte\", \"Cappucino\", \"Flat white\"];\n    this.newCoffeeGroup = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z_]+( [a-zA-Z_]+)*$/)]),\n      place: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z_]+( [a-zA-Z_]+)*$/)]),\n      rating: new FormControl(0, [Validators.required]),\n      location: new FormControl('', [Validators.pattern(/^[a-zA-Z0-9_]+( [a-zA-Z0-9_]+)*$/)]),\n      city: new FormControl('', [Validators.pattern(/^[a-zA-Z_]+( [a-zA-Z_]+)*$/)]),\n      coffeeType: new FormControl('', [Validators.required])\n    });\n    this.validateControl = (controlName, errorName) => {\n      const control = this.newCoffeeGroup.get(controlName);\n      return control?.dirty && !control?.touched && control?.hasError(errorName);\n    };\n  }\n  tastingRatingChecked(checked) {\n    if (checked) {\n      this.coffee.tastingRating = new TastingRating();\n    }\n  }\n  cancel() {\n    this.router.navigate([\"/\"]);\n  }\n  save() {\n    this.data.save({\n      ...this.coffee,\n      userId: this.currentUser._id\n    }, result => {\n      if (result) {\n        this.router.navigate([\"/\"]);\n      }\n    });\n    if (this.db) {\n      const tx = this.db.transaction(\"coffees\", \"readwrite\");\n      const store = tx.objectStore(\"coffeeList\");\n      const request = store.put(this.coffee);\n    }\n  }\n  handleOfflineIndexDB() {\n    const request = indexedDB.open(\"coffees\", 1);\n    request.onerror = error => {\n      reportError(request.error);\n      if (this.db) {\n        this.db.close();\n      }\n    };\n    request.onsuccess = event => {\n      this.db = request.result;\n    };\n    request.onupgradeneeded = function (event) {\n      const db = request.result;\n      if (event.oldVersion < 1) {\n        const coffeeList = db.createObjectStore(\"coffeeList\", {\n          keyPath: \"_id\"\n        });\n        const placeIndex = coffeeList.createIndex(\"by_place\", \"place\");\n      }\n    };\n    if (this.db) {\n      this.db.onversionchange = () => {\n        // First, save any unsaved data:\n        this.save();\n        if (!document.hasFocus()) {\n          location.reload();\n        } else {\n          alert(\"Please reload this page for the latest version.\");\n        }\n      };\n    }\n    ;\n  }\n  ngOnInit() {\n    this.auth.userObject$.subscribe(user => {\n      if (user) {\n        this.currentUser = user;\n      }\n    });\n    this.coffee = new Coffee();\n    this.routingSubscription = this.route.params.subscribe(params => {\n      console.log(params[\"id\"]);\n      if (params[\"id\"]) {\n        this.coffeeId = +params[\"id\"];\n        this.data.getCoffee(params[\"id\"], response => this.coffee = response);\n      }\n    });\n    window.addEventListener('offline', this.handleOfflineIndexDB);\n    this.geolocation.requestGeoLocation(location => {\n      if (location && this.coffee.location) {\n        this.coffee.location.latitude = location.latitude;\n        this.coffee.location.longitude = location.longitude;\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.routingSubscription.unsubscribe();\n  }\n}\nCoffeeComponent.ɵfac = function CoffeeComponent_Factory(t) {\n  return new (t || CoffeeComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.GeoLocationService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.DataService), i0.ɵɵdirectiveInject(i4.AuthService));\n};\nCoffeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CoffeeComponent,\n  selectors: [[\"app-coffee\"]],\n  decls: 37,\n  vars: 17,\n  consts: [[3, \"formGroup\"], [\"matInput\", \"\", \"placeholder\", \"Coffee name\", \"name\", \"coffee\", \"formControlName\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"Place name\", \"name\", \"place\", \"formControlName\", \"place\", 3, \"ngModel\", \"ngModelChange\"], [\"min\", \"0\", \"max\", \"10\", \"showTickMarks\", \"\", \"discrete\", \"\", \"name\", \"coffee.rating\", \"step\", \"1\", 3, \"ngModel\", \"ngModelChange\"], [\"matSliderThumb\", \"\"], [3, \"change\"], [\"tastingSelector\", \"\"], [\"id\", \"tasting-rating\", 4, \"ngIf\"], [\"placeholder\", \"Coffee type\", \"name\", \"coffeType\", \"formControlName\", \"coffeeType\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"placeholder\", \"Notes\", \"name\", \"notes\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"disabled\", \"click\"], [\"matInput\", \"\", \"placeholder\", \"Address\", \"name\", \"address\", \"formControlName\", \"location\", \"pattern\", \"/\\\\w+(\\\\s\\\\w+){2,}/\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"City\", \"name\", \"city\", \"formControlName\", \"city\", \"pattern\", \"/[^a-zA-Z\\\\s]/\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"tasting-rating\"], [\"min\", \"0\", \"max\", \"10\", \"showTickMarks\", \"\", \"discrete\", \"\", \"step\", \"1\", \"name\", \"aroma\", 3, \"ngModel\", \"ngModelChange\"], [\"min\", \"0\", \"max\", \"10\", \"showTickMarks\", \"\", \"discrete\", \"\", \"step\", \"1\", \"name\", \"body\", 3, \"ngModel\", \"ngModelChange\"], [\"min\", \"0\", \"max\", \"10\", \"showTickMarks\", \"\", \"discrete\", \"\", \"step\", \"1\", \"name\", \"flavor\", 3, \"ngModel\", \"ngModelChange\"], [\"min\", \"0\", \"max\", \"10\", \"showTickMarks\", \"\", \"discrete\", \"\", \"step\", \"1\", \"name\", \"intensity\", 3, \"ngModel\", \"ngModelChange\"], [\"min\", \"0\", \"max\", \"10\", \"showTickMarks\", \"\", \"discrete\", \"\", \"step\", \"1\", \"name\", \"sweetness\", 3, \"ngModel\", \"ngModelChange\"], [\"min\", \"0\", \"max\", \"10\", \"showTickMarks\", \"\", \"discrete\", \"\", \"step\", \"1\", \"name\", \"afterTaste\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\"]],\n  template: function CoffeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r23 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-card\")(2, \"mat-card-title\");\n      i0.ɵɵtext(3, \"Basic Information\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"mat-form-field\")(5, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function CoffeeComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.coffee.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(6, CoffeeComponent_mat_error_6_Template, 2, 0, \"mat-error\", 2);\n      i0.ɵɵtemplate(7, CoffeeComponent_mat_error_7_Template, 2, 0, \"mat-error\", 2);\n      i0.ɵɵelementStart(8, \"mat-form-field\")(9, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function CoffeeComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.coffee.place = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, CoffeeComponent_mat_error_10_Template, 2, 0, \"mat-error\", 2);\n      i0.ɵɵtemplate(11, CoffeeComponent_mat_error_11_Template, 2, 0, \"mat-error\", 2);\n      i0.ɵɵtemplate(12, CoffeeComponent_mat_form_field_12_Template, 2, 1, \"mat-form-field\", 2);\n      i0.ɵɵtemplate(13, CoffeeComponent_mat_form_field_13_Template, 2, 1, \"mat-form-field\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"mat-card\")(15, \"mat-card-subtitle\");\n      i0.ɵɵtext(16, \"Overall Rating\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"mat-slider\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function CoffeeComponent_Template_mat_slider_ngModelChange_17_listener($event) {\n        return ctx.coffee.rating = $event;\n      });\n      i0.ɵɵelement(18, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, CoffeeComponent_mat_error_19_Template, 2, 0, \"mat-error\", 2);\n      i0.ɵɵelementStart(20, \"mat-slide-toggle\", 6, 7);\n      i0.ɵɵlistener(\"change\", function CoffeeComponent_Template_mat_slide_toggle_change_20_listener() {\n        i0.ɵɵrestoreView(_r23);\n        const _r7 = i0.ɵɵreference(21);\n        return i0.ɵɵresetView(ctx.tastingRatingChecked(_r7.checked));\n      });\n      i0.ɵɵtext(22, \"Tasting Rating\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(23, CoffeeComponent_section_23_Template, 25, 6, \"section\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"mat-card\")(25, \"mat-card-subtitle\");\n      i0.ɵɵtext(26, \"Coffee type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"mat-select\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function CoffeeComponent_Template_mat_select_ngModelChange_27_listener($event) {\n        return ctx.coffee.type = $event;\n      });\n      i0.ɵɵtemplate(28, CoffeeComponent_mat_option_28_Template, 2, 2, \"mat-option\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(29, CoffeeComponent_mat_error_29_Template, 2, 0, \"mat-error\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"mat-card\")(31, \"textarea\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function CoffeeComponent_Template_textarea_ngModelChange_31_listener($event) {\n        return ctx.coffee.notes = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"mat-card\")(33, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function CoffeeComponent_Template_button_click_33_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(34, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function CoffeeComponent_Template_button_click_35_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(36, \"Save\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r7 = i0.ɵɵreference(21);\n      i0.ɵɵproperty(\"formGroup\", ctx.newCoffeeGroup);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.coffee.name);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"name\", \"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"name\", \"pattern\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.coffee.place);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"place\", \"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"place\", \"pattern\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.coffee.location);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.coffee.location);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.coffee.rating);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"rating\", \"required\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", _r7.checked);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.coffee.type);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.types);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"coffeeType\", \"required\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.coffee.notes);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !ctx.newCoffeeGroup.valid);\n    }\n  },\n  dependencies: [i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.PatternValidator, i5.FormGroupDirective, i5.FormControlName, i5.NgModel, i6.NgForOf, i6.NgIf, i7.MatButton, i8.MatInput, i9.MatFormField, i9.MatError, i10.MatSelect, i11.MatOption, i12.MatSlider, i12.MatSliderThumb, i13.MatSlideToggle, i14.MatCard, i14.MatCardSubtitle, i14.MatCardTitle],\n  styles: [\"form[_ngcontent-%COMP%]{\\n    max-width: 60vw;\\n    margin: 20px auto 0 auto;\\n}\\nmat-card[_ngcontent-%COMP%]{\\n    padding: 20px;\\n}\\n\\ninput[_ngcontent-%COMP%]{\\n    width: 100%;\\n}\\n\\nmat-form-field[_ngcontent-%COMP%], mat-select[_ngcontent-%COMP%]{\\n    width: 100%;\\n}\\n\\nmat-card-title[_ngcontent-%COMP%]{\\n    font-size: larger;\\n}\\n\\nsection#tastingRating[_ngcontent-%COMP%]    > mat-slider[_ngcontent-%COMP%]{\\n    margin-left: 1rem;\\n    width: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29mZmVlL2NvZmZlZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLHdCQUF3QjtBQUM1QjtBQUNBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixVQUFVO0FBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyJmb3Jte1xuICAgIG1heC13aWR0aDogNjB2dztcbiAgICBtYXJnaW46IDIwcHggYXV0byAwIGF1dG87XG59XG5tYXQtY2FyZHtcbiAgICBwYWRkaW5nOiAyMHB4O1xufVxuXG5pbnB1dHtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxubWF0LWZvcm0tZmllbGQsIG1hdC1zZWxlY3R7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbm1hdC1jYXJkLXRpdGxle1xuICAgIGZvbnQtc2l6ZTogbGFyZ2VyO1xufVxuXG5zZWN0aW9uI3Rhc3RpbmdSYXRpbmcgPiBtYXQtc2xpZGVye1xuICAgIG1hcmdpbi1sZWZ0OiAxcmVtO1xuICAgIHdpZHRoOiA5MCU7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,MAAM,QAAQ,iBAAiB;AAGxC,SAASC,aAAa,QAAQ,wBAAwB;AAEtD,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;;;;;;;;;;;ICA3DC,iCAAuD;IAAAA,uCAAuB;IAAAA,iBAAY;;;;;IAC1FA,iCAAsD;IAAAA,sCAAsB;IAAAA,iBAAY;;;;;IAKxFA,iCAAwD;IAAAA,sCAAsB;IAAAA,iBAAY;;;;;IAC1FA,iCAAuD;IAAAA,qCAAqB;IAAAA,iBAAY;;;;;;IACxFA,sCAAwC;IAEpCA;MAAAA;MAAA;MAAA,OAAaA,wDAA+B;IAAA,EAAP;IADrCA,iBACkE;;;;IAAlEA,eAAqC;IAArCA,wDAAqC;;;;;;IAEzCA,sCAAwC;IAEpCA;MAAAA;MAAA;MAAA,OAAaA,qDAA4B;IAAA,EAAP;IADlCA,iBAC4D;;;;IAA5DA,eAAkC;IAAlCA,qDAAkC;;;;;IAQtCA,iCAAyD;IAAAA,uCAAuB;IAAAA,iBAAY;;;;;;IAE5FA,mCAA6D;IAClDA,qBAAK;IAAAA,iBAAQ;IACpBA,sCAAmH;IAAzCA;MAAAA;MAAA;MAAA,OAAaA,2DAC9F;IAAA,EADyH;IACnHA,2BAAsB;IAAAA,iBAAa;IAClCA,6BAAO;IAAAA,oBAAI;IAAAA,iBAAQ;IACnBA,sCAAiH;IAAxCA;MAAAA;MAAA;MAAA,OAAaA,0DAC7F;IAAA,EADuH;IAC5GA,2BAAsB;IAC1BA,iBAAa;IACbA,6BAAO;IAAAA,uBAAM;IAAAA,iBAAQ;IACrBA,uCACC;IAD0EA;MAAAA;MAAA;MAAA,OAAaA,4DAC9F;IAAA,EAD0H;IACnHA,4BAAsB;IAAAA,iBAAa;IACpCA,8BAAO;IAAAA,0BAAS;IAAAA,iBAAQ;IACxBA,uCACC;IAD6EA;MAAAA;MAAA;MAAA,OAAaA,+DACjG;IAAA,EADgI;IACzHA,4BAAsB;IAAAA,iBAAa;IACpCA,8BAAO;IAAAA,0BAAS;IAAAA,iBAAQ;IACxBA,uCACA;IAD8EA;MAAAA;MAAA;MAAA,OAAaA,+DACjG;IAAA,EADgI;IAC1HA,4BAAsB;IAAAA,iBAAa;IACnCA,8BAAO;IAAAA,2BAAU;IAAAA,iBAAQ;IACzBA,uCACC;IAD8EA;MAAAA;MAAA;MAAA,OAAaA,gEAClG;IAAA,EADkI;IAC3HA,4BAAsB;IAAAA,iBAAa;;;;IAjBsCA,eAAwC;IAAxCA,2DAAwC;IAGzCA,eAAuC;IAAvCA,0DAAuC;IAIrCA,eAAyC;IAAzCA,4DAAyC;IAGtCA,eAA4C;IAA5CA,+DAA4C;IAG5CA,eAA4C;IAA5CA,+DAA4C;IAG3CA,eAA6C;IAA7CA,gEAA6C;;;;;IAQxHA,sCAAsD;IAAAA,YAAQ;IAAAA,iBAAa;;;;IAApCA,gCAAc;IAACA,eAAQ;IAARA,8BAAQ;;;;;IAElEA,iCAA6D;IAAAA,uCAAuB;IAAAA,iBAAY;;;AD3C5G,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,KAAqB,EAAUC,WAA+B,EACxEC,MAAc,EAAUC,IAAiB,EAAUC,IAAiB;IAD1D,UAAK,GAALJ,KAAK;IAA0B,gBAAW,GAAXC,WAAW;IACpD,WAAM,GAANC,MAAM;IAAkB,SAAI,GAAJC,IAAI;IAAuB,SAAI,GAAJC,IAAI;IAMjE,UAAK,GAAG,CAAC,UAAU,EAAE,WAAW,EAAE,OAAO,EAAE,WAAW,EAAE,YAAY,CAAC;IACrE,mBAAc,GAAG,IAAIV,SAAS,CAAC;MAC7BW,IAAI,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,OAAO,CAAC,4BAA4B,CAAC,CAAC,CAAC;MAClGC,KAAK,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,OAAO,CAAC,4BAA4B,CAAC,CAAC,CAAC;MACnGE,MAAM,EAAE,IAAId,WAAW,CAAC,CAAC,EAAE,CAACC,UAAU,CAACU,QAAQ,CAAC,CAAC;MACjDI,QAAQ,EAAE,IAAIf,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACW,OAAO,CAAC,kCAAkC,CAAC,CAAC,CAAC;MACvFI,IAAI,EAAE,IAAIhB,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACW,OAAO,CAAC,4BAA4B,CAAC,CAAC,CAAC;MAC7EK,UAAU,EAAE,IAAIjB,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACU,QAAQ,CAAC;KACtD,CAAC;IAwDK,oBAAe,GAAG,CAACO,WAAmB,EAAEC,SAAiB,KAAI;MAClE,MAAMC,OAAO,GAAG,IAAI,CAACC,cAAc,CAACC,GAAG,CAACJ,WAAW,CAAC;MACpD,OAAOE,OAAO,EAAEG,KAAK,IAAI,CAACH,OAAO,EAAEI,OAAO,IAAIJ,OAAO,EAAEK,QAAQ,CAACN,SAAS,CAAC;IAC5E,CAAC;EAxEH;EAeEO,oBAAoB,CAACC,OAAgB;IACnC,IAAIA,OAAO,EAAC;MACV,IAAI,CAACC,MAAM,CAACC,aAAa,GAAG,IAAI/B,aAAa,EAAE;;EAEnD;EAEAgC,MAAM;IACJ,IAAI,CAACvB,MAAM,CAACwB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7B;EAEAC,IAAI;IACF,IAAI,CAACxB,IAAI,CAACwB,IAAI,CAAC;MAAE,GAAG,IAAI,CAACJ,MAAM;MAAEK,MAAM,EAAE,IAAI,CAACC,WAAW,CAACC;IAAG,CAAC,EAAGC,MAAW,IAAI;MAC9E,IAAIA,MAAM,EAAC;QACT,IAAI,CAAC7B,MAAM,CAACwB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;IAE/B,CAAC,CAAC;IACF,IAAI,IAAI,CAACM,EAAE,EAAC;MACV,MAAMC,EAAE,GAAG,IAAI,CAACD,EAAE,CAACE,WAAW,CAAC,SAAS,EAAE,WAAW,CAAC;MACtD,MAAMC,KAAK,GAAGF,EAAE,CAACG,WAAW,CAAC,YAAY,CAAC;MAC1C,MAAMC,OAAO,GAAGF,KAAK,CAACG,GAAG,CAAC,IAAI,CAACf,MAAM,CAAC;;EAE1C;EAEAgB,oBAAoB;IAClB,MAAMF,OAAO,GAAGG,SAAS,CAACC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IAC5CJ,OAAO,CAACK,OAAO,GAAIC,KAAK,IAAI;MAC1BC,WAAW,CAACP,OAAO,CAACM,KAAK,CAAC;MAC1B,IAAI,IAAI,CAACX,EAAE,EAAC;QACV,IAAI,CAACA,EAAE,CAACa,KAAK,EAAE;;IAEnB,CAAC;IACDR,OAAO,CAACS,SAAS,GAAIC,KAAU,IAAI;MACjC,IAAI,CAACf,EAAE,GAAGK,OAAO,CAACN,MAAM;IAC1B,CAAC;IACDM,OAAO,CAACW,eAAe,GAAG,UAASD,KAAK;MACtC,MAAMf,EAAE,GAAGK,OAAO,CAACN,MAAM;MACzB,IAAIgB,KAAK,CAACE,UAAU,GAAG,CAAC,EAAC;QACvB,MAAMC,UAAU,GAAGlB,EAAE,CAACmB,iBAAiB,CAAC,YAAY,EAAE;UAACC,OAAO,EAAE;QAAK,CAAC,CAAC;QACvE,MAAMC,UAAU,GAAGH,UAAU,CAACI,WAAW,CAAC,UAAU,EAAE,OAAO,CAAC;;IAElE,CAAC;IACD,IAAI,IAAI,CAACtB,EAAE,EAAC;MACV,IAAI,CAACA,EAAE,CAACuB,eAAe,GAAG,MAAK;QAC/B;QACE,IAAI,CAAC5B,IAAI,EAAE;QACX,IAAI,CAAC6B,QAAQ,CAACC,QAAQ,EAAE,EAAE;UACxB/C,QAAQ,CAACgD,MAAM,EAAE;SAClB,MAAM;UACHC,KAAK,CAAC,iDAAiD,CAAC;;MAE9D,CAAC;;IACF;EACH;EAOAC,QAAQ;IACN,IAAI,CAACxD,IAAI,CAACyD,WAAW,CAACC,SAAS,CAACC,IAAI,IAAG;MACrC,IAAIA,IAAI,EAAC;QACP,IAAI,CAAClC,WAAW,GAAGkC,IAAI;;IAE3B,CAAC,CAAC;IACF,IAAI,CAACxC,MAAM,GAAG,IAAI/B,MAAM,EAAE;IAC1B,IAAI,CAACwE,mBAAmB,GAAG,IAAI,CAAChE,KAAK,CAACiE,MAAM,CAACH,SAAS,CAACG,MAAM,IAAG;MAC9DC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,IAAI,CAAC,CAAC;MACzB,IAAIA,MAAM,CAAC,IAAI,CAAC,EAAC;QACf,IAAI,CAACG,QAAQ,GAAG,CAACH,MAAM,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC9D,IAAI,CAACkE,SAAS,CAACJ,MAAM,CAAC,IAAI,CAAC,EAAGK,QAAgB,IAAK,IAAI,CAAC/C,MAAM,GAAG+C,QAAQ,CAAC;;IAEnF,CAAC,CAAC;IAEFC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACjC,oBAAoB,CAAC;IAC7D,IAAI,CAACtC,WAAW,CAACwE,kBAAkB,CAAE/D,QAAa,IAAI;MACpD,IAAIA,QAAQ,IAAI,IAAI,CAACa,MAAM,CAACb,QAAQ,EAAC;QACnC,IAAI,CAACa,MAAM,CAACb,QAAQ,CAACgE,QAAQ,GAAGhE,QAAQ,CAACgE,QAAQ;QACjD,IAAI,CAACnD,MAAM,CAACb,QAAQ,CAACiE,SAAS,GAAGjE,QAAQ,CAACiE,SAAS;;IAEvD,CAAC,CAAC;EACJ;EAEAC,WAAW;IACT,IAAI,CAACZ,mBAAmB,CAACa,WAAW,EAAE;EACxC;;AAxGW/E,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAgF;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MChB5BrF,+BAAmC;MAEXA,iCAAiB;MAAAA,iBAAiB;MAClDA,sCAAgB;MAEZA;QAAA;MAAA,EAAyB;MADzBA,iBAC2B;MAE/BA,4EAA0F;MAC1FA,4EAAwF;MACxFA,sCAAgB;MAEZA;QAAA;MAAA,EAA0B;MAD1BA,iBAC4B;MAEhCA,8EAA0F;MAC1FA,8EAAwF;MACxFA,wFAGiB;MACjBA,wFAGiB;MACrBA,iBAAW;MAEXA,iCAAU;MACaA,+BAAc;MAAAA,iBAAoB;MACrDA,sCACS;MADgEA;QAAA;MAAA,EAA2B;MAC3FA,4BAAsB;MAAAA,iBAAa;MAC5CA,8EAA4F;MAC5FA,+CAA4F;MAAzDA;QAAAA;QAAA;QAAA,OAAUA,oDAA6C;MAAA,EAAC;MAACA,+BAAc;MAAAA,iBAAmB;MAC7HA,2EAoBU;MAEdA,iBAAW;MACXA,iCAAU;MACaA,4BAAW;MAAAA,iBAAoB;MAC9CA,sCAAuH;MAAhEA;QAAA;MAAA,EAAyB;MAC5EA,iFAA2E;MAC/EA,iBAAa;MACbA,8EAAgG;MACxGA,iBAAW;MACPA,iCAAU;MAENA;QAAA;MAAA,EAA0B;MAAEA,iBAAW;MAE3CA,iCAAU;MACoBA;QAAA,OAASsF,YAAQ;MAAA,EAAC;MAACtF,uBAAM;MAAAA,iBAAS;MAC5DA,mCAA6F;MAApDA;QAAA,OAASsF,UAAM;MAAA,EAAC;MAAoCtF,qBAAI;MAAAA,iBAAS;;;;MAnEhHA,8CAA4B;MAKtBA,eAAyB;MAAzBA,yCAAyB;MAEjBA,eAAyC;MAAzCA,8DAAyC;MACzCA,eAAwC;MAAxCA,6DAAwC;MAGhDA,eAA0B;MAA1BA,0CAA0B;MAElBA,eAA0C;MAA1CA,+DAA0C;MAC1CA,eAAyC;MAAzCA,8DAAyC;MACpCA,eAAqB;MAArBA,0CAAqB;MAIrBA,eAAqB;MAArBA,0CAAqB;MAQmCA,eAA2B;MAA3BA,2CAA2B;MAExFA,eAA2C;MAA3CA,gEAA2C;MAE7CA,eAA6B;MAA7BA,kCAA6B;MAyBoBA,eAAyB;MAAzBA,yCAAyB;MAC/CA,eAAQ;MAARA,mCAAQ;MAE7BA,eAA+C;MAA/CA,oEAA+C;MAI3DA,eAA0B;MAA1BA,0CAA0B;MAIgCA,eAAkC;MAAlCA,oDAAkC","names":["Coffee","TastingRating","FormGroup","FormControl","Validators","i0","CoffeeComponent","constructor","route","geolocation","router","data","auth","name","required","pattern","place","rating","location","city","coffeeType","controlName","errorName","control","newCoffeeGroup","get","dirty","touched","hasError","tastingRatingChecked","checked","coffee","tastingRating","cancel","navigate","save","userId","currentUser","_id","result","db","tx","transaction","store","objectStore","request","put","handleOfflineIndexDB","indexedDB","open","onerror","error","reportError","close","onsuccess","event","onupgradeneeded","oldVersion","coffeeList","createObjectStore","keyPath","placeIndex","createIndex","onversionchange","document","hasFocus","reload","alert","ngOnInit","userObject$","subscribe","user","routingSubscription","params","console","log","coffeeId","getCoffee","response","window","addEventListener","requestGeoLocation","latitude","longitude","ngOnDestroy","unsubscribe","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/ludmilamalomuz/Desktop/Frontend projects/coffeeapp-pwa/coffeeapp2/src/app/coffee/coffee.component.ts","/Users/ludmilamalomuz/Desktop/Frontend projects/coffeeapp-pwa/coffeeapp2/src/app/coffee/coffee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Coffee } from '../logic/Coffee';\nimport { Subscription } from 'rxjs';\nimport { GeoLocationService } from '../geo-location.service';\nimport { TastingRating } from '../logic/TastingRating';\nimport { DataService } from '../data.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { User } from '../logic/User';\nimport { AuthService } from '../auth.service';\n@Component({\n  selector: 'app-coffee',\n  templateUrl: './coffee.component.html',\n  styleUrls: ['./coffee.component.css']\n})\n\nexport class CoffeeComponent implements OnInit{\n  currentUser!: User;\n  constructor(private route: ActivatedRoute, private geolocation: GeoLocationService,\n    private router: Router, private data: DataService, private auth: AuthService){\n}\n  coffee!: Coffee;\n  coffeeId!: number;\n  routingSubscription!: Subscription;\n  db: IDBDatabase | undefined;\n  types = [\"Espresso\", \"Americano\", \"Latte\", \"Cappucino\", \"Flat white\"];\n  newCoffeeGroup = new FormGroup({\n    name: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z_]+( [a-zA-Z_]+)*$/)]),\n    place: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z_]+( [a-zA-Z_]+)*$/)]),\n    rating: new FormControl(0, [Validators.required]),\n    location: new FormControl('', [Validators.pattern(/^[a-zA-Z0-9_]+( [a-zA-Z0-9_]+)*$/)]),\n    city: new FormControl('', [Validators.pattern(/^[a-zA-Z_]+( [a-zA-Z_]+)*$/)]),\n    coffeeType: new FormControl('', [Validators.required])\n  })\n\n  tastingRatingChecked(checked: boolean){\n    if (checked){\n      this.coffee.tastingRating = new TastingRating();\n    }\n  }\n\n  cancel(){\n    this.router.navigate([\"/\"]);\n  }\n\n  save(){\n    this.data.save({ ...this.coffee, userId: this.currentUser._id}, (result: any) => {\n      if (result){\n        this.router.navigate([\"/\"]);\n      }\n    })\n    if (this.db){\n      const tx = this.db.transaction(\"coffees\", \"readwrite\");\n      const store = tx.objectStore(\"coffeeList\");\n      const request = store.put(this.coffee);\n    }\n  }\n\n  handleOfflineIndexDB(){\n    const request = indexedDB.open(\"coffees\", 1);\n    request.onerror = (error) => {\n      reportError(request.error);\n      if (this.db){\n        this.db.close();\n      }\n    }\n    request.onsuccess = (event: any) => {\n      this.db = request.result;\n    }\n    request.onupgradeneeded = function(event) {\n      const db = request.result;\n      if (event.oldVersion < 1){\n        const coffeeList = db.createObjectStore(\"coffeeList\", {keyPath: \"_id\"});\n        const placeIndex = coffeeList.createIndex(\"by_place\", \"place\");\n      }\n    }\n    if (this.db){\n      this.db.onversionchange = () => {\n      // First, save any unsaved data:\n        this.save();\n        if (!document.hasFocus()) {\n          location.reload();\n        } else {\n            alert(\"Please reload this page for the latest version.\");\n          }\n      };\n    };\n  }\n\n  public validateControl = (controlName: string, errorName: string) =>{  \n    const control = this.newCoffeeGroup.get(controlName);\n    return control?.dirty && !control?.touched && control?.hasError(errorName);\n  }\n\n  ngOnInit(){\n    this.auth.userObject$.subscribe(user => {\n      if (user){\n        this.currentUser = user;\n      }\n    })\n    this.coffee = new Coffee();\n    this.routingSubscription = this.route.params.subscribe(params => {\n      console.log(params[\"id\"]);\n      if (params[\"id\"]){\n        this.coffeeId = +params[\"id\"]\n        this.data.getCoffee(params[\"id\"], (response: Coffee) => this.coffee = response);\n      }\n    });\n    \n    window.addEventListener('offline', this.handleOfflineIndexDB);\n    this.geolocation.requestGeoLocation((location: any) => {\n      if (location && this.coffee.location){\n        this.coffee.location.latitude = location.latitude;\n        this.coffee.location.longitude = location.longitude;\n      }\n    })\n  }\n\n  ngOnDestroy(){\n    this.routingSubscription.unsubscribe();\n  }\n}\n","<form [formGroup]=\"newCoffeeGroup\">\n    <mat-card>\n        <mat-card-title>Basic Information</mat-card-title>\n        <mat-form-field>\n            <input matInput placeholder=\"Coffee name\" name=\"coffee\" formControlName=\"name\"\n            [(ngModel)]=\"coffee.name\"/>      \n        </mat-form-field>\n        <mat-error *ngIf=\"validateControl('name', 'required')\">Coffee name is required</mat-error>\n        <mat-error *ngIf=\"validateControl('name', 'pattern')\">Coffee name is invalid</mat-error>\n        <mat-form-field>\n            <input matInput placeholder=\"Place name\" name=\"place\" formControlName=\"place\"\n            [(ngModel)]=\"coffee.place\"/>\n        </mat-form-field>\n        <mat-error *ngIf=\"validateControl('place', 'required')\">Place name is required</mat-error>\n        <mat-error *ngIf=\"validateControl('place', 'pattern')\">Place name is invalid</mat-error>\n        <mat-form-field *ngIf=\"coffee.location\">\n            <input matInput placeholder=\"Address\" name=\"address\" formControlName=\"location\"\n            [(ngModel)]=\"coffee.location.address\" pattern=\"/\\w+(\\s\\w+){2,}/\"/>\n        </mat-form-field>\n        <mat-form-field *ngIf=\"coffee.location\">\n            <input matInput placeholder=\"City\" name=\"city\" formControlName=\"city\"\n            [(ngModel)]=\"coffee.location.city\" pattern=\"/[^a-zA-Z\\s]/\"/>\n        </mat-form-field>\n    </mat-card>\n    \n    <mat-card>\n        <mat-card-subtitle>Overall Rating</mat-card-subtitle>\n        <mat-slider min=\"0\" max=\"10\" showTickMarks discrete name=\"coffee.rating\" [(ngModel)]=\"coffee.rating\"\n        step=\"1\"><input matSliderThumb></mat-slider>\n        <mat-error *ngIf=\"validateControl('rating', 'required')\">Coffee name is required</mat-error>\n        <mat-slide-toggle #tastingSelector (change)=\"tastingRatingChecked(tastingSelector.checked)\">Tasting Rating</mat-slide-toggle>\n        <section *ngIf=\"tastingSelector.checked\" id=\"tasting-rating\">\n            <label>Aroma</label>\n            <mat-slider min=\"0\" max=\"10\" showTickMarks discrete step=\"1\" name=\"aroma\" [(ngModel)]=\"coffee.tastingRating.aroma\">\n           <input matSliderThumb></mat-slider>\n            <label>Body</label>\n            <mat-slider min=\"0\" max=\"10\" showTickMarks discrete step=\"1\" name=\"body\" [(ngModel)]=\"coffee.tastingRating.body\">\n                <input matSliderThumb>\n            </mat-slider>\n            <label>Flavor</label>\n            <mat-slider min=\"0\" max=\"10\" showTickMarks discrete step=\"1\" name=\"flavor\" [(ngModel)]=\"coffee.tastingRating.flavor\"\n            ><input matSliderThumb></mat-slider>\n            <label>Intensity</label>\n            <mat-slider min=\"0\" max=\"10\" showTickMarks discrete step=\"1\" name=\"intensity\" [(ngModel)]=\"coffee.tastingRating.intensity\"\n            ><input matSliderThumb></mat-slider>\n            <label>Sweetness</label>\n            <mat-slider min=\"0\" max=\"10\" showTickMarks discrete step=\"1\" name=\"sweetness\" [(ngModel)]=\"coffee.tastingRating.sweetness\"\n           ><input matSliderThumb></mat-slider>\n            <label>Aftertaste</label>\n            <mat-slider min=\"0\" max=\"10\" showTickMarks discrete step=\"1\" name=\"afterTaste\" [(ngModel)]=\"coffee.tastingRating.afterTaste\"\n            ><input matSliderThumb></mat-slider>\n        </section>\n    \n    </mat-card>\n    <mat-card>\n        <mat-card-subtitle>Coffee type</mat-card-subtitle>   \n            <mat-select placeholder=\"Coffee type\" name=\"coffeType\" [(ngModel)]=\"coffee.type\" formControlName=\"coffeeType\" required>             \n                <mat-option *ngFor=\"let type of types\" [value]=\"type\">{{type}}</mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"validateControl('coffeeType', 'required')\">Coffee type is required</mat-error> \n    </mat-card> \n        <mat-card>\n            <textarea matInput placeholder=\"Notes\" name=\"notes\"\n            [(ngModel)]=\"coffee.notes\" ></textarea>\n    </mat-card>\n        <mat-card>\n            <button mat-raised-button (click)=\"cancel()\">Cancel</button>\n            <button mat-raised-button color=\"accent\" (click)=\"save()\" [disabled]=\"!newCoffeeGroup.valid\">Save</button>\n        </mat-card>   \n    </form>\n    "]},"metadata":{},"sourceType":"module","externalDependencies":[]}