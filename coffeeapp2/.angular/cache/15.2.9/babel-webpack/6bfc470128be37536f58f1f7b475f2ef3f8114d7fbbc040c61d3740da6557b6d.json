{"ast":null,"code":"import _classPrivateFieldInitSpec from \"/Users/ludmilamalomuz/Desktop/Frontend projects/coffeeapp-pwa/coffeeapp2/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/Users/ludmilamalomuz/Desktop/Frontend projects/coffeeapp-pwa/coffeeapp2/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js\";\nimport _classPrivateFieldSet from \"/Users/ludmilamalomuz/Desktop/Frontend projects/coffeeapp-pwa/coffeeapp2/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nvar _userBehaviourSubject = /*#__PURE__*/new WeakMap();\nexport class AuthService {\n  constructor(http) {\n    _classPrivateFieldInitSpec(this, _userBehaviourSubject, {\n      writable: true,\n      value: void 0\n    });\n    this.http = http;\n    _classPrivateFieldSet(this, _userBehaviourSubject, new BehaviorSubject(null));\n    this.userObject$ = _classPrivateFieldGet(this, _userBehaviourSubject).asObservable();\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      }),\n      withCredentials: true\n    };\n    this.endpoint = 'http://localhost:/3000';\n  }\n  getCookies(cname) {\n    let name = cname + \"=\";\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let ca = decodedCookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  }\n  login(userData) {\n    return this.http.post(`${this.endpoint}/login`, {\n      username: userData.username,\n      password: userData.password\n    }, this.httpOptions);\n  }\n  register(userData) {\n    return this.http.post(`${this.endpoint}/register`, {\n      username: userData.username,\n      password: userData.password\n    });\n  }\n  isLoggedIn() {\n    return this.getCookies('token') && _classPrivateFieldGet(this, _userBehaviourSubject) !== null;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,eAAe,QAAQ,MAAM;;;;AAMtC,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAA;MAAA;MAAA;IAAA;IAAhB,SAAI,GAAJA,IAAI;IAFxB,mDAAwB,IAAIH,eAAe,CAAc,IAAI,CAAC;IACvD,gBAAW,GAAG,0BAAI,yBAAuBI,YAAY,EAAE;IAE9D,gBAAW,GAAG;MACZC,OAAO,EAAE,IAAIN,WAAW,CAAC;QACzB,cAAc,EAAE;OACf,CAAC;MACFO,eAAe,EAAE;KAClB;IACD,aAAQ,GAAG,wBAAwB;EAPK;EAQxCC,UAAU,CAACC,KAAa;IACpB,IAAIC,IAAI,GAAGD,KAAK,GAAG,GAAG;IACtB,IAAIE,aAAa,GAAGC,kBAAkB,CAACC,QAAQ,CAACC,MAAM,CAAC;IACvD,IAAIC,EAAE,GAAGJ,aAAa,CAACK,KAAK,CAAC,GAAG,CAAC;IACjC,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,EAAE,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACjC,IAAIE,CAAC,GAAGJ,EAAE,CAACE,CAAC,CAAC;MACb,OAAOE,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;QACzBD,CAAC,GAAGA,CAAC,CAACE,SAAS,CAAC,CAAC,CAAC;;MAEpB,IAAIF,CAAC,CAACG,OAAO,CAACZ,IAAI,CAAC,IAAI,CAAC,EAAE;QACxB,OAAOS,CAAC,CAACE,SAAS,CAACX,IAAI,CAACQ,MAAM,EAAEC,CAAC,CAACD,MAAM,CAAC;;;IAG7C,OAAO,EAAE;EACX;EAEFK,KAAK,CAACC,QAAc;IAClB,OAAO,IAAI,CAACpB,IAAI,CAACqB,IAAI,CAAC,GAAG,IAAI,CAACC,QAAQ,QAAQ,EAAE;MAAEC,QAAQ,EAAEH,QAAQ,CAACG,QAAQ;MAAEC,QAAQ,EAAEJ,QAAQ,CAACI;IAAQ,CAAC,EAAE,IAAI,CAACC,WAAW,CAAC;EAChI;EAEAC,QAAQ,CAACN,QAAc;IACrB,OAAO,IAAI,CAACpB,IAAI,CAACqB,IAAI,CAAC,GAAG,IAAI,CAACC,QAAQ,WAAW,EAAE;MAAEC,QAAQ,EAAEH,QAAQ,CAACG,QAAQ;MAAEC,QAAQ,EAAEJ,QAAQ,CAACI;IAAQ,CAAC,CAAC;EACjH;EAEAG,UAAU;IACR,OAAO,IAAI,CAACvB,UAAU,CAAC,OAAO,CAAC,IAAI,0BAAI,6BAA2B,IAAI;EACxE;;AArCWN,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAA8B,SAAX9B,WAAW;EAAA+B,YAFV;AAAM","names":["HttpHeaders","BehaviorSubject","AuthService","constructor","http","asObservable","headers","withCredentials","getCookies","cname","name","decodedCookie","decodeURIComponent","document","cookie","ca","split","i","length","c","charAt","substring","indexOf","login","userData","post","endpoint","username","password","httpOptions","register","isLoggedIn","factory","providedIn"],"sourceRoot":"","sources":["/Users/ludmilamalomuz/Desktop/Frontend projects/coffeeapp-pwa/coffeeapp2/src/app/auth.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { User } from './logic/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  #userBehaviourSubject = new BehaviorSubject<User | null>(null);\n  public userObject$ = this.#userBehaviourSubject.asObservable();\n  constructor(private http: HttpClient) { }\n  httpOptions = {\n    headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    }),\n    withCredentials: true\n  }\n  endpoint = 'http://localhost:/3000'\n  getCookies(cname: string){\n      let name = cname + \"=\";\n      let decodedCookie = decodeURIComponent(document.cookie);\n      let ca = decodedCookie.split(';');\n      for(let i = 0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) == ' ') {\n          c = c.substring(1);\n        }\n        if (c.indexOf(name) == 0) {\n          return c.substring(name.length, c.length);\n        }\n      }\n      return \"\";\n    }\n\n  login(userData: User){\n    return this.http.post(`${this.endpoint}/login`, { username: userData.username, password: userData.password}, this.httpOptions);\n  }\n\n  register(userData: User){\n    return this.http.post(`${this.endpoint}/register`, { username: userData.username, password: userData.password});\n  }\n\n  isLoggedIn(){\n    return this.getCookies('token') && this.#userBehaviourSubject !== null;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}