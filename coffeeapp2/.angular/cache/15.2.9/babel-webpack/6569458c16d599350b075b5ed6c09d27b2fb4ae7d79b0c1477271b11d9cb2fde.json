{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../geo-location.service\";\nimport * as i4 from \"../auth.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/card\";\nfunction ListComponent_mat_card_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-card-subtitle\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-card-actions\")(6, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ListComponent_mat_card_0_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const coffee_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.goToMap(coffee_r1));\n    });\n    i0.ɵɵelementStart(7, \"mat-icon\");\n    i0.ɵɵtext(8, \"map\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ListComponent_mat_card_0_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const coffee_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.shareCoffee(coffee_r1));\n    });\n    i0.ɵɵelementStart(10, \"mat-icon\");\n    i0.ɵɵtext(11, \"share\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ListComponent_mat_card_0_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const coffee_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.goToDetails(coffee_r1));\n    });\n    i0.ɵɵelementStart(13, \"mat-icon\");\n    i0.ɵɵtext(14, \"list\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ListComponent_mat_card_0_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const coffee_r1 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deleteCoffee(coffee_r1));\n    });\n    i0.ɵɵelementStart(16, \"mat-icon\");\n    i0.ɵɵtext(17, \"delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const coffee_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(coffee_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Place: \", coffee_r1.place, \"\");\n  }\n}\nexport class ListComponent {\n  constructor(data, router, geolocation, auth) {\n    this.data = data;\n    this.router = router;\n    this.geolocation = geolocation;\n    this.auth = auth;\n  }\n  ngOnInit() {\n    this.auth.userObject$.subscribe(user => {\n      console.log(user);\n      if (user) {\n        this.currentUser = user;\n        this.data.getList(user._id, list => {\n          this.coffeeList = list;\n        });\n      }\n    });\n    window.addEventListener('online', this.handleOnlineIndexDB);\n  }\n  goToDetails(coffee) {\n    if (coffee._id) {\n      this.data.getCoffee(coffee._id, () => this.router.navigate([\"/coffee\", coffee._id]));\n    }\n  }\n  goToMap(coffee) {\n    if (coffee.location) {\n      const mapLink = this.geolocation.getMapLink(coffee.location);\n      location.href = mapLink;\n    }\n  }\n  deleteCoffee(coffee) {\n    this.data.deleteCoffee(coffee, result => console.log(result));\n  }\n  shareCoffee(coffee) {\n    const shareText = `I had thid ${coffee.name} at ${coffee.place} and I give it ${coffee.rating} stars`;\n    if ('share' in navigator) {\n      navigator.share({\n        title: coffee.name,\n        text: shareText,\n        url: window.location.href\n      }).then(() => console.log(\"shared\")).catch(err => console.error(err));\n    } else {\n      const shareURL = `whatsapp://send?text=${encodeURIComponent(shareText)}`;\n      location.href = shareURL;\n    }\n  }\n  handleOnlineIndexDB() {\n    const request = indexedDB.open(\"coffees\");\n    request.onerror = error => {\n      reportError(request.error);\n    };\n    request.onsuccess = event => {\n      const db = request.result;\n      const tx = db.transaction([\"coffees\"], \"readonly\");\n      const coffeeStore = tx.objectStore(\"coffees\");\n      const coffeeValues = coffeeStore.getAll();\n      if (coffeeValues) {\n        this.coffeeList = this.coffeeList.concat(coffeeValues);\n      }\n    };\n  }\n}\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.GeoLocationService), i0.ɵɵdirectiveInject(i4.AuthService));\n};\nListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"app-list\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"id\", \"btn-create\", \"mat-fab\", \"\", \"routerLink\", \"/coffee\"], [\"mat-button\", \"\", 3, \"click\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ListComponent_mat_card_0_Template, 18, 2, \"mat-card\", 0);\n      i0.ɵɵelementStart(1, \"a\", 1)(2, \"mat-icon\");\n      i0.ɵɵtext(3, \"create\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.coffeeList);\n    }\n  },\n  dependencies: [i2.RouterLink, i5.NgForOf, i6.MatButton, i6.MatFabAnchor, i7.MatIcon, i8.MatCard, i8.MatCardActions, i8.MatCardSubtitle, i8.MatCardTitle],\n  styles: [\"#btn-create[_ngcontent-%COMP%]{\\n    position: fixed;\\n    right: 20px;\\n    bottom: 20px;\\n}\\nmat-card[_ngcontent-%COMP%]{\\n    padding: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGlzdC9saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsV0FBVztJQUNYLFlBQVk7QUFDaEI7QUFDQTtJQUNJLGFBQWE7QUFDakIiLCJzb3VyY2VzQ29udGVudCI6WyIjYnRuLWNyZWF0ZXtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgcmlnaHQ6IDIwcHg7XG4gICAgYm90dG9tOiAyMHB4O1xufVxubWF0LWNhcmR7XG4gICAgcGFkZGluZzogMjBweDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ListComponent","constructor","data","router","geolocation","auth","ngOnInit","userObject$","subscribe","user","console","log","currentUser","getList","_id","list","coffeeList","window","addEventListener","handleOnlineIndexDB","goToDetails","coffee","getCoffee","navigate","goToMap","location","mapLink","getMapLink","href","deleteCoffee","result","shareCoffee","shareText","name","place","rating","navigator","share","title","text","url","then","catch","err","error","shareURL","encodeURIComponent","request","indexedDB","open","onerror","reportError","onsuccess","event","db","tx","transaction","coffeeStore","objectStore","coffeeValues","getAll","concat","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/ludmilamalomuz/Desktop/Frontend projects/coffeeapp-pwa/coffeeapp2/src/app/list/list.component.html","/Users/ludmilamalomuz/Desktop/Frontend projects/coffeeapp-pwa/coffeeapp2/src/app/list/list.component.ts"],"sourcesContent":["<mat-card *ngFor=\"let coffee of coffeeList\">\n    <mat-card-title>{{ coffee.name }}</mat-card-title>\n    <mat-card-subtitle>Place: {{ coffee.place }}</mat-card-subtitle>\n    <mat-card-actions>\n        <button mat-button (click)=\"goToMap(coffee)\"><mat-icon>map</mat-icon></button>\n        <button mat-button (click)=\"shareCoffee(coffee)\"><mat-icon>share</mat-icon></button>\n        <button mat-button (click)=\"goToDetails(coffee)\"><mat-icon>list</mat-icon></button>\n        <button mat-button (click)=\"deleteCoffee(coffee)\"><mat-icon>delete</mat-icon></button>\n    </mat-card-actions>  \n</mat-card>\n \n<a id=\"btn-create\" mat-fab routerLink=\"/coffee\"><mat-icon>create</mat-icon></a>\n\n","import { Component } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Coffee } from '../logic/Coffee';\nimport { Router } from '@angular/router';\nimport { GeoLocationService } from '../geo-location.service';\nimport { AuthService } from '../auth.service';\nimport { User } from '../logic/User';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent {\n  coffeeList!: Coffee[];\n  currentUser!: User;\n  constructor(private data: DataService, private router: Router,\n    private geolocation: GeoLocationService, private auth: AuthService){ }\n\n  ngOnInit(){\n    this.auth.userObject$.subscribe(user => {\n      console.log(user);\n      if (user){\n        this.currentUser = user;\n        this.data.getList(user._id, (list: Coffee[]) => {\n          this.coffeeList = list;\n        });\n      }\n    })\n    \n    window.addEventListener('online', this.handleOnlineIndexDB);\n  }\n\n  goToDetails(coffee: Coffee){\n    if (coffee._id){\n      this.data.getCoffee(coffee._id, () => this.router.navigate([\"/coffee\", coffee._id]))\n    }\n  }\n\n  goToMap(coffee: Coffee){\n    if (coffee.location){\n      const mapLink = this.geolocation.getMapLink(coffee.location);\n      location.href = mapLink;\n    }\n  }\n\n  deleteCoffee(coffee: Coffee){\n    this.data.deleteCoffee(coffee, (result: any) => console.log(result));\n  }\n\n  shareCoffee(coffee: Coffee){\n    const shareText = `I had thid ${coffee.name} at ${coffee.place} and I give it ${coffee.rating} stars`\n    if ('share' in navigator){\n      navigator.share({\n        title: coffee.name,\n        text: shareText,\n        url: window.location.href\n      }).then(() => console.log(\"shared\")).catch(err => console.error(err));\n    }else{\n      const shareURL = `whatsapp://send?text=${encodeURIComponent(shareText)}`\n      location.href = shareURL;\n    }\n  }\n\n  handleOnlineIndexDB(){\n    const request = indexedDB.open(\"coffees\");\n    request.onerror = (error) => {\n      reportError(request.error);\n    }\n    request.onsuccess = (event: any) => {\n      const db = request.result;\n      const tx = db.transaction([\"coffees\"], \"readonly\");\n      const coffeeStore = tx.objectStore(\"coffees\");\n      const coffeeValues = coffeeStore.getAll() as unknown as Coffee[];\n      if (coffeeValues){\n        this.coffeeList = this.coffeeList.concat(coffeeValues);\n      }    \n  }\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}