{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthCheckGuard {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.auth.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\nAuthCheckGuard.ɵfac = function AuthCheckGuard_Factory(t) {\n  return new (t || AuthCheckGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthCheckGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthCheckGuard,\n  factory: AuthCheckGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,cAAc;EACzBC,YAAoBC,IAAiB,EAAUC,MAAc;IAAzC,SAAI,GAAJD,IAAI;IAAuB,WAAM,GAANC,MAAM;EAAU;EAC/DC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IACxB,IAAI,IAAI,CAACJ,IAAI,CAACK,UAAU,EAAE,EAAC;MACzB,OAAO,IAAI;KACZ,MAAI;MACH,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAElB;;AAXWR,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAS,SAAdT,cAAc;EAAAU,YAFb;AAAM","names":["AuthCheckGuard","constructor","auth","router","canActivate","route","state","isLoggedIn","navigate","factory","providedIn"],"sourceRoot":"","sources":["/Users/ludmilamalomuz/Desktop/Frontend projects/coffeeapp-pwa/coffeeapp2/src/app/authCheckFunction.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthCheckGuard implements CanActivate {\n  constructor(private auth: AuthService, private router: Router){}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if (this.auth.isLoggedIn()){\n        return true;\n      }else{\n        this.router.navigate(['/login']);\n        return false;\n      }\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}