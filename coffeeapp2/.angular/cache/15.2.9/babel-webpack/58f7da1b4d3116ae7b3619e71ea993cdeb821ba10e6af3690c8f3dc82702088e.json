{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgModule, isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { GeoLocationService } from './geo-location.service';\nimport { DataService } from './data.service';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport 'hammerjs';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { ListComponent } from './list/list.component';\nimport { CoffeeComponent } from './coffee/coffee.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { LoginComponent } from './login/login.component';\nimport { authCheckFunction } from './authCheckFunction';\nimport { RegisterComponent } from './register/register.component';\nconst routes = [{\n  path: \"\",\n  canActivate: [authCheckFunction()],\n  component: ListComponent\n}, {\n  path: \"coffee\",\n  component: CoffeeComponent\n}, {\n  path: \"coffee/:id\",\n  component: CoffeeComponent\n}, {\n  path: \"login\",\n  component: LoginComponent\n}, {\n  path: \"register\",\n  component: RegisterComponent\n}];\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent, ListComponent, CoffeeComponent, LoginComponent, RegisterComponent],\n  imports: [RouterModule.forRoot(routes), ReactiveFormsModule, FormsModule, BrowserModule, BrowserAnimationsModule, MatToolbarModule, HttpClientModule, ServiceWorkerModule, MatButtonModule, MatInputModule, MatIconModule, MatFormFieldModule, MatInputModule, MatSelectModule, MatSliderModule, MatSlideToggleModule, MatCardModule, MatSnackBarModule, ServiceWorkerModule.register('ngsw-worker.js', {\n    enabled: !isDevMode(),\n    // Register the ServiceWorker as soon as the application is stable\n    // or after 30 seconds (whichever comes first).\n    registrationStrategy: 'registerWhenStable:30000'\n  })],\n  providers: [GeoLocationService, DataService, BrowserAnimationsModule],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":{"version":3,"mappings":";AAAA,SAAoBA,QAAQ,EAAEC,SAAS,QAAQ,eAAe;AAE9D,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,kBAAkB,QAAQ,wBAAwB;AAC3D,SAAQC,WAAW,QAAO,gBAAgB;AAC1C,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,uBAAuB,QAAQ,sCAAsC;AAC9E,OAAO,UAAU;AACjB,SAASC,eAAe,QAAO,0BAA0B;AACzD,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,eAAe,QAAO,0BAA0B;AACzD,SAASC,gBAAgB,QAAS,2BAA2B;AAC7D,SAASC,oBAAoB,QAAQ,gCAAgC;AACrE,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,kBAAkB,QAAO,8BAA8B;AAChE,SAASC,iBAAiB,QAAQ,6BAA6B;AAC/D,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAAiBC,YAAY,QAAQ,iBAAiB;AACtD,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,gBAAgB;AACjE,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAAUC,iBAAiB,QAAQ,qBAAqB;AACxD,SAASC,iBAAiB,QAAQ,+BAA+B;AAEjE,MAAMC,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,WAAW,EAAE,CAACJ,iBAAiB,EAAE,CAAC;EAAEK,SAAS,EAAEb;AAAa,CAAC,EACzE;EAAEW,IAAI,EAAE,QAAQ;EAAEE,SAAS,EAAEZ;AAAe,CAAC,EAC7C;EAACU,IAAI,EAAE,YAAY;EAAEE,SAAS,EAAEZ;AAAe,CAAC,EAChD;EAACU,IAAI,EAAE,OAAO;EAAEE,SAAS,EAAEN;AAAc,CAAC,EAC1C;EAACI,IAAI,EAAE,UAAU;EAAEE,SAAS,EAAEJ;AAAiB,CAAC,CACjD;AAiCM,IAAMK,SAAS,GAAf,MAAMA,SAAS,GAAI;AAAbA,SAAS,eA/BrB/B,QAAQ,CAAC;EACRgC,YAAY,EAAE,CACZ3B,YAAY,EACZY,aAAa,EACbC,eAAe,EACfM,cAAc,EACdE,iBAAiB,CAClB;EACDO,OAAO,EAAE,CACPd,YAAY,CAACe,OAAO,CAACP,MAAM,CAAC,EAC5BN,mBAAmB,EACnBD,WAAW,EACXlB,aAAa,EACbI,uBAAuB,EACvBM,gBAAgB,EAChBU,gBAAgB,EAChBC,mBAAmB,EACnBhB,eAAe,EAAEE,cAAc,EAAED,aAAa,EAAEO,kBAAkB,EAAEN,cAAc,EAAEC,eAAe,EAAEC,eAAe,EACpHE,oBAAoB,EAAEC,aAAa,EAAEE,iBAAiB,EACtDO,mBAAmB,CAACY,QAAQ,CAAC,gBAAgB,EAAE;IACjDC,OAAO,EAAE,CAACnC,SAAS,EAAE;IACrB;IACA;IACAoC,oBAAoB,EAAE;GACvB,CAAC,CACC;EACDC,SAAS,EAAE,CACTnC,kBAAkB,EAAEC,WAAW,EAC/BE,uBAAuB,CAAC;EAC1BiC,SAAS,EAAE,CAAClC,YAAY;CACzB,CAAC,GACW0B,SAAS,CAAI;SAAbA,SAAS","names":["NgModule","isDevMode","BrowserModule","GeoLocationService","DataService","AppComponent","BrowserAnimationsModule","MatButtonModule","MatIconModule","MatInputModule","MatSelectModule","MatSliderModule","MatToolbarModule","MatSlideToggleModule","MatCardModule","MatFormFieldModule","MatSnackBarModule","ListComponent","CoffeeComponent","RouterModule","FormsModule","ReactiveFormsModule","HttpClientModule","ServiceWorkerModule","LoginComponent","authCheckFunction","RegisterComponent","routes","path","canActivate","component","AppModule","declarations","imports","forRoot","register","enabled","registrationStrategy","providers","bootstrap"],"sourceRoot":"","sources":["/Users/ludmilamalomuz/Desktop/Frontend projects/coffeeapp-pwa/coffeeapp2/src/app/app.module.ts"],"sourcesContent":["import { Component, NgModule, isDevMode } from '@angular/core';\nimport { environment } from '../environment';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { GeoLocationService } from './geo-location.service';\nimport {DataService} from './data.service'\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport 'hammerjs'\nimport { MatButtonModule} from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule }from '@angular/material/slider';\nimport { MatToolbarModule }  from '@angular/material/toolbar';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule} from '@angular/material/form-field';\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\nimport { ListComponent } from './list/list.component';\nimport { CoffeeComponent } from './coffee/coffee.component'\nimport { Routes, RouterModule } from '@angular/router'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { LoginComponent } from './login/login.component';\nimport {  authCheckFunction } from './authCheckFunction';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  { path: \"\", canActivate: [authCheckFunction()], component: ListComponent},\n  { path: \"coffee\", component: CoffeeComponent},\n  {path: \"coffee/:id\", component: CoffeeComponent},\n  {path: \"login\", component: LoginComponent},\n  {path: \"register\", component: RegisterComponent}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    CoffeeComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    RouterModule.forRoot(routes),\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    HttpClientModule,\n    ServiceWorkerModule,\n    MatButtonModule, MatInputModule, MatIconModule, MatFormFieldModule, MatInputModule, MatSelectModule, MatSliderModule,\n    MatSlideToggleModule, MatCardModule, MatSnackBarModule, \n    ServiceWorkerModule.register('ngsw-worker.js', {\n  enabled: !isDevMode(),\n  // Register the ServiceWorker as soon as the application is stable\n  // or after 30 seconds (whichever comes first).\n  registrationStrategy: 'registerWhenStable:30000'\n}),\n  ],\n  providers: [\n    GeoLocationService, DataService,\n    BrowserAnimationsModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}