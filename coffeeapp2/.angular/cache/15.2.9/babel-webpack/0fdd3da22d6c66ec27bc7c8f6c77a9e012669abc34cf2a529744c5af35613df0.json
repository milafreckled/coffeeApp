{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n    this.endpoint = '192.168.8.4:3000/';\n  }\n  getList(callback) {\n    this.http.get(`${this.endpoint}/coffees`).subscribe(response => {\n      console.log(response);\n      callback(response);\n    });\n    // const list = [\n    //   new Coffee('Double Espresso', 'Niewylej', new PlaceLocation(\"ul. Żwirki i Wigury 4\", \"Lublin\")),\n    //   new Coffee('Caramel Latte', 'Heca', new PlaceLocation(\"ul. Hipoteczna 5\", \"Lublin\"))\n    // ]\n    // callback(list);\n  }\n\n  getCoffee(_id, callback) {\n    this.http.get(`${this.endpoint}/coffees/${_id}`).subscribe(response => {\n      console.log(response);\n      callback(response);\n    });\n  }\n  save(coffee, callback) {\n    if (coffee._id) {\n      // it's an update\n      this.http.put(`${this.endpoint}/coffees/${coffee._id}`, coffee).subscribe(response => callback(true));\n    } else {\n      // it's an insert\n      this.http.post(`${this.endpoint}/coffees`, coffee).subscribe(response => callback(true));\n    }\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IACjB,aAAQ,GAAG,mBAAmB;EADG;EAGxCC,OAAO,CAACC,QAAkB;IACxB,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACC,QAAQ,UAAU,CAAC,CACvCC,SAAS,CAAEC,QAAa,IAAI;MAC5BC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBJ,QAAQ,CAACI,QAAQ,CAAC;IACtB,CAAC,CAAC;IACA;IACA;IACA;IACA;IACA;EACF;;EAEAG,SAAS,CAACC,GAAW,EAAER,QAAkB;IACvC,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACC,QAAQ,YAAYM,GAAG,EAAE,CAAC,CACrDL,SAAS,CAAEC,QAAa,IAAI;MAC7BC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBJ,QAAQ,CAACI,QAAQ,CAAC;IACpB,CAAC,CAAC;EACN;EAEEK,IAAI,CAACC,MAAW,EAAEV,QAAkB;IAClC,IAAIU,MAAM,CAACF,GAAG,EAAC;MACb;MACA,IAAI,CAACV,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACT,QAAQ,YAAYQ,MAAM,CAACF,GAAG,EAAE,EAAEE,MAAM,CAAC,CAC7DP,SAAS,CAAEC,QAAa,IAAKJ,QAAQ,CAAC,IAAI,CAAC,CAAC;KAC/C,MAAI;MACH;MACA,IAAI,CAACF,IAAI,CAACc,IAAI,CAAC,GAAG,IAAI,CAACV,QAAQ,UAAU,EAAEQ,MAAM,CAAC,CAChDP,SAAS,CAAEC,QAAa,IAAKJ,QAAQ,CAAC,IAAI,CAAC,CAAC;;EAElD;;AApCWJ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAiB,SAAXjB,WAAW;EAAAkB,YAFV;AAAM","names":["DataService","constructor","http","getList","callback","get","endpoint","subscribe","response","console","log","getCoffee","_id","save","coffee","put","post","factory","providedIn"],"sourceRoot":"","sources":["/Users/ludmilamalomuz/Desktop/Frontend projects/coffeeapp2/src/app/data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Coffee } from './logic/Coffee';\nimport { PlaceLocation } from './logic/PlaceLocation';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n  public endpoint = '192.168.8.4:3000/';\n\n  getList(callback: Function){\n    this.http.get(`${this.endpoint}/coffees`)\n     .subscribe((response: any) => {\n      console.log(response)\n      callback(response)\n  })\n    // const list = [\n    //   new Coffee('Double Espresso', 'Niewylej', new PlaceLocation(\"ul. Żwirki i Wigury 4\", \"Lublin\")),\n    //   new Coffee('Caramel Latte', 'Heca', new PlaceLocation(\"ul. Hipoteczna 5\", \"Lublin\"))\n    // ]\n    // callback(list);\n  }\n\n  getCoffee(_id: string, callback: Function){\n    this.http.get<Coffee>(`${this.endpoint}/coffees/${_id}`)\n      .subscribe((response: any) => {\n      console.log(response)\n      callback(response)\n    })\n}\n\n  save(coffee: any, callback: Function){\n    if (coffee._id){\n      // it's an update\n      this.http.put(`${this.endpoint}/coffees/${coffee._id}`, coffee)\n       .subscribe((response: any) => callback(true))\n    }else{\n      // it's an insert\n      this.http.post(`${this.endpoint}/coffees`, coffee)\n       .subscribe((response: any) => callback(true))\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}