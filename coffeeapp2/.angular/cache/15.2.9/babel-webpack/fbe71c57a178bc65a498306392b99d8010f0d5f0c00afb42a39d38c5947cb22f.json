{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { GeoLocationService } from './geo-location.service';\nimport { DataService } from './data.service';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport 'hammerjs';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { ListComponent } from './list/list.component';\nimport { CoffeeComponent } from './coffee/coffee.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nconst routes = [{\n  path: \"\",\n  component: ListComponent\n}, {\n  path: \"coffee\",\n  component: CoffeeComponent\n}, {\n  path: \"coffee/:id\",\n  component: CoffeeComponent\n}];\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent, ListComponent, CoffeeComponent],\n  imports: [RouterModule.forRoot(routes), FormsModule, BrowserModule, BrowserAnimationsModule, MatToolbarModule, HttpClientModule, MatButtonModule, MatInputModule, MatIconModule, MatFormFieldModule, MatInputModule, MatSelectModule, MatSliderModule, MatSlideToggleModule, MatCardModule, MatSnackBarModule, ServiceWorkerModule.register('ngsw-worker.js', {\n    enabled: true\n    // // Register the ServiceWorker as soon as the application is stable\n    // // or after 30 seconds (whichever comes first).\n    // registrationStrategy: 'registerWhenStable:30000'\n  })],\n\n  providers: [\n  // {\n  //   provide: SwRegistrationOptions,\n  //   useFactory: () => ({ enabled: environment.production }),\n  // },\n  GeoLocationService, DataService, BrowserAnimationsModule],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}